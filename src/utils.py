# src/utils.py - –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
import os
import uuid
from PIL import Image
import streamlit as st
from typing import List, Dict, Any

def save_uploaded_file(uploaded_file) -> str:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
    file_extension = os.path.splitext(uploaded_file.name)[1]
    filename = f"{uuid.uuid4()}{file_extension}"
    
    from config import UPLOAD_DIR
    filepath = UPLOAD_DIR / filename
    
    with open(filepath, "wb") as f:
        f.write(uploaded_file.getbuffer())
    
    return str(filepath)

def validate_image(file) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    from config import ALLOWED_EXTENSIONS, MAX_UPLOAD_SIZE
    
    _, ext = os.path.splitext(file.name)
    if ext.lower() not in ALLOWED_EXTENSIONS:
        return False
    
    if file.size > MAX_UPLOAD_SIZE * 1024 * 1024:
        return False
    
    return True

def create_result_summary(results: List[Dict[str, Any]]) -> Dict[str, Any]:
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π —Å–≤–æ–¥–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    total_bubbles = len(results)
    successful_ocr = sum(1 for r in results if r.get('original_text', '').strip())
    successful_translation = sum(1 for r in results if r.get('translated_text', '').strip())
    
    return {
        'total_bubbles': total_bubbles,
        'successful_ocr': successful_ocr,
        'successful_translation': successful_translation,
        'ocr_success_rate': (successful_ocr / total_bubbles * 100) if total_bubbles > 0 else 0,
        'translation_success_rate': (successful_translation / total_bubbles * 100) if total_bubbles > 0 else 0
    }

def get_language_flag(lang_code: str) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞ –¥–ª—è —è–∑—ã–∫–∞"""
    flags = {
        'ja': 'üáØüáµ',
        'ko': 'üá∞üá∑', 
        'zh': 'üá®üá≥',
        'en': 'üá∫üá∏',
        'ru': 'üá∑üá∫'
    }
    return flags.get(lang_code, '‚ùì')

def get_language_name(lang_code: str) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —è–∑—ã–∫–∞"""
    names = {
        'ja': '–Ø–ø–æ–Ω—Å–∫–∏–π',
        'ko': '–ö–æ—Ä–µ–π—Å–∫–∏–π', 
        'zh': '–ö–∏—Ç–∞–π—Å–∫–∏–π',
        'en': '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
        'ru': '–†—É—Å—Å–∫–∏–π'
    }
    return names.get(lang_code, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')