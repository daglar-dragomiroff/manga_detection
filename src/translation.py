# src/translation.py - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
from deep_translator import GoogleTranslator
from typing import Optional

class TextTranslator:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞"""
        # –ú–∞–ø–ø–∏–Ω–≥ –∫–æ–¥–æ–≤ —è–∑—ã–∫–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å deep-translator
        self.language_mapping = {
            'zh': 'zh-cn',  # –ö–ò–¢–ê–ô–°–ö–ò–ô: zh ‚Üí zh-cn (–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï!)
            'ja': 'ja',     # —è–ø–æ–Ω—Å–∫–∏–π –æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å
            'ko': 'ko',     # –∫–æ—Ä–µ–π—Å–∫–∏–π –æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å
            'en': 'en',     # –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å
            'ru': 'ru'      # —Ä—É—Å—Å–∫–∏–π –æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å
        }
    
    def translate(self, text: str, source_lang: str, target_lang: str) -> str:
        """
        –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –º–∞–ø–ø–∏–Ω–≥–æ–º –¥–ª—è –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
        
        Args:
            text: —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
            source_lang: –∏—Å—Ö–æ–¥–Ω—ã–π —è–∑—ã–∫ (zh, ja, ko, en, ru)
            target_lang: —Ü–µ–ª–µ–≤–æ–π —è–∑—ã–∫ (zh, ja, ko, en, ru)
            
        Returns:
            –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        """
        if not text or not text.strip():
            return ""
        
        # –ï—Å–ª–∏ —è–∑—ã–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ - –Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º
        if source_lang == target_lang:
            return text
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∞–ø–ø–∏–Ω–≥ –∫–æ–¥–æ–≤ —è–∑—ã–∫–æ–≤
        mapped_source = self.language_mapping.get(source_lang, source_lang)
        mapped_target = self.language_mapping.get(target_lang, target_lang)
        
        # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
        print(f"üåê –ü–µ—Ä–µ–≤–æ–¥: {source_lang}({mapped_source}) ‚Üí {target_lang}({mapped_target})")
        print(f"üìù –¢–µ–∫—Å—Ç: '{text}'")
        
        try:
            translator = GoogleTranslator(
                source=mapped_source,
                target=mapped_target
            )
            result = translator.translate(text)
            
            if result and result != text:
                print(f"‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: '{result}'")
                return result
            else:
                print(f"‚ö†Ô∏è –ü–µ—Ä–µ–≤–æ–¥ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è")
                return text
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {e}")
            # –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π
            return self._translate_alternative(text, source_lang, target_lang)
    
    def _translate_alternative(self, text: str, source_lang: str, target_lang: str) -> str:
        """
        –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ä–∞–∑–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ
        """
        print("üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–≤–æ–¥–∞...")
        
        # –î–ª—è –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–¥–æ–≤
        if source_lang == 'zh':
            chinese_variants = ['zh-cn', 'zh', 'chinese (simplified)', 'chinese']
            
            for variant in chinese_variants:
                try:
                    print(f"üîÑ –ü—Ä–æ–±—É–µ–º –∫–æ–¥ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ: '{variant}'")
                    translator = GoogleTranslator(source=variant, target=target_lang)
                    result = translator.translate(text)
                    
                    if result and result != text:
                        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å –∫–æ–¥–æ–º '{variant}': '{result}'")
                        return result
                        
                except Exception as e:
                    print(f"‚ùå –ö–æ–¥ '{variant}' –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
                    continue
            
            print(f"‚ö†Ô∏è –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª")
            return text
        
        # –î–ª—è –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥
        try:
            translator = GoogleTranslator(source=source_lang, target=target_lang)
            result = translator.translate(text)
            return result if result else text
        except Exception as e:
            print(f"‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
            return text