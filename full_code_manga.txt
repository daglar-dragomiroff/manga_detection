Проект: manga_detection_4
├── README.md
├── __pycache__
│   └── config.cpython-313.pyc
├── app.py
├── bundle_project.py
├── config.py
├── data
│   ├── outputs
│   ├── sample_images
│   └── uploads
│       ├── 00090717-b53b-43bf-800f-ff30823092c9.png
│       ├── 00d75707-6deb-4ae9-bd3d-055596ee7bee.jpg
│       ├── 013da0b0-3766-4c4c-85fa-b1b80eb9d81e.png
│       ├── 01b3627e-a3bb-4bd1-90a3-6529a37de481.png
│       ├── 0246a631-bfb9-47fd-bf74-77ebea8b0d57.png
│       ├── 02ab4ded-f1bc-49d2-a5c4-0937e2979df8.jpg
│       ├── 050362e5-c592-4ed5-a290-555caf9af9d2.jpg
│       ├── 05416c48-6b68-41bf-8499-a8c112721a89.png
│       ├── 05e46691-73e3-4f8e-a69e-18f11b95f17d.png
│       ├── 068f936a-7228-4195-b652-f066e88d9f17.png
│       ├── 076a86fe-1554-405d-9482-fcdbb98e728e.jpg
│       ├── 079e4461-1f68-4cea-a8b2-b40b0f5b9d30.png
│       ├── 07e905b5-d576-4d6c-b11f-aecc473a20a7.jpg
│       ├── 089e2e10-0dba-450a-bd46-1aea0809d49b.jpg
│       ├── 091c0eac-f0c5-4025-818c-5ab9ca73052a.png
│       ├── 098bdb12-3f7c-4d89-9983-ec701bc2653b.jpg
│       ├── 0b1058ac-53c3-4fed-92d3-2bcad77bdda0.png
│       ├── 0b297fed-94e8-4b1d-bd8b-9160307def9f.jpg
│       ├── 0b6710b5-9d5a-4713-910a-b98a9bb36af1.jpg
│       ├── 0bb0209b-882b-44fa-b2ea-af93bcdc18f3.png
│       ├── 0cf1520d-f260-49dd-a5fe-0055e2931251.png
│       ├── 0cf34028-ce25-48d6-8533-374b1fa6bb93.png
│       ├── 0d7878f0-fa6f-4e1a-997d-ab94d450dffa.png
│       ├── 0d8579f8-f3f8-454e-8a9a-edc4173f4c82.jpg
│       ├── 0e7bf44d-f062-4fee-ba11-68c6f3c4727f.png
│       ├── 0f263b4c-c7dd-4867-88d0-59515ce6c9c1.jpg
│       ├── 0fc0fa25-091b-44f0-a895-e9feb324e43d.png
│       ├── 10ac295f-bb3b-4457-84bb-b8c1adfb59b7.jpg
│       ├── 10bd9100-b311-44bf-bd88-f848dc23381e.png
│       ├── 10bfda98-b12f-451a-9dee-ede560f30fca.png
│       ├── 1178de82-c33d-4e8e-ba9d-01d0437e4c60.jpg
│       ├── 11bf8a3e-58d7-43e5-b9c1-eb30707c0700.jpg
│       ├── 11d10c1d-4367-488c-928a-abade3e37985.png
│       ├── 11f63c24-5d76-43e6-a797-e91bbe034a66.jpg
│       ├── 125b458e-7ccc-47ee-a495-cd87d2eae167.jpg
│       ├── 126a2998-7753-41c6-9963-d91afa7740ec.jpg
│       ├── 14969949-02ab-4533-85d2-4a7229844ba1.jpg
│       ├── 151a94d2-2bee-4d7b-8469-3c02b09bbadf.png
│       ├── 15f505c8-8614-4cca-9e60-d5a513953339.jpg
│       ├── 164362c7-7389-47c9-9baf-1644df4ffa35.jpg
│       ├── 1664496c-2f8a-4fc2-b7e9-46cfebc2326f.jpg
│       ├── 168591aa-5162-4775-90a6-7534f2e11f95.png
│       ├── 179aa390-f25c-43b3-b117-4d1fd94a587d.jpg
│       ├── 1826e045-115d-40de-b4a7-cd420404a803.jpg
│       ├── 18363df4-7686-4d7d-9b14-387034bc610f.png
│       ├── 18cf15e2-60be-4a41-9619-3ad1a354cc78.png
│       ├── 18d7ab4f-a4cd-41ac-92e7-0268333beb37.jpg
│       ├── 18da8ed3-5f3c-4d95-a433-acfb31107d35.jpg
│       ├── 196435cc-e70e-495f-bfe3-3972038f63c4.png
│       ├── 1971306b-c8f1-4c86-980f-82eb80bb5afa.jpg
│       ├── 1999b360-973f-4847-95cb-f420399f8222.png
│       ├── 1a5e2643-37d4-458d-9216-6d39f7ec2261.jpg
│       ├── 1a669709-f158-48c8-8d43-ed9468b4e7a9.jpg
│       ├── 1beccc9f-5942-4db7-8287-43e3f4c252f3.png
│       ├── 1c053534-2cb7-42ea-8df3-81708ccd70e9.png
│       ├── 1c3968b5-0932-4724-9ba9-68a1db6dfd7c.png
│       ├── 1d84effe-5891-42ef-bc1d-b6a267d9baa5.jpg
│       ├── 1f6d41f4-83f9-4aed-bb70-1c6bb383e046.png
│       ├── 1f804265-7365-4c72-a62e-4fd06c157505.png
│       ├── 21a5a936-dc71-4f4d-bab4-08a3de96c1a7.png
│       ├── 21f29902-1579-490d-9c04-b74db8591b7f.png
│       ├── 221ae171-aa46-4a11-aa40-6e097f02975d.jpg
│       ├── 228a0843-5910-4e4b-9118-cdb456f997c7.png
│       ├── 228af937-5ff7-4a3f-a833-e0b1810d8715.png
│       ├── 22b2442a-e6e9-465b-97d8-35924f8b67c5.png
│       ├── 23c4ce9d-9c85-4124-a3f5-72d889e2f137.png
│       ├── 255feb32-6684-40f9-a8be-46a2973be74c.jpg
│       ├── 268c9d5a-6873-40a1-82b5-5d9ec28bed07.png
│       ├── 26ddf5c6-f19e-4172-a131-90c21650e0e9.png
│       ├── 2774ad9a-62b4-44a8-b405-66ede278338b.jpg
│       ├── 2a196931-6798-47d0-a7f9-b5974f938b73.jpg
│       ├── 2aa50fd3-2378-4b16-9fe8-dd0089cd72cf.png
│       ├── 2b5e6804-f830-4801-8d7c-1d4be02db7dc.png
│       ├── 2c43963e-3376-422c-9e92-1d42b8a85785.jpg
│       ├── 2d0db6a1-e13f-47f6-a922-cbcdf34e8a35.png
│       ├── 2d3c2711-6d5c-478a-b622-8133cecff146.png
│       ├── 2d93edc9-d6be-4f78-a2c0-679af270caef.png
│       ├── 2e0da428-002c-4f24-abdc-edd21cfa339d.png
│       ├── 2e74d60e-d60d-49bd-806b-5701082e29b1.jpg
│       ├── 2ed9141b-64a2-43c9-ac26-e5d6427a0013.jpg
│       ├── 2f39568f-06b5-43fa-bf69-9dad23f78be1.png
│       ├── 3052b4ea-4f88-4311-9d67-0beabdb55f85.png
│       ├── 31779db2-79ba-4b44-a763-b2e133d8fc97.png
│       ├── 3231eeb1-ac70-4279-aa44-061a147d8a2a.jpg
│       ├── 324b53be-3b08-4051-92a7-7324b394f94d.png
│       ├── 32741854-ee5a-4258-b93f-087f16ac876d.png
│       ├── 32d15977-907b-4b40-b3e1-1f1527687893.jpg
│       ├── 34f0fa6a-c013-412c-a16f-0e71b57a8fc7.jpg
│       ├── 36c6f8b6-8fee-46fd-901e-0f1e42b8a8b5.jpg
│       ├── 36ffe1e3-ec59-4b6e-af40-cf9f676232ce.png
│       ├── 37b782d0-69f0-4b69-82ac-61931d391ba0.jpg
│       ├── 3809a309-2cc8-40fe-adbc-2a7445b9c4df.jpg
│       ├── 382efcae-5650-437a-803f-83ecc1081425.jpg
│       ├── 3917b977-9735-4b00-856f-93e4636a0305.png
│       ├── 3a002126-d2a7-44c0-99c4-e1036738b000.jpg
│       ├── 3a22a661-5e23-45cc-a6b8-e666a6c2807f.jpg
│       ├── 3affa40b-43a3-412b-87b0-2fd6f27ae825.jpg
│       ├── 3bdfcbc3-a807-460b-bda6-ad595f79d6ad.jpg
│       ├── 3c986756-362b-45d8-9b3d-4ef0172ff0de.png
│       ├── 3e0e73b6-fed0-40ec-885c-9933a1fff1bd.jpg
│       ├── 3f461b9e-d318-4032-a297-6bcfd85ec492.jpg
│       ├── 3fce984f-1fc4-4ed8-94a0-38931c25303c.jpg
│       ├── 41bf7078-3678-47c6-b8e2-632e2ff9402e.jpg
│       ├── 41f6d10a-03ec-47dc-bbff-e209f1e5aa7b.jpg
│       ├── 42658e61-e6d3-43b8-b7f3-ed003e286998.jpg
│       ├── 4323a1e8-8dc1-4002-b8f4-df62de118975.png
│       ├── 458d2e40-36ec-4252-bc03-87044fbe1a56.png
│       ├── 46d08957-2552-4705-9346-a873e076c336.png
│       ├── 46e183f2-9d18-47c5-b679-b37ec3386b36.png
│       ├── 4716c136-d8f3-49d8-98a5-2a126df95f90.jpg
│       ├── 495aef8b-25ac-4cc3-8f2e-271d4745aab1.png
│       ├── 49dc64ed-7406-4253-a462-1e7335495eec.jpg
│       ├── 4a22352f-17fb-4e46-b38a-daef7fb2dab9.jpg
│       ├── 4a63a2e2-12f2-4a7c-827e-9c90afbe26f7.png
│       ├── 4a7dbaf2-c67f-42aa-9d1e-cf86b23da86c.jpg
│       ├── 4abe6a48-7f59-47b9-9284-6279ce507bff.png
│       ├── 4ad138cc-7b6d-4681-9f3c-aa6e207668dc.jpg
│       ├── 4b3caf91-1976-4bf7-a05a-dcba7d708217.jpg
│       ├── 4b84b0a6-00ba-4092-9328-16319fbf406b.png
│       ├── 4baa9682-5e1e-496f-ad6f-fcb49ab36ee9.png
│       ├── 4c665123-ac98-4dcf-bef8-ca5360802076.png
│       ├── 4d679063-3676-479d-9167-ea756f2b349e.jpg
│       ├── 4d7b1cdf-7544-4e9e-b038-61c4aeb7b91e.jpg
│       ├── 4dc5a6cd-6d84-4ddd-83db-41fa1d551a7f.png
│       ├── 4e7fcdf9-a787-43b1-b5aa-52df5b36313a.png
│       ├── 4eae6675-26d6-480a-a110-d8fd5ebb4ef5.png
│       ├── 4eebffb5-5b13-4f77-b0c5-dc300acbcd4b.png
│       ├── 50b19969-5ffb-4edb-807a-4ec9cd4b71ca.jpg
│       ├── 50b681ca-6153-43b7-9420-eb899def399c.png
│       ├── 51cabb53-b198-4aa4-b3cf-c12d450ffb8a.png
│       ├── 5263c818-a5fa-4ff5-8f8d-82d48aeccebb.jpg
│       ├── 528256c3-0338-483f-aecf-afb1314c6426.jpg
│       ├── 537bc2ed-fbe1-48e8-8143-ab6847b5f9dd.png
│       ├── 545a301c-3306-45b5-bc29-b02b3f174744.png
│       ├── 54fdc530-62b5-460b-97d0-5814cdd01984.png
│       ├── 5520c8b9-477b-4026-a122-73c59f4a8c5b.jpg
│       ├── 585c9bec-b281-4e00-8485-0923065aef8d.jpg
│       ├── 5986f2ca-0e42-4a76-9faa-079239cde251.png
│       ├── 59cdb5e0-d41f-4841-9bfa-f3f89c92b404.png
│       ├── 59ce517f-6dcb-4d79-a6c8-003b46223ca7.jpg
│       ├── 5a2aa81b-6f4d-4e76-a9d0-bb2c8c3a036f.jpg
│       ├── 5a5d6794-051c-48b4-9861-13cfb3497764.png
│       ├── 5a67ab08-16b2-4df3-8584-6f7204978352.png
│       ├── 5acd4cb9-4b67-4617-abd7-7487b4fcb504.png
│       ├── 5bcdc427-3a89-41d9-b9ac-c72bd99ec290.jpg
│       ├── 5c7b70c1-11ad-43c8-9831-3cc26b29849c.png
│       ├── 5e4fd065-d4f4-4f20-b2dd-731168833c2d.jpg
│       ├── 5eb545b7-bbc7-4e0a-97a7-4da0e273ab16.jpg
│       ├── 5f348c8e-f67d-4194-bb83-9a2b2938af04.png
│       ├── 609c0552-acd9-4df9-b10b-d39955c0b684.jpg
│       ├── 6177072f-d68d-41b8-98bc-bd9ca59c1e9f.png
│       ├── 61b3b1bd-0e7a-4689-842d-383604e797ee.jpg
│       ├── 61b4bf9e-8c61-4182-8ae9-db663b56bef9.png
│       ├── 62abba69-fed3-4327-9a0a-241fea5fc024.jpg
│       ├── 6429a7a9-72b5-44ce-bf08-868b2707f5dc.png
│       ├── 6591ce9b-39ea-429a-b616-3ec615fb12bb.png
│       ├── 65ab190b-3dd1-4fda-9abf-d5e1f8ce555a.jpg
│       ├── 66304860-9c12-464f-895f-a2a19a637c5c.png
│       ├── 67933b03-6af9-4f3b-9b07-1e45ffbfaf13.jpg
│       ├── 687931cb-b384-458a-810e-5ec69c4da767.png
│       ├── 69811830-5a83-4a21-8ffc-2deed04627f5.png
│       ├── 6a7f4f14-6b7d-4820-8ce7-d0c18af4452e.png
│       ├── 6a84d372-ad99-4ae3-bbbe-2d95cb760a03.jpg
│       ├── 6d450de9-1521-4491-a8e0-80d48317b361.png
│       ├── 6d759596-04e5-4527-ae83-999817fdf3f2.png
│       ├── 6dc57745-bd8c-4127-8602-3d994fc0021d.jpg
│       ├── 6e046e12-57c1-41ae-8db1-6e20d9568010.jpg
│       ├── 6f6d43b8-4d32-4e92-98b0-80c3c57c5984.jpg
│       ├── 6f862360-d091-47d4-a9f4-df2f437b9460.jpg
│       ├── 70bac786-5e56-43ff-a43d-d5dcc251ed09.jpg
│       ├── 71116f54-d456-43ef-af98-0a261b24c458.png
│       ├── 714ac211-3a9f-4a6a-96e0-3e89a75303ac.jpg
│       ├── 71e8ac34-df3b-4325-9cb9-04c0533c6b99.png
│       ├── 721cdbfe-5f0a-4d46-9d20-5fe3624a4160.png
│       ├── 7404516b-49b8-4881-9a82-d9f24cc5f607.png
│       ├── 74520191-b8ae-4782-bf5e-fc67699a6852.jpg
│       ├── 746c3f5e-00ed-4723-b6fb-85ed4c0aa649.jpg
│       ├── 7497aaef-f0eb-4a26-916d-0edecd5ea0d5.png
│       ├── 74d2e68e-eba2-4749-9192-88fcd79cea06.jpg
│       ├── 74db5f57-8f2e-408a-9856-8af67b89799b.jpg
│       ├── 771c6cae-7fa6-48ab-8011-10c4ef14ceff.jpg
│       ├── 77a8e574-9493-4950-a558-c367caa57555.png
│       ├── 77c02077-3016-48f0-9d22-989a57a27ce1.png
│       ├── 7826671e-a04c-4faa-a4fe-56a3cfa601b2.png
│       ├── 78842096-1885-4e8b-9026-ae473ca9d9ba.jpg
│       ├── 79f4f2e9-e6fd-4c22-85c2-a78fc4f3fd8f.jpg
│       ├── 7a22ccce-b6b6-4b8e-bdd1-0fed48ca7532.jpg
│       ├── 7af494ab-35f3-45c3-8526-cde16942a288.jpg
│       ├── 7b756a7a-ff80-46b9-939f-e5f4214afdc6.jpg
│       ├── 7bd6a40b-28dd-45ff-a6e7-cfbbf40db831.jpg
│       ├── 7c74c92e-3602-4cd5-b86f-f86956493444.jpg
│       ├── 7d0b8c89-cb15-4122-a379-7574d40e2f5c.jpg
│       ├── 7d370901-b699-4840-a0bc-31219fa19315.png
│       ├── 7d657e5d-3f2a-41c8-a0cc-3461f91d6d65.png
│       ├── 7e980d60-dea5-4ae0-8443-4eec80136ddd.jpg
│       ├── 8020aec6-2609-46db-bd83-7aadf9b65be6.jpg
│       ├── 81487a8f-23f5-4f29-bf68-aed2330126a9.png
│       ├── 818a8f4b-9b3d-4ea7-98b4-1de5141f89c3.png
│       ├── 81bdc6ad-779a-4bca-9e5b-13e4c5ab2cdc.jpg
│       ├── 821400cd-c711-4722-9821-8cb72b8a12e2.jpg
│       ├── 8323a3ce-8b45-4d7f-a73c-e2e4cda34ffb.png
│       ├── 8380c616-3cb6-4101-bf8e-11cdf0d9a4d5.png
│       ├── 845953a9-3bb1-4dc7-b6f8-806dc313a961.png
│       ├── 85288ace-1e1e-438f-b93f-22c912f6f22c.jpg
│       ├── 858d9d73-ee5d-4160-b9c0-158800028dd8.jpg
│       ├── 87afadcc-b841-4131-ad9c-e4c8478c9daa.png
│       ├── 87b84d55-5a91-446b-85c8-c52e20c127c0.jpg
│       ├── 87f6fdc7-26bf-43ca-858e-9746af6ff4ec.png
│       ├── 892c7aba-22e5-4526-8c0f-fb53c92a3d54.png
│       ├── 895b0cba-0519-4ea6-ab97-04718fe67ced.png
│       ├── 89a752d9-c763-47fb-8c0f-ef46fba3ba8c.jpg
│       ├── 8a9e5b1d-4449-4e60-81a8-269a3aafb166.jpg
│       ├── 8ac348eb-39a0-4b87-906c-47bfbb351b6e.png
│       ├── 8b515383-ca54-4194-b803-a64ab1388a7a.png
│       ├── 8b95d5e9-3c38-47dd-a5a1-879cf2a28c22.jpg
│       ├── 8c444dfd-d1e6-4100-a881-67e4fd0af356.png
│       ├── 8c73956c-f05d-410c-934b-aa8ee0118279.jpg
│       ├── 8cf8f843-d774-4dff-a159-c7707b6afc34.jpg
│       ├── 8d348318-95d2-4fbf-abc4-68587c49ea89.jpg
│       ├── 8e191342-bec4-4bba-a335-d6b450982da4.png
│       ├── 8e486528-36f4-491f-a01e-bbd2e88f8697.png
│       ├── 8e6b7f7e-d449-4192-b578-4c9b598938a2.png
│       ├── 8e6c4db9-0241-431d-8248-8eba3f64b098.jpg
│       ├── 8ec00b49-778f-4a80-8445-6af1657461ba.jpg
│       ├── 8f131070-3eb6-484f-9dfd-ba5f8a60a975.jpg
│       ├── 8fad5bb0-1be4-4196-ad25-9f0aaaa69a47.png
│       ├── 913007c2-0efb-4181-99ea-e6e3304399f5.png
│       ├── 91700ed4-8891-43cf-86b7-d14d99990e1c.jpg
│       ├── 919bfa28-387f-4842-92e0-38b60b163036.png
│       ├── 928104e5-2f9b-4228-92ff-ae385004ddd4.jpg
│       ├── 9325ddf7-46d4-47df-aadb-fb6f47bf9408.jpg
│       ├── 93cbdd3c-a631-43c8-b5dc-d222c816ac67.jpg
│       ├── 940e373b-e89d-4316-b27d-27cbda85310e.png
│       ├── 9428d2bd-bec6-4afb-9691-1edc9e4c6622.png
│       ├── 94347be9-0183-4a25-8f96-1edc30239d21.jpg
│       ├── 94858202-f2f1-4259-859d-f4da518cda48.png
│       ├── 96aca7ac-ce92-44c9-9d66-6eb692e8400e.jpg
│       ├── 974f22b6-9f46-495b-98ff-bb9210a0147b.jpg
│       ├── 976df08d-ebe8-433f-9e1a-7a495b93abbf.jpg
│       ├── 98207d8e-0ea5-4e03-8a42-b0d0ffb83ddf.jpg
│       ├── 9870558c-58c9-4142-b39e-7f1001c82921.jpg
│       ├── 98b7bfd1-e91f-4cd1-92b2-93d38de47ea3.png
│       ├── 99c41a3b-20a5-4d82-a19a-57f1c679d2f9.jpg
│       ├── 9a286bb6-f590-43a7-80a2-df2b824012b5.png
│       ├── 9a2adaca-b37a-4249-897d-6c8b401f80c2.png
│       ├── 9a3bd3ac-f091-4672-8c24-e7142f4a0775.png
│       ├── 9b63171a-db9d-4c7c-9ced-bd53a4926ed5.png
│       ├── 9c488c4a-97da-4982-8082-9a93459d87b9.png
│       ├── 9cd273c8-b918-4b57-ac92-a4b6727fa697.jpg
│       ├── 9d46a8c3-e8ee-42d3-adbb-0f571817af53.png
│       ├── 9d9af44b-c75b-4f45-bd28-490145ec7dcd.jpg
│       ├── 9dcfb35c-a985-445b-9ee8-c207857b0946.jpg
│       ├── 9e71223e-0c65-437c-8dec-6d7298e5b8b7.jpg
│       ├── 9e72480e-9432-4ed9-bba7-087c1f8bd52d.jpg
│       ├── 9ed34c0f-0da0-4ff9-abce-02fdf1fba3e9.png
│       ├── 9f1da09f-6fd8-4baa-b8da-eb30ae3d3645.png
│       ├── 9f5700fa-54e9-4778-bd74-fe93171c7348.png
│       ├── 9f82b477-68d6-4b06-a595-45a40bf3d536.png
│       ├── 9faed51d-0f14-41be-8f4e-50c77b8e4b03.jpg
│       ├── a00e3ac3-410c-453a-9f4f-86668c955828.jpg
│       ├── a07d9b9e-7103-4085-823f-a0a321da0e2c.jpg
│       ├── a0bf094c-00e0-4e5a-8313-796af992c044.png
│       ├── a1eb4d4f-48c9-41d8-8f94-e342b31330b9.png
│       ├── a2bbe9c8-2033-440b-8ddc-65ae7e32856c.jpg
│       ├── a3a41b34-7fd9-4599-b1bd-d8537562ac3d.jpg
│       ├── a5688215-a244-4408-9863-2288c7da9f99.png
│       ├── a59f59e8-fe2e-46b1-8389-3e9e1a018af0.png
│       ├── a5d7d9bb-97a7-4f83-8f9b-ac1990847f04.jpg
│       ├── a7121e45-4350-400a-b8a4-2c8c9978583d.png
│       ├── a738113c-8d9e-41b0-ab98-ee55e7bd5d7d.jpg
│       ├── a77033ee-f6c7-4de6-a592-43056c6f565a.jpg
│       ├── a92de1ed-0d37-4382-8124-18d72fe1bdd1.jpg
│       ├── ad33ed42-481d-4c50-91ae-89e59e84477f.png
│       ├── adac350a-a584-475d-85a2-7d2a22d009f2.png
│       ├── ae8b2e85-f2d8-4d37-b8a7-9a179024209b.png
│       ├── aeb1cbeb-6271-4c5e-b11d-20031e1bbb4d.jpg
│       ├── af588a97-ea15-43a0-aee8-c869029e7483.jpg
│       ├── afefc98a-f4cd-4bec-91e9-0a757f9c543a.png
│       ├── b04667e0-a56d-433b-adab-ea7e54ada808.jpg
│       ├── b04af165-e0c1-4d6a-8469-59512177517f.png
│       ├── b08b18c4-f052-4e2c-a068-0c4757465d5a.png
│       ├── b1bc8bf6-288a-40db-9d74-58fde0c2350c.jpg
│       ├── b257bef9-df57-4c51-80d7-36014b013cce.jpg
│       ├── b289ec65-17e9-4747-9c8e-eb4a90b11445.png
│       ├── b2a4b39a-673a-400d-99f7-54b3d00cdb74.jpg
│       ├── b39b0be9-bd88-437f-8435-8814de40266f.png
│       ├── b5d5bccc-3b71-49a3-89de-cd59375ca564.jpg
│       ├── b6c5c996-59f4-4f6c-a544-fc414785169b.png
│       ├── b7c92d2f-4c74-4f65-af6d-e9a6844cc344.png
│       ├── b7eee492-dd78-4fe8-a4ac-0e5a1586fba7.jpg
│       ├── b8321273-0291-4a0e-8a3e-25b6a3a0a44d.jpg
│       ├── b872ef1e-b13d-4d7f-b51a-20cf4912cbe5.jpg
│       ├── b943de5a-4dd5-418e-8049-05644dec3ae7.jpg
│       ├── ba3ceb86-71c9-4a73-9c18-5287cca5cdbf.jpg
│       ├── ba53cb79-52b1-432f-aa73-5a755a917d88.png
│       ├── babcc139-1e74-41c5-8d2d-04319b66180e.jpg
│       ├── bb01684c-9ac8-498f-94f1-619310913282.png
│       ├── bce10936-ec0d-4570-b9c4-045bc1784b86.png
│       ├── bd7c6bfb-acbe-405c-8ed3-25729c643d7c.jpg
│       ├── bd85eb30-dedd-4d45-a692-ef5f1836a955.jpg
│       ├── bd8ccb66-911e-4455-b9b6-042b253bc0a5.jpg
│       ├── bdcfa437-36e0-499e-bf22-63ee2b5ae8d7.png
│       ├── be7783e0-f32e-4be0-9e1d-5557a27fb23e.png
│       ├── bea16d21-35e0-4219-9430-9b23da26df88.jpg
│       ├── bef9e46f-da60-4fe6-bccd-2b20bce1e537.png
│       ├── bfe97123-264c-464c-b6b9-9b69639ecac6.jpg
│       ├── c0cdb681-eee6-447e-9eb1-1efcb2d0a7da.png
│       ├── c1160c9b-01f3-4abb-b7ae-b0b057fa9b6d.png
│       ├── c129257a-a5c2-4765-ae12-b7b7b8029092.png
│       ├── c24e5ce4-4ac7-4478-ac88-50fa4ac5e7d3.jpg
│       ├── c50fd8dc-a42e-4b24-be60-5b483d0e7f62.png
│       ├── c62c4ed3-60cf-413e-bc9b-927af2f02adf.jpg
│       ├── c64be1a5-0fd1-4962-9fb2-a1bf73ad889c.png
│       ├── c7f48640-f76f-40f9-b090-bca9da784228.png
│       ├── c94d1706-3444-4c8a-bc21-b4f56a4723a4.jpg
│       ├── c968b36b-6335-44c4-9691-3680473b0f65.png
│       ├── ca6eebda-a8ba-4fd6-ab9c-dd04967cac32.png
│       ├── ca722832-5264-4255-82e8-64217c7e089f.jpg
│       ├── ca7e36fd-d21d-4178-a161-b40c4db626a6.jpg
│       ├── cb23ff56-a541-4ea1-bf91-ad89e8078914.png
│       ├── cbbe8fba-ffa8-48db-85cb-3d1c9f9bf910.jpg
│       ├── cbd048b4-fee0-4910-b07b-afbf5f5080a4.jpg
│       ├── cc28c675-794b-4ec3-8fbd-54a4c30b9091.png
│       ├── cccc2dd2-d830-4bd8-9da0-6bb2de806b4b.jpg
│       ├── cd2b0753-b308-48b7-b154-8591cdeff4c1.jpg
│       ├── ce01edb3-579c-46b4-8246-0e838042c784.png
│       ├── ce2488ea-3d20-4735-801a-1037f3996875.jpg
│       ├── cefc454a-7a3a-4143-b2d3-e3b9b513c174.jpg
│       ├── cf29fd4e-dff3-4165-b7bf-a4e344a473d3.png
│       ├── cff6f6c1-f772-4772-9c12-f302efa88c33.jpg
│       ├── d0566b56-2e99-4893-9a39-1e37f1d4fc69.jpg
│       ├── d0ca7926-9677-44e8-8f27-0522d8a58870.png
│       ├── d0e26d5b-b858-47da-aea1-ecba811e28c0.png
│       ├── d0f0a38f-0878-4564-83be-bcad9d7ba1df.jpg
│       ├── d130479f-a402-40a1-8697-8c90f63fccf3.png
│       ├── d1c90763-c56a-43bb-807e-8e43f15928b1.jpg
│       ├── d35a71fe-3410-407c-be11-baed35e2773e.jpg
│       ├── d43e51a3-9ff2-4c35-89a2-f3fd14bb4532.jpg
│       ├── d46bf3be-e57d-40f3-bedc-f4ddac1fa00e.png
│       ├── d4d899a6-e579-4dc0-ba97-a362ce5730ae.jpg
│       ├── d5b8ef89-d66e-4675-97fe-ea16aa7f8514.png
│       ├── d5cc29b6-881a-466b-9b4c-fe57a5b87638.png
│       ├── d683ca9b-7a99-42ba-870b-4ed8fcecf533.png
│       ├── d781653a-837b-4e02-91f2-b19905e13210.jpg
│       ├── d80a65b6-7ae9-4937-9291-6103fcbde76f.png
│       ├── d8199d92-a6cc-434c-b019-53a3a7c62b95.png
│       ├── d921adc5-4788-4133-9772-ba0715e505db.jpg
│       ├── d9299f26-da6f-4736-b686-59212a02a87e.png
│       ├── d9cd6668-34ed-4d30-a60d-6c19677fd176.png
│       ├── da5c8fb0-b413-4a69-a81b-a48da241d62c.png
│       ├── daffdc06-2a9e-4e28-b87a-fcc76277fdc9.png
│       ├── db4478d3-3602-4737-9c7c-eabff9f14ffb.png
│       ├── db6dd414-dfbe-48eb-b5b7-2464891a488b.png
│       ├── dc419344-dbc2-4f61-b69c-dd6804601c97.jpg
│       ├── dc6303d6-359c-4714-b3e2-84b080927167.jpg
│       ├── dd224d98-d86e-40af-8978-d154950a175d.jpg
│       ├── dd590c20-4da2-42bd-b8c4-b75dc7eab1ba.jpg
│       ├── dd59ec48-2b3f-46ad-b095-f46b456209ab.jpg
│       ├── dd82b31b-0c16-46a2-be02-911db23b09eb.png
│       ├── deb0fec0-1acf-4372-86d3-6fb61dba2c99.png
│       ├── df893dbb-0970-4e1a-b42d-c4991887052c.jpg
│       ├── dfd958b3-468a-48f5-a74a-b0a05ebb3f68.jpg
│       ├── e0214b05-78a8-4e9d-b114-0e02e74c3858.jpg
│       ├── e0b6e222-c382-4b81-a877-0effb62f1452.png
│       ├── e1abbb8f-dcac-4952-9659-96e9fd9a199a.png
│       ├── e301ea1c-e2a7-4011-aa2d-bc2d03e6adab.png
│       ├── e5df4021-a8fd-4df7-82d0-538edcf09c84.png
│       ├── e68fa9f0-8fb5-4c9f-bcec-a3a0ff9947f3.jpg
│       ├── e86365c0-7712-46d7-a5ba-3fe0c9a30f7c.png
│       ├── e8737af0-d8c1-4d64-81cb-cdc28749223c.jpg
│       ├── e88f7898-6edc-4074-8201-04678b99073d.png
│       ├── e91f0d8f-0daf-4225-aa5f-a12369461272.png
│       ├── e930dbf4-8366-4f10-b826-d44c8744b67c.jpg
│       ├── e9c270c7-c6c1-4bc7-9624-5e4a4331e31c.png
│       ├── ea205b14-3e4a-48cd-acb5-402877eb7421.png
│       ├── ea73e88e-b273-4cf4-a95d-4b259ee19172.jpg
│       ├── ea82cca4-561c-4954-a9e1-9fbcddb86977.jpg
│       ├── eb89a00a-a13c-459b-81c3-61ad94bb2a57.png
│       ├── ebaa3335-f797-4060-8a64-273b23f1272a.jpg
│       ├── ec6f6b3a-2d4d-4754-a4c1-91775da99073.jpg
│       ├── ecc9da62-784c-4d8c-9985-d2303c5dbb6b.png
│       ├── ef65a723-6093-4fbc-a8b1-c3a041a75a37.png
│       ├── efca2431-d0bf-4c84-8ebb-ff5fdf6d9416.png
│       ├── f061a5ce-de21-427c-bdb8-472a8269d954.png
│       ├── f079af36-9361-4407-b5e0-da4fd73a0907.png
│       ├── f0905a80-f0b8-4519-a674-7f9c54dddb3e.jpg
│       ├── f0b6f861-da34-4d43-bb8e-9985f79f3e82.jpg
│       ├── f1184a2e-09fb-409f-95a1-019d431a7b50.png
│       ├── f1e1f8bb-eea4-45b7-9329-e8c5bcf7fcd0.jpg
│       ├── f2066c38-cb5e-467b-9f19-38ec2a46adfc.png
│       ├── f24b4d1c-4904-4daa-9151-6218fbc9cb9b.jpg
│       ├── f28dc269-8458-471d-95a9-46acae71d829.jpg
│       ├── f34201f1-e152-44b3-ba79-d5b578d6d662.jpg
│       ├── f394e77b-a741-4432-9bdf-393363ef784e.jpg
│       ├── f3da2ff4-3711-4da7-baef-fcdd5bf60c99.jpg
│       ├── f47a582b-22fb-4239-8277-acced2f00e11.jpg
│       ├── f50a8648-bd36-4ef9-b2f6-71138507fb87.png
│       ├── f594d80f-2551-4d41-bc57-7f8b0bce1274.jpg
│       ├── f686749b-d196-445a-8c58-f0718adbf905.png
│       ├── f6b48b3f-2740-446c-9158-90502c21a255.jpg
│       ├── f78a6d92-57d3-4ee0-a4d9-b99f41d21800.jpg
│       ├── f855e145-fa50-40e0-ac99-990280ed3375.jpg
│       ├── f8af9f5e-7583-4149-a746-b6c9ca0c2b9d.jpg
│       ├── f9a91c2b-6ec1-4680-88c9-212ef6f605e9.jpg
│       ├── fa4f27be-8a10-4647-b9f6-5b4823c6bf4b.jpg
│       ├── fa7388b3-55e8-407d-8c35-e50fedf3f5fd.png
│       ├── fbec9615-054d-4b7e-8b61-11afe85c57b9.jpg
│       ├── fc00d8ba-176e-4a11-b41c-94a77a2c6f77.jpg
│       ├── fc4b5ee1-499c-419c-b830-0aa4b9412b3e.jpg
│       ├── fc58918f-dd19-4395-8a6b-4cd01c4550c7.png
│       ├── fc609978-3167-4200-89ec-39a8816d3120.png
│       ├── fc98e1b2-d13d-4684-8ad7-368a3db61c4f.png
│       ├── fce0caf5-b7c7-4bd6-8d15-08b1bc35277a.png
│       ├── fcf0b566-71e4-4b63-8c09-4bbd4c5aa869.jpg
│       ├── fd3f528c-9974-454b-8d9e-2d7b72611cda.png
│       ├── fd6d43df-d632-4904-9a00-2fffcaaef1b6.jpg
│       ├── fecd64ed-ec39-487f-a18f-d110998c94e7.jpg
│       ├── ffd9dd5f-68bc-44d6-8fd4-9e031f25af88.jpg
│       └── ffe3cb8d-8c8d-43a6-a031-9cdc5d45cc98.jpg
├── fix_dependencies.py
├── full_code_manga.txt
├── models
│   └── manga_bubble_detector_best.pt
├── requirements.txt
├── setup_check.py
├── src
│   ├── __init__.py
│   ├── __pycache__
│   │   ├── __init__.cpython-312.pyc
│   │   ├── __init__.cpython-313.pyc
│   │   ├── detection.cpython-312.pyc
│   │   ├── detection.cpython-313.pyc
│   │   ├── ocr.cpython-313.pyc
│   │   ├── translation.cpython-313.pyc
│   │   └── utils.cpython-313.pyc
│   ├── data
│   │   ├── outputs
│   │   └── uploads
│   ├── detection.py
│   ├── ocr.py
│   ├── translation.py
│   └── utils.py
└── static
    └── styles.css



<README.md>
# Автоматический переводчик манги

Приложение для автоматического перевода японской, корейской и китайской манги с использованием нейронных сетей.

## 🚀 Быстрый старт

### 1. Устранение конфликтов зависимостей

Если у вас установлен `googletrans`, удалите его (конфликтует с новыми версиями httpx):

```bash
pip uninstall googletrans -y
```

### 2. Чистая установка

```bash
# Создайте новое виртуальное окружение
python -m venv manga_env
source manga_env/bin/activate  # Linux/macOS
# или
manga_env\Scripts\activate  # Windows

# Установите зависимости
pip install -r requirements.txt

# Установите Tesseract OCR (системная зависимость)
# Ubuntu/Debian:
sudo apt-get install tesseract-ocr tesseract-ocr-jpn tesseract-ocr-kor tesseract-ocr-chi-sim

# macOS:
brew install tesseract tesseract-lang

# Windows: скачайте с https://github.com/UB-Mannheim/tesseract/wiki
```

### 3. Проверка системы

```bash
python setup_check.py
```

### 4. Запуск

```bash
streamlit run app.py
```

## 📋 Описание

Проект реализует полный пайплайн обработки страниц манги:
- **Детекция речевых пузырей** с помощью YOLOv8
- **Множественное OCR** (PaddleOCR, EasyOCR, Tesseract) для максимальной точности
- **Автоматический перевод** на множество языков
- **Веб-интерфейс** для удобной работы с результатами

## 🛠 Технологии

- **Детекция объектов**: YOLOv8 (Ultralytics)
- **OCR системы**: 
  - PaddleOCR (лучший для азиатских языков)
  - EasyOCR (универсальный)
  - Tesseract (резервный)
- **Перевод**: Google Translate API через deep-translator
- **Интерфейс**: Streamlit
- **Обработка изображений**: OpenCV, Pillow

## 🌍 Поддерживаемые языки

### Распознавание (OCR):
- 🇯🇵 Японский (хирагана, катакана, кандзи)
- 🇰🇷 Корейский (хангыль)
- 🇨🇳 Китайский (упрощенный и традиционный)
- 🇬🇧 Английский
- 🇷🇺 Русский

### Перевод:
- Любые языки, поддерживаемые Google Translate

## ⚡ Производительность

- **Детекция пузырей**: ~100-500ms на изображение
- **OCR на пузырь**: ~200-800ms (зависит от размера и сложности)
- **Перевод**: ~100-300ms на фразу

**Общее время**: 2-15 секунд на страницу (зависит от количества текста)

## 🔧 Решение проблем

### Ошибка "googletrans requires httpx==0.13.3"

```bash
pip uninstall googletrans -y
pip install deep-translator
```

### PaddleOCR не установился

```bash
# Для CPU (рекомендовано)
pip install paddlepaddle
pip install paddleocr

# Для GPU (если есть CUDA)
pip install paddlepaddle-gpu
pip install paddleocr
```

### Tesseract не найден

**Ubuntu/Debian:**
```bash
sudo apt-get update
sudo apt-get install tesseract-ocr tesseract-ocr-jpn tesseract-ocr-kor tesseract-ocr-chi-sim tesseract-ocr-rus
```

**macOS:**
```bash
brew install tesseract tesseract-lang
```

**Windows:**
1. Скачайте установщик: https://github.com/UB-Mannheim/tesseract/wiki
2. Установите в C:\Program Files\Tesseract-OCR\
3. Добавьте в PATH: C:\Program Files\Tesseract-OCR\

### EasyOCR долго загружается

При первом запуске EasyOCR скачивает модели (~100-500MB). Это нормально.

### Модель детекции не найдена

Убедитесь, что файл `manga_bubble_detector_best.pt` находится в папке `models/`.

### Низкое качество OCR

1. Попробуйте другой порог уверенности детекции
2. Проверьте качество исходного изображения
3. Убедитесь, что выбран правильный язык

## 📁 Структура проекта

```
manga_detection/
├── models/                    # Обученные модели
│   └── manga_bubble_detector_best.pt
├── src/                      # Исходный код
│   ├── detection.py          # Детекция пузырей
│   ├── ocr.py               # OCR системы  
│   ├── translation.py       # Перевод
│   └── utils.py             # Утилиты
├── data/                    # Данные
│   ├── uploads/             # Загруженные файлы
│   └── outputs/             # Результаты
├── static/                  # Статические файлы
├── app.py                   # Главное приложение
├── config.py                # Конфигурация
├── setup_check.py           # Проверка системы
├── requirements.txt         # Зависимости
└── README.md               # Документация
```

## 🎯 Использование

1. **Запустите приложение**: `streamlit run app.py`
2. **Откройте в браузере**: http://localhost:8501
3. **Загрузите изображение** страницы манги
4. **Выберите языки** (исходный и целевой)
5. **Настройте параметры** детекции
6. **Нажмите "Начать обработку"**
7. **Просмотрите и отредактируйте** результаты
8. **Сохраните** готовый перевод

## 🏗 Архитектура OCR

Система использует каскадный подход:

1. **Предобработка изображения**:
   - Увеличение контраста
   - Шумоподавление  
   - Масштабирование маленьких областей

2. **Множественное распознавание**:
   - PaddleOCR (приоритет для азиатских языков)
   - EasyOCR (универсальное решение)
   - Tesseract (резервный вариант)

3. **Выбор лучшего результата** по алгоритму:
   - Приоритет движка
   - Длина распознанного текста
   - Уверенность распознавания

## 🤝 Вклад в проект

1. Fork репозитория
2. Создайте ветку для фичи: `git checkout -b feature/amazing-feature`
3. Коммитьте изменения: `git commit -m 'Add amazing feature'`
4. Push в ветку: `git push origin feature/amazing-feature`
5. Создайте Pull Request

## 📝 Лицензия

Разработано в рамках курса машинного обучения.

## 🆘 Поддержка

Если возникли проблемы:

1. Запустите `python setup_check.py` для диагностики
2. Проверьте системные требования
3. Убедитесь в корректности установки зависимостей
4. Создайте Issue с описанием проблемы

## 🔮 Планы развития

- [ ] Поддержка batch-обработки
- [ ] Интеграция inpainting моделей для лучшего замещения текста
- [ ] API для интеграции с другими приложениями
- [ ] Поддержка больше форматов файлов
- [ ] Улучшение точности детекции для сложных случаев</README.md>


<app.py>
# app.py - Упрощенный интерфейс с ручным выбором языка
import streamlit as st
import numpy as np
from PIL import Image
import os
from pathlib import Path

# Импорт наших модулей
from src.detection import BubbleDetector
from src.ocr import TextExtractor
from src.translation import TextTranslator
from src.utils import (save_uploaded_file, validate_image, create_result_summary,
                       get_language_flag, get_language_name)
from config import *

# Настройка страницы
st.set_page_config(
    page_title="Manga Translator",
    page_icon="📚",
    layout="wide",
    initial_sidebar_state="expanded"
)

def load_css():
    css_file = BASE_DIR / "static" / "styles.css"
    if css_file.exists():
        with open(css_file) as f:
            st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

@st.cache_resource
def load_models():
    """Загрузка моделей с кэшированием"""
    try:
        detector = BubbleDetector(str(MODEL_PATH), DETECTION_CONFIDENCE)
        st.success("✅ Модель детекции загружена")
    except Exception as e:
        st.error(f"❌ Ошибка загрузки модели детекции: {e}")
        return None, None, None
    
    try:
        ocr = TextExtractor()
        st.success("✅ OCR системы готовы")
    except Exception as e:
        st.error(f"❌ Ошибка инициализации OCR: {e}")
        return detector, None, None
    
    try:
        translator = TextTranslator()
        st.success("✅ Система перевода готова")
    except Exception as e:
        st.error(f"❌ Ошибка инициализации переводчика: {e}")
        return detector, ocr, None
    
    return detector, ocr, translator

def process_manga_page_manual(image_path, detector, ocr, translator, source_lang, target_lang):
    """Обработка страницы манги с РУЧНЫМ выбором языка"""
    
    # Детекция пузырей
    with st.spinner("🔍 Поиск речевых пузырей..."):
        bubbles = detector.detect_bubbles(image_path)
    
    if not bubbles:
        st.warning("⚠️ Речевые пузыри не найдены на изображении")
        return []
    
    st.success(f"✅ Найдено {len(bubbles)} речевых пузырей")
    
    # OCR и перевод с выбранным языком
    results = []
    progress_bar = st.progress(0)
    status_text = st.empty()
    
    for i, bubble in enumerate(bubbles):
        progress_bar.progress((i + 1) / len(bubbles))
        status_text.text(f"📝 Обработка пузыря {i+1}/{len(bubbles)} (язык: {get_language_flag(source_lang)} {get_language_name(source_lang)})")
        
        # Извлечение текста на выбранном языке
        original_text = ocr.extract_text_simple(image_path, bubble['bbox'], source_lang)
        
        # Перевод текста
        translated_text = ""
        if original_text:
            if source_lang != target_lang:
                translated_text = translator.translate(original_text, source_lang, target_lang)
            else:
                translated_text = original_text  # Не переводим если языки одинаковые
        
        results.append({
            'bbox': bubble['bbox'],
            'confidence': bubble['confidence'],
            'class_id': bubble['class_id'],
            'original_text': original_text,
            'translated_text': translated_text,
            'source_language': source_lang,
            'target_language': target_lang
        })
    
    progress_bar.empty()
    status_text.empty()
    return results

def main():
    """Основная функция приложения"""
    
    load_css()
    
    # Заголовок
    st.markdown('<h1 class="main-header">📚 Переводчик манги (ручной выбор языка)</h1>', 
                unsafe_allow_html=True)
    
    st.markdown("""
    ### 🎯 Простой и надежный подход:
    - **📝 Ручной выбор языков** - вы точно знаете что на картинке
    - **🎯 Без автоопределения** - никаких ошибок распознавания
    - **🌍 5 языков OCR**: 🇯🇵 Японский, 🇰🇷 Корейский, 🇨🇳 Китайский, 🇺🇸 Английский, 🇷🇺 Русский
    - **🔄 Простой перевод** между любыми языками
    """)
    
    # Боковая панель с настройками
    st.sidebar.header("⚙️ Настройки языков")
    
    source_lang = st.sidebar.selectbox(
        "🔤 Исходный язык (на картинке):",
        options=['ja', 'ko', 'zh', 'en', 'ru'],
        format_func=lambda x: f"{get_language_flag(x)} {get_language_name(x)}",
        index=0,  # Японский по умолчанию для манги
        help="Выберите язык текста на вашем изображении"
    )
    
    target_lang = st.sidebar.selectbox(
        "🌐 Язык перевода:",
        options=['ru', 'en', 'ja', 'ko', 'zh'],
        format_func=lambda x: f"{get_language_flag(x)} {get_language_name(x)}",
        index=0,  # Русский по умолчанию
        help="На какой язык переводить"
    )
    
    # Показываем выбранную пару
    if source_lang == target_lang:
        st.sidebar.info("ℹ️ Языки одинаковые - перевод не нужен")
    else:
        st.sidebar.success(f"✅ {get_language_flag(source_lang)} → {get_language_flag(target_lang)}")
    
    confidence = st.sidebar.slider(
        "🎯 Порог уверенности детекции:",
        min_value=0.1,
        max_value=1.0,
        value=DETECTION_CONFIDENCE,
        step=0.1,
        help="Более высокие значения = меньше ложных срабатываний"
    )
    
    # Информация о языках
    with st.sidebar.expander("ℹ️ Поддерживаемые языки"):
        st.write("**🔤 OCR (распознавание):**")
        st.write("🇯🇵 Японский - хирагана, катакана, кандзи")
        st.write("🇰🇷 Корейский - хангыль")  
        st.write("🇨🇳 Китайский - упрощенный")
        st.write("🇺🇸 Английский - латиница")
        st.write("🇷🇺 Русский - кириллица")
        
        st.write("**🌐 Перевод:**")
        st.write("Любые направления через Google Translate")
    
    # Загрузка моделей
    with st.spinner("🚀 Загрузка моделей..."):
        detector, ocr, translator = load_models()
    
    if not all([detector, ocr, translator]):
        st.error("⚠️ Не удалось загрузить все необходимые компоненты")
        return
    
    detector.confidence = confidence
    
    # Загрузка файла
    uploaded_file = st.file_uploader(
        "📁 Выберите изображение манги",
        type=['jpg', 'jpeg', 'png', 'webp'],
        help="Поддерживаемые форматы: JPG, PNG, WebP. Максимальный размер: 10MB"
    )
    
    if uploaded_file is not None:
        if not validate_image(uploaded_file):
            st.error("❌ Некорректный файл или слишком большой размер")
            return
        
        image_path = save_uploaded_file(uploaded_file)
        
        # Отображение загруженного изображения
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("📸 Исходное изображение")
            image = Image.open(image_path)
            st.image(image, use_container_width=True)
            st.caption(f"Размер: {image.size[0]}×{image.size[1]} пикселей")
        
        # Кнопка обработки
        if st.button(f"🚀 Обработать ({get_language_flag(source_lang)} → {get_language_flag(target_lang)})", 
                     type="primary", use_container_width=True):
            
            results = process_manga_page_manual(
                image_path, detector, ocr, translator, source_lang, target_lang
            )
            
            if results:
                # Отображение результатов детекции
                with col2:
                    st.subheader("🎯 Результат детекции")
                    bubbles = [{'bbox': r['bbox'], 'confidence': r['confidence']} 
                              for r in results]
                    visualization = detector.visualize_detection(image_path, bubbles)
                    st.image(visualization, use_container_width=True)
                
                # Статистика
                summary = create_result_summary(results)
                
                st.markdown("### 📊 Статистика обработки")
                col_stats1, col_stats2, col_stats3 = st.columns(3)
                
                with col_stats1:
                    st.metric("🎯 Найдено пузырей", summary['total_bubbles'])
                
                with col_stats2:
                    st.metric("📝 Распознано текста", 
                             f"{summary['successful_ocr']}/{summary['total_bubbles']}")
                    st.caption(f"Успешность: {summary['ocr_success_rate']:.1f}%")
                
                with col_stats3:
                    if source_lang == target_lang:
                        st.metric("🔄 Без перевода", summary['total_bubbles'])
                        st.caption("Языки одинаковые")
                    else:
                        st.metric("🌐 Переведено", 
                                 f"{summary['successful_translation']}/{summary['total_bubbles']}")
                        st.caption(f"Успешность: {summary['translation_success_rate']:.1f}%")
                
                # Детальные результаты
                st.markdown("### 📋 Детальные результаты")
                
                for i, result in enumerate(results):
                    confidence = result['confidence']
                    source_flag = get_language_flag(source_lang)
                    target_flag = get_language_flag(target_lang)
                    
                    # Иконка для уверенности детекции
                    conf_icon = "🟢" if confidence > 0.7 else "🟡" if confidence > 0.5 else "🔴"
                    
                    with st.expander(
                        f"{conf_icon} Пузырь #{i+1} | {source_flag} → {target_flag} | "
                        f"Уверенность: {confidence:.2f}"
                    ):
                        
                        col_orig, col_trans = st.columns(2)
                        
                        with col_orig:
                            st.markdown(f"**🔤 Оригинал ({source_flag} {get_language_name(source_lang)}):**")
                            original = st.text_area(
                                "Оригинал",
                                value=result['original_text'],
                                key=f"orig_{i}",
                                label_visibility="collapsed",
                                height=100
                            )
                        
                        with col_trans:
                            if source_lang == target_lang:
                                st.markdown(f"**🔄 Без перевода:**")
                            else:
                                st.markdown(f"**🌐 Перевод ({target_flag} {get_language_name(target_lang)}):**")
                                
                            translated = st.text_area(
                                "Перевод",
                                value=result['translated_text'],
                                key=f"trans_{i}",
                                label_visibility="collapsed",
                                height=100
                            )
                        
                        # Информация
                        st.caption(f"📍 Координаты: {result['bbox']}")
                        
                        # Обновление результатов при редактировании
                        if original != result['original_text']:
                            result['original_text'] = original
                        if translated != result['translated_text']:
                            result['translated_text'] = translated
                
                # Кнопки действий
                col_save, col_clear = st.columns(2)
                
                with col_save:
                    if st.button("💾 Сохранить результаты", use_container_width=True):
                        st.success("✅ Результаты сохранены")
                
                with col_clear:
                    if st.button("🔄 Обработать заново", use_container_width=True):
                        st.rerun()
        
        # Очистка файлов
        if st.button("🗑️ Очистить", use_container_width=True):
            if os.path.exists(image_path):
                os.remove(image_path)
            st.rerun()

if __name__ == "__main__":
    main()</app.py>


<config.py>
import os
from pathlib import Path

# Пути к файлам и папкам
BASE_DIR = Path(__file__).parent
MODEL_PATH = BASE_DIR / "models" / "manga_bubble_detector_best.pt"
UPLOAD_DIR = BASE_DIR / "data" / "uploads"
OUTPUT_DIR = BASE_DIR / "data" / "outputs"

# Параметры модели детекции
DETECTION_CONFIDENCE = 0.5
IMAGE_SIZE = 640

# Параметры OCR - расширенная поддержка языков
SUPPORTED_LANGUAGES = {
    'ja': 'Японский',
    'ko': 'Корейский',
    'zh': 'Китайский',
    'en': 'Английский',
    'ru': 'Русский'
}
DEFAULT_SOURCE_LANG = 'ja'
DEFAULT_TARGET_LANG = 'ru'

# OCR настройки
OCR_ENGINES = {
    'paddle': True,    # Использовать PaddleOCR (лучший для азиатских языков)
    'easyocr': True,   # Использовать EasyOCR (универсальный)
    'tesseract': True  # Использовать Tesseract (резервный)
}

# Параметры предобработки изображений
IMAGE_PROCESSING = {
    'min_width': 10,      # Минимальная ширина области для OCR
    'min_height': 10,     # Минимальная высота области для OCR
    'upscale_threshold': 50,  # Увеличивать изображения меньше этого размера
    'contrast_factor': 1.5,   # Множитель контраста
    'sharpness_factor': 1.2,  # Множитель резкости
}

# Параметры качества OCR
OCR_QUALITY = {
    'min_confidence': 0.5,    # Минимальная уверенность для принятия результата
    'paddle_confidence': 0.5,  # Уверенность для PaddleOCR
    'easyocr_confidence': 0.5, # Уверенность для EasyOCR
    'tesseract_confidence': 0.3, # Уверенность для Tesseract (обычно ниже)
}

# Параметры интерфейса
MAX_UPLOAD_SIZE = 10  # MB
ALLOWED_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.webp']

# Создание необходимых папок
UPLOAD_DIR.mkdir(parents=True, exist_ok=True)
OUTPUT_DIR.mkdir(parents=True, exist_ok=True)

# Проверка доступности OCR движков
def check_ocr_availability():
    """Проверка доступности OCR движков"""
    available_engines = {}
    
    try:
        import paddleocr
        available_engines['paddle'] = True
    except ImportError:
        available_engines['paddle'] = False
    
    try:
        import easyocr
        available_engines['easyocr'] = True
    except ImportError:
        available_engines['easyocr'] = False
    
    try:
        import pytesseract
        pytesseract.get_tesseract_version()
        available_engines['tesseract'] = True
    except (ImportError, Exception):
        available_engines['tesseract'] = False
    
    return available_engines</config.py>


<fix_dependencies.py>
# fix_dependencies.py - Скрипт автоматического исправления проблем
import subprocess
import sys
import os

def run_command(command, description):
    """Выполнение команды с логированием"""
    print(f"🔧 {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"✅ {description} - успешно")
            return True
        else:
            print(f"❌ {description} - ошибка: {result.stderr}")
            return False
    except Exception as e:
        print(f"❌ {description} - исключение: {e}")
        return False

def fix_googletrans_conflict():
    """Исправление конфликта с googletrans"""
    print("🚀 Устранение конфликта зависимостей...")
    
    commands = [
        ("pip uninstall googletrans -y", "Удаление googletrans"),
        ("pip uninstall httpx -y", "Удаление старого httpx"),
        ("pip install httpx>=0.28.0", "Установка нового httpx"),
        ("pip install deep-translator>=1.11.4", "Установка deep-translator"),
    ]
    
    for command, description in commands:
        run_command(command, description)

def install_tesseract_languages():
    """Установка языковых пакетов Tesseract"""
    print("🌍 Установка языковых пакетов Tesseract...")
    
    # Определяем ОС
    if sys.platform.startswith('linux'):
        commands = [
            ("sudo apt-get update", "Обновление пакетов"),
            ("sudo apt-get install -y tesseract-ocr", "Установка Tesseract"),
            ("sudo apt-get install -y tesseract-ocr-jpn", "Японский язык"),
            ("sudo apt-get install -y tesseract-ocr-kor", "Корейский язык"),
            ("sudo apt-get install -y tesseract-ocr-chi-sim", "Китайский язык"),
            ("sudo apt-get install -y tesseract-ocr-rus", "Русский язык"),
        ]
        
        for command, description in commands:
            run_command(command, description)
            
    elif sys.platform == 'darwin':  # macOS
        commands = [
            ("brew install tesseract", "Установка Tesseract"),
            ("brew install tesseract-lang", "Установка языковых пакетов"),
        ]
        
        for command, description in commands:
            run_command(command, description)
            
    else:  # Windows
        print("🪟 Для Windows:")
        print("1. Скачайте Tesseract: https://github.com/UB-Mannheim/tesseract/wiki")
        print("2. Установите в C:\\Program Files\\Tesseract-OCR\\")
        print("3. Добавьте в PATH: C:\\Program Files\\Tesseract-OCR\\")

def reinstall_ocr_packages():
    """Переустановка OCR пакетов"""
    print("📦 Переустановка OCR пакетов...")
    
    commands = [
        ("pip uninstall paddlepaddle paddleocr -y", "Удаление старых версий"),
        ("pip install paddlepaddle>=3.0.0", "Установка PaddlePaddle"),
        ("pip install paddleocr>=3.1.0", "Установка PaddleOCR"),
        ("pip install easyocr>=1.7.0", "Установка EasyOCR"),
        ("pip install pytesseract>=0.3.10", "Установка PyTesseract"),
    ]
    
    for command, description in commands:
        run_command(command, description)

def main():
    """Основная функция исправления"""
    print("🛠️  Автоматическое исправление зависимостей манга-переводчика\n")
    
    # Меню выбора
    print("Выберите действие:")
    print("1. Исправить конфликт googletrans/httpx")
    print("2. Установить языковые пакеты Tesseract")
    print("3. Переустановить OCR пакеты")
    print("4. Выполнить все исправления")
    print("0. Выход")
    
    try:
        choice = input("\nВведите номер (0-4): ").strip()
        
        if choice == '1':
            fix_googletrans_conflict()
        elif choice == '2':
            install_tesseract_languages()
        elif choice == '3':
            reinstall_ocr_packages()
        elif choice == '4':
            fix_googletrans_conflict()
            print("\n" + "="*50)
            install_tesseract_languages()
            print("\n" + "="*50)
            reinstall_ocr_packages()
        elif choice == '0':
            print("👋 До свидания!")
            return
        else:
            print("❌ Неверный выбор")
            return
            
        print("\n🎉 Исправления завершены!")
        print("💡 Запустите: python setup_check.py для проверки")
        
    except KeyboardInterrupt:
        print("\n👋 Отменено пользователем")
    except Exception as e:
        print(f"\n❌ Ошибка: {e}")

if __name__ == "__main__":
    main()</fix_dependencies.py>


<full_code_manga.txt>
Проект: manga_detection_4
├── README.md
├── __pycache__
│   └── config.cpython-313.pyc
├── app.py
├── bundle_project.py
├── config.py
├── data
│   ├── outputs
│   ├── sample_images
│   └── uploads
│       ├── 00090717-b53b-43bf-800f-ff30823092c9.png
│       ├── 00d75707-6deb-4ae9-bd3d-055596ee7bee.jpg
│       ├── 013da0b0-3766-4c4c-85fa-b1b80eb9d81e.png
│       ├── 01b3627e-a3bb-4bd1-90a3-6529a37de481.png
│       ├── 0246a631-bfb9-47fd-bf74-77ebea8b0d57.png
│       ├── 02ab4ded-f1bc-49d2-a5c4-0937e2979df8.jpg
│       ├── 050362e5-c592-4ed5-a290-555caf9af9d2.jpg
│       ├── 05416c48-6b68-41bf-8499-a8c112721a89.png
│       ├── 05e46691-73e3-4f8e-a69e-18f11b95f17d.png
│       ├── 068f936a-7228-4195-b652-f066e88d9f17.png
│       ├── 076a86fe-1554-405d-9482-fcdbb98e728e.jpg
│       ├── 079e4461-1f68-4cea-a8b2-b40b0f5b9d30.png
│       ├── 07e905b5-d576-4d6c-b11f-aecc473a20a7.jpg
│       ├── 089e2e10-0dba-450a-bd46-1aea0809d49b.jpg
│       ├── 091c0eac-f0c5-4025-818c-5ab9ca73052a.png
│       ├── 098bdb12-3f7c-4d89-9983-ec701bc2653b.jpg
│       ├── 0b1058ac-53c3-4fed-92d3-2bcad77bdda0.png
│       ├── 0b297fed-94e8-4b1d-bd8b-9160307def9f.jpg
│       ├── 0b6710b5-9d5a-4713-910a-b98a9bb36af1.jpg
│       ├── 0bb0209b-882b-44fa-b2ea-af93bcdc18f3.png
│       ├── 0cf1520d-f260-49dd-a5fe-0055e2931251.png
│       ├── 0cf34028-ce25-48d6-8533-374b1fa6bb93.png
│       ├── 0d7878f0-fa6f-4e1a-997d-ab94d450dffa.png
│       ├── 0d8579f8-f3f8-454e-8a9a-edc4173f4c82.jpg
│       ├── 0e7bf44d-f062-4fee-ba11-68c6f3c4727f.png
│       ├── 0f263b4c-c7dd-4867-88d0-59515ce6c9c1.jpg
│       ├── 0fc0fa25-091b-44f0-a895-e9feb324e43d.png
│       ├── 10ac295f-bb3b-4457-84bb-b8c1adfb59b7.jpg
│       ├── 10bd9100-b311-44bf-bd88-f848dc23381e.png
│       ├── 10bfda98-b12f-451a-9dee-ede560f30fca.png
│       ├── 1178de82-c33d-4e8e-ba9d-01d0437e4c60.jpg
│       ├── 11bf8a3e-58d7-43e5-b9c1-eb30707c0700.jpg
│       ├── 11d10c1d-4367-488c-928a-abade3e37985.png
│       ├── 11f63c24-5d76-43e6-a797-e91bbe034a66.jpg
│       ├── 125b458e-7ccc-47ee-a495-cd87d2eae167.jpg
│       ├── 126a2998-7753-41c6-9963-d91afa7740ec.jpg
│       ├── 14969949-02ab-4533-85d2-4a7229844ba1.jpg
│       ├── 151a94d2-2bee-4d7b-8469-3c02b09bbadf.png
│       ├── 15f505c8-8614-4cca-9e60-d5a513953339.jpg
│       ├── 164362c7-7389-47c9-9baf-1644df4ffa35.jpg
│       ├── 1664496c-2f8a-4fc2-b7e9-46cfebc2326f.jpg
│       ├── 168591aa-5162-4775-90a6-7534f2e11f95.png
│       ├── 179aa390-f25c-43b3-b117-4d1fd94a587d.jpg
│       ├── 1826e045-115d-40de-b4a7-cd420404a803.jpg
│       ├── 18363df4-7686-4d7d-9b14-387034bc610f.png
│       ├── 18cf15e2-60be-4a41-9619-3ad1a354cc78.png
│       ├── 18d7ab4f-a4cd-41ac-92e7-0268333beb37.jpg
│       ├── 18da8ed3-5f3c-4d95-a433-acfb31107d35.jpg
│       ├── 196435cc-e70e-495f-bfe3-3972038f63c4.png
│       ├── 1971306b-c8f1-4c86-980f-82eb80bb5afa.jpg
│       ├── 1999b360-973f-4847-95cb-f420399f8222.png
│       ├── 1a5e2643-37d4-458d-9216-6d39f7ec2261.jpg
│       ├── 1a669709-f158-48c8-8d43-ed9468b4e7a9.jpg
│       ├── 1beccc9f-5942-4db7-8287-43e3f4c252f3.png
│       ├── 1c053534-2cb7-42ea-8df3-81708ccd70e9.png
│       ├── 1c3968b5-0932-4724-9ba9-68a1db6dfd7c.png
│       ├── 1d84effe-5891-42ef-bc1d-b6a267d9baa5.jpg
│       ├── 1f6d41f4-83f9-4aed-bb70-1c6bb383e046.png
│       ├── 1f804265-7365-4c72-a62e-4fd06c157505.png
│       ├── 21a5a936-dc71-4f4d-bab4-08a3de96c1a7.png
│       ├── 21f29902-1579-490d-9c04-b74db8591b7f.png
│       ├── 221ae171-aa46-4a11-aa40-6e097f02975d.jpg
│       ├── 228a0843-5910-4e4b-9118-cdb456f997c7.png
│       ├── 228af937-5ff7-4a3f-a833-e0b1810d8715.png
│       ├── 22b2442a-e6e9-465b-97d8-35924f8b67c5.png
│       ├── 23c4ce9d-9c85-4124-a3f5-72d889e2f137.png
│       ├── 255feb32-6684-40f9-a8be-46a2973be74c.jpg
│       ├── 268c9d5a-6873-40a1-82b5-5d9ec28bed07.png
│       ├── 26ddf5c6-f19e-4172-a131-90c21650e0e9.png
│       ├── 2774ad9a-62b4-44a8-b405-66ede278338b.jpg
│       ├── 2a196931-6798-47d0-a7f9-b5974f938b73.jpg
│       ├── 2aa50fd3-2378-4b16-9fe8-dd0089cd72cf.png
│       ├── 2b5e6804-f830-4801-8d7c-1d4be02db7dc.png
│       ├── 2c43963e-3376-422c-9e92-1d42b8a85785.jpg
│       ├── 2d0db6a1-e13f-47f6-a922-cbcdf34e8a35.png
│       ├── 2d3c2711-6d5c-478a-b622-8133cecff146.png
│       ├── 2d93edc9-d6be-4f78-a2c0-679af270caef.png
│       ├── 2e0da428-002c-4f24-abdc-edd21cfa339d.png
│       ├── 2e74d60e-d60d-49bd-806b-5701082e29b1.jpg
│       ├── 2ed9141b-64a2-43c9-ac26-e5d6427a0013.jpg
│       ├── 2f39568f-06b5-43fa-bf69-9dad23f78be1.png
│       ├── 3052b4ea-4f88-4311-9d67-0beabdb55f85.png
│       ├── 31779db2-79ba-4b44-a763-b2e133d8fc97.png
│       ├── 3231eeb1-ac70-4279-aa44-061a147d8a2a.jpg
│       ├── 324b53be-3b08-4051-92a7-7324b394f94d.png
│       ├── 32741854-ee5a-4258-b93f-087f16ac876d.png
│       ├── 32d15977-907b-4b40-b3e1-1f1527687893.jpg
│       ├── 34f0fa6a-c013-412c-a16f-0e71b57a8fc7.jpg
│       ├── 36c6f8b6-8fee-46fd-901e-0f1e42b8a8b5.jpg
│       ├── 36ffe1e3-ec59-4b6e-af40-cf9f676232ce.png
│       ├── 37b782d0-69f0-4b69-82ac-61931d391ba0.jpg
│       ├── 3809a309-2cc8-40fe-adbc-2a7445b9c4df.jpg
│       ├── 382efcae-5650-437a-803f-83ecc1081425.jpg
│       ├── 3917b977-9735-4b00-856f-93e4636a0305.png
│       ├── 3a002126-d2a7-44c0-99c4-e1036738b000.jpg
│       ├── 3a22a661-5e23-45cc-a6b8-e666a6c2807f.jpg
│       ├── 3affa40b-43a3-412b-87b0-2fd6f27ae825.jpg
│       ├── 3bdfcbc3-a807-460b-bda6-ad595f79d6ad.jpg
│       ├── 3c986756-362b-45d8-9b3d-4ef0172ff0de.png
│       ├── 3e0e73b6-fed0-40ec-885c-9933a1fff1bd.jpg
│       ├── 3f461b9e-d318-4032-a297-6bcfd85ec492.jpg
│       ├── 3fce984f-1fc4-4ed8-94a0-38931c25303c.jpg
│       ├── 41bf7078-3678-47c6-b8e2-632e2ff9402e.jpg
│       ├── 41f6d10a-03ec-47dc-bbff-e209f1e5aa7b.jpg
│       ├── 42658e61-e6d3-43b8-b7f3-ed003e286998.jpg
│       ├── 4323a1e8-8dc1-4002-b8f4-df62de118975.png
│       ├── 458d2e40-36ec-4252-bc03-87044fbe1a56.png
│       ├── 46d08957-2552-4705-9346-a873e076c336.png
│       ├── 46e183f2-9d18-47c5-b679-b37ec3386b36.png
│       ├── 4716c136-d8f3-49d8-98a5-2a126df95f90.jpg
│       ├── 495aef8b-25ac-4cc3-8f2e-271d4745aab1.png
│       ├── 49dc64ed-7406-4253-a462-1e7335495eec.jpg
│       ├── 4a22352f-17fb-4e46-b38a-daef7fb2dab9.jpg
│       ├── 4a63a2e2-12f2-4a7c-827e-9c90afbe26f7.png
│       ├── 4a7dbaf2-c67f-42aa-9d1e-cf86b23da86c.jpg
│       ├── 4abe6a48-7f59-47b9-9284-6279ce507bff.png
│       ├── 4ad138cc-7b6d-4681-9f3c-aa6e207668dc.jpg
│       ├── 4b3caf91-1976-4bf7-a05a-dcba7d708217.jpg
│       ├── 4b84b0a6-00ba-4092-9328-16319fbf406b.png
│       ├── 4baa9682-5e1e-496f-ad6f-fcb49ab36ee9.png
│       ├── 4c665123-ac98-4dcf-bef8-ca5360802076.png
│       ├── 4d679063-3676-479d-9167-ea756f2b349e.jpg
│       ├── 4d7b1cdf-7544-4e9e-b038-61c4aeb7b91e.jpg
│       ├── 4dc5a6cd-6d84-4ddd-83db-41fa1d551a7f.png
│       ├── 4e7fcdf9-a787-43b1-b5aa-52df5b36313a.png
│       ├── 4eae6675-26d6-480a-a110-d8fd5ebb4ef5.png
│       ├── 4eebffb5-5b13-4f77-b0c5-dc300acbcd4b.png
│       ├── 50b19969-5ffb-4edb-807a-4ec9cd4b71ca.jpg
│       ├── 50b681ca-6153-43b7-9420-eb899def399c.png
│       ├── 51cabb53-b198-4aa4-b3cf-c12d450ffb8a.png
│       ├── 5263c818-a5fa-4ff5-8f8d-82d48aeccebb.jpg
│       ├── 528256c3-0338-483f-aecf-afb1314c6426.jpg
│       ├── 537bc2ed-fbe1-48e8-8143-ab6847b5f9dd.png
│       ├── 545a301c-3306-45b5-bc29-b02b3f174744.png
│       ├── 54fdc530-62b5-460b-97d0-5814cdd01984.png
│       ├── 5520c8b9-477b-4026-a122-73c59f4a8c5b.jpg
│       ├── 585c9bec-b281-4e00-8485-0923065aef8d.jpg
│       ├── 5986f2ca-0e42-4a76-9faa-079239cde251.png
│       ├── 59cdb5e0-d41f-4841-9bfa-f3f89c92b404.png
│       ├── 59ce517f-6dcb-4d79-a6c8-003b46223ca7.jpg
│       ├── 5a2aa81b-6f4d-4e76-a9d0-bb2c8c3a036f.jpg
│       ├── 5a5d6794-051c-48b4-9861-13cfb3497764.png
│       ├── 5a67ab08-16b2-4df3-8584-6f7204978352.png
│       ├── 5acd4cb9-4b67-4617-abd7-7487b4fcb504.png
│       ├── 5bcdc427-3a89-41d9-b9ac-c72bd99ec290.jpg
│       ├── 5c7b70c1-11ad-43c8-9831-3cc26b29849c.png
│       ├── 5e4fd065-d4f4-4f20-b2dd-731168833c2d.jpg
│       ├── 5eb545b7-bbc7-4e0a-97a7-4da0e273ab16.jpg
│       ├── 5f348c8e-f67d-4194-bb83-9a2b2938af04.png
│       ├── 609c0552-acd9-4df9-b10b-d39955c0b684.jpg
│       ├── 6177072f-d68d-41b8-98bc-bd9ca59c1e9f.png
│       ├── 61b3b1bd-0e7a-4689-842d-383604e797ee.jpg
│       ├── 61b4bf9e-8c61-4182-8ae9-db663b56bef9.png
│       ├── 62abba69-fed3-4327-9a0a-241fea5fc024.jpg
│       ├── 6429a7a9-72b5-44ce-bf08-868b2707f5dc.png
│       ├── 6591ce9b-39ea-429a-b616-3ec615fb12bb.png
│       ├── 65ab190b-3dd1-4fda-9abf-d5e1f8ce555a.jpg
│       ├── 66304860-9c12-464f-895f-a2a19a637c5c.png
│       ├── 67933b03-6af9-4f3b-9b07-1e45ffbfaf13.jpg
│       ├── 687931cb-b384-458a-810e-5ec69c4da767.png
│       ├── 69811830-5a83-4a21-8ffc-2deed04627f5.png
│       ├── 6a7f4f14-6b7d-4820-8ce7-d0c18af4452e.png
│       ├── 6a84d372-ad99-4ae3-bbbe-2d95cb760a03.jpg
│       ├── 6d450de9-1521-4491-a8e0-80d48317b361.png
│       ├── 6d759596-04e5-4527-ae83-999817fdf3f2.png
│       ├── 6dc57745-bd8c-4127-8602-3d994fc0021d.jpg
│       ├── 6e046e12-57c1-41ae-8db1-6e20d9568010.jpg
│       ├── 6f6d43b8-4d32-4e92-98b0-80c3c57c5984.jpg
│       ├── 6f862360-d091-47d4-a9f4-df2f437b9460.jpg
│       ├── 70bac786-5e56-43ff-a43d-d5dcc251ed09.jpg
│       ├── 71116f54-d456-43ef-af98-0a261b24c458.png
│       ├── 714ac211-3a9f-4a6a-96e0-3e89a75303ac.jpg
│       ├── 71e8ac34-df3b-4325-9cb9-04c0533c6b99.png
│       ├── 721cdbfe-5f0a-4d46-9d20-5fe3624a4160.png
│       ├── 7404516b-49b8-4881-9a82-d9f24cc5f607.png
│       ├── 74520191-b8ae-4782-bf5e-fc67699a6852.jpg
│       ├── 746c3f5e-00ed-4723-b6fb-85ed4c0aa649.jpg
│       ├── 7497aaef-f0eb-4a26-916d-0edecd5ea0d5.png
│       ├── 74d2e68e-eba2-4749-9192-88fcd79cea06.jpg
│       ├── 74db5f57-8f2e-408a-9856-8af67b89799b.jpg
│       ├── 771c6cae-7fa6-48ab-8011-10c4ef14ceff.jpg
│       ├── 77a8e574-9493-4950-a558-c367caa57555.png
│       ├── 77c02077-3016-48f0-9d22-989a57a27ce1.png
│       ├── 7826671e-a04c-4faa-a4fe-56a3cfa601b2.png
│       ├── 78842096-1885-4e8b-9026-ae473ca9d9ba.jpg
│       ├── 79f4f2e9-e6fd-4c22-85c2-a78fc4f3fd8f.jpg
│       ├── 7a22ccce-b6b6-4b8e-bdd1-0fed48ca7532.jpg
│       ├── 7af494ab-35f3-45c3-8526-cde16942a288.jpg
│       ├── 7b756a7a-ff80-46b9-939f-e5f4214afdc6.jpg
│       ├── 7bd6a40b-28dd-45ff-a6e7-cfbbf40db831.jpg
│       ├── 7c74c92e-3602-4cd5-b86f-f86956493444.jpg
│       ├── 7d0b8c89-cb15-4122-a379-7574d40e2f5c.jpg
│       ├── 7d370901-b699-4840-a0bc-31219fa19315.png
│       ├── 7d657e5d-3f2a-41c8-a0cc-3461f91d6d65.png
│       ├── 7e980d60-dea5-4ae0-8443-4eec80136ddd.jpg
│       ├── 8020aec6-2609-46db-bd83-7aadf9b65be6.jpg
│       ├── 81487a8f-23f5-4f29-bf68-aed2330126a9.png
│       ├── 818a8f4b-9b3d-4ea7-98b4-1de5141f89c3.png
│       ├── 81bdc6ad-779a-4bca-9e5b-13e4c5ab2cdc.jpg
│       ├── 821400cd-c711-4722-9821-8cb72b8a12e2.jpg
│       ├── 8323a3ce-8b45-4d7f-a73c-e2e4cda34ffb.png
│       ├── 8380c616-3cb6-4101-bf8e-11cdf0d9a4d5.png
│       ├── 845953a9-3bb1-4dc7-b6f8-806dc313a961.png
│       ├── 85288ace-1e1e-438f-b93f-22c912f6f22c.jpg
│       ├── 858d9d73-ee5d-4160-b9c0-158800028dd8.jpg
│       ├── 87afadcc-b841-4131-ad9c-e4c8478c9daa.png
│       ├── 87b84d55-5a91-446b-85c8-c52e20c127c0.jpg
│       ├── 87f6fdc7-26bf-43ca-858e-9746af6ff4ec.png
│       ├── 892c7aba-22e5-4526-8c0f-fb53c92a3d54.png
│       ├── 895b0cba-0519-4ea6-ab97-04718fe67ced.png
│       ├── 89a752d9-c763-47fb-8c0f-ef46fba3ba8c.jpg
│       ├── 8a9e5b1d-4449-4e60-81a8-269a3aafb166.jpg
│       ├── 8ac348eb-39a0-4b87-906c-47bfbb351b6e.png
│       ├── 8b515383-ca54-4194-b803-a64ab1388a7a.png
│       ├── 8b95d5e9-3c38-47dd-a5a1-879cf2a28c22.jpg
│       ├── 8c444dfd-d1e6-4100-a881-67e4fd0af356.png
│       ├── 8c73956c-f05d-410c-934b-aa8ee0118279.jpg
│       ├── 8cf8f843-d774-4dff-a159-c7707b6afc34.jpg
│       ├── 8d348318-95d2-4fbf-abc4-68587c49ea89.jpg
│       ├── 8e191342-bec4-4bba-a335-d6b450982da4.png
│       ├── 8e486528-36f4-491f-a01e-bbd2e88f8697.png
│       ├── 8e6b7f7e-d449-4192-b578-4c9b598938a2.png
│       ├── 8e6c4db9-0241-431d-8248-8eba3f64b098.jpg
│       ├── 8ec00b49-778f-4a80-8445-6af1657461ba.jpg
│       ├── 8f131070-3eb6-484f-9dfd-ba5f8a60a975.jpg
│       ├── 8fad5bb0-1be4-4196-ad25-9f0aaaa69a47.png
│       ├── 913007c2-0efb-4181-99ea-e6e3304399f5.png
│       ├── 91700ed4-8891-43cf-86b7-d14d99990e1c.jpg
│       ├── 919bfa28-387f-4842-92e0-38b60b163036.png
│       ├── 928104e5-2f9b-4228-92ff-ae385004ddd4.jpg
│       ├── 9325ddf7-46d4-47df-aadb-fb6f47bf9408.jpg
│       ├── 93cbdd3c-a631-43c8-b5dc-d222c816ac67.jpg
│       ├── 940e373b-e89d-4316-b27d-27cbda85310e.png
│       ├── 9428d2bd-bec6-4afb-9691-1edc9e4c6622.png
│       ├── 94347be9-0183-4a25-8f96-1edc30239d21.jpg
│       ├── 94858202-f2f1-4259-859d-f4da518cda48.png
│       ├── 96aca7ac-ce92-44c9-9d66-6eb692e8400e.jpg
│       ├── 974f22b6-9f46-495b-98ff-bb9210a0147b.jpg
│       ├── 976df08d-ebe8-433f-9e1a-7a495b93abbf.jpg
│       ├── 98207d8e-0ea5-4e03-8a42-b0d0ffb83ddf.jpg
│       ├── 9870558c-58c9-4142-b39e-7f1001c82921.jpg
│       ├── 98b7bfd1-e91f-4cd1-92b2-93d38de47ea3.png
│       ├── 99c41a3b-20a5-4d82-a19a-57f1c679d2f9.jpg
│       ├── 9a286bb6-f590-43a7-80a2-df2b824012b5.png
│       ├── 9a2adaca-b37a-4249-897d-6c8b401f80c2.png
│       ├── 9a3bd3ac-f091-4672-8c24-e7142f4a0775.png
│       ├── 9b63171a-db9d-4c7c-9ced-bd53a4926ed5.png
│       ├── 9c488c4a-97da-4982-8082-9a93459d87b9.png
│       ├── 9cd273c8-b918-4b57-ac92-a4b6727fa697.jpg
│       ├── 9d46a8c3-e8ee-42d3-adbb-0f571817af53.png
│       ├── 9d9af44b-c75b-4f45-bd28-490145ec7dcd.jpg
│       ├── 9dcfb35c-a985-445b-9ee8-c207857b0946.jpg
│       ├── 9e71223e-0c65-437c-8dec-6d7298e5b8b7.jpg
│       ├── 9e72480e-9432-4ed9-bba7-087c1f8bd52d.jpg
│       ├── 9ed34c0f-0da0-4ff9-abce-02fdf1fba3e9.png
│       ├── 9f1da09f-6fd8-4baa-b8da-eb30ae3d3645.png
│       ├── 9f5700fa-54e9-4778-bd74-fe93171c7348.png
│       ├── 9f82b477-68d6-4b06-a595-45a40bf3d536.png
│       ├── 9faed51d-0f14-41be-8f4e-50c77b8e4b03.jpg
│       ├── a00e3ac3-410c-453a-9f4f-86668c955828.jpg
│       ├── a07d9b9e-7103-4085-823f-a0a321da0e2c.jpg
│       ├── a0bf094c-00e0-4e5a-8313-796af992c044.png
│       ├── a1eb4d4f-48c9-41d8-8f94-e342b31330b9.png
│       ├── a2bbe9c8-2033-440b-8ddc-65ae7e32856c.jpg
│       ├── a3a41b34-7fd9-4599-b1bd-d8537562ac3d.jpg
│       ├── a5688215-a244-4408-9863-2288c7da9f99.png
│       ├── a59f59e8-fe2e-46b1-8389-3e9e1a018af0.png
│       ├── a5d7d9bb-97a7-4f83-8f9b-ac1990847f04.jpg
│       ├── a7121e45-4350-400a-b8a4-2c8c9978583d.png
│       ├── a738113c-8d9e-41b0-ab98-ee55e7bd5d7d.jpg
│       ├── a77033ee-f6c7-4de6-a592-43056c6f565a.jpg
│       ├── a92de1ed-0d37-4382-8124-18d72fe1bdd1.jpg
│       ├── ad33ed42-481d-4c50-91ae-89e59e84477f.png
│       ├── adac350a-a584-475d-85a2-7d2a22d009f2.png
│       ├── ae8b2e85-f2d8-4d37-b8a7-9a179024209b.png
│       ├── aeb1cbeb-6271-4c5e-b11d-20031e1bbb4d.jpg
│       ├── af588a97-ea15-43a0-aee8-c869029e7483.jpg
│       ├── afefc98a-f4cd-4bec-91e9-0a757f9c543a.png
│       ├── b04667e0-a56d-433b-adab-ea7e54ada808.jpg
│       ├── b04af165-e0c1-4d6a-8469-59512177517f.png
│       ├── b08b18c4-f052-4e2c-a068-0c4757465d5a.png
│       ├── b1bc8bf6-288a-40db-9d74-58fde0c2350c.jpg
│       ├── b257bef9-df57-4c51-80d7-36014b013cce.jpg
│       ├── b289ec65-17e9-4747-9c8e-eb4a90b11445.png
│       ├── b2a4b39a-673a-400d-99f7-54b3d00cdb74.jpg
│       ├── b39b0be9-bd88-437f-8435-8814de40266f.png
│       ├── b5d5bccc-3b71-49a3-89de-cd59375ca564.jpg
│       ├── b6c5c996-59f4-4f6c-a544-fc414785169b.png
│       ├── b7c92d2f-4c74-4f65-af6d-e9a6844cc344.png
│       ├── b7eee492-dd78-4fe8-a4ac-0e5a1586fba7.jpg
│       ├── b8321273-0291-4a0e-8a3e-25b6a3a0a44d.jpg
│       ├── b872ef1e-b13d-4d7f-b51a-20cf4912cbe5.jpg
│       ├── b943de5a-4dd5-418e-8049-05644dec3ae7.jpg
│       ├── ba3ceb86-71c9-4a73-9c18-5287cca5cdbf.jpg
│       ├── ba53cb79-52b1-432f-aa73-5a755a917d88.png
│       ├── babcc139-1e74-41c5-8d2d-04319b66180e.jpg
│       ├── bb01684c-9ac8-498f-94f1-619310913282.png
│       ├── bce10936-ec0d-4570-b9c4-045bc1784b86.png
│       ├── bd7c6bfb-acbe-405c-8ed3-25729c643d7c.jpg
│       ├── bd85eb30-dedd-4d45-a692-ef5f1836a955.jpg
│       ├── bd8ccb66-911e-4455-b9b6-042b253bc0a5.jpg
│       ├── bdcfa437-36e0-499e-bf22-63ee2b5ae8d7.png
│       ├── be7783e0-f32e-4be0-9e1d-5557a27fb23e.png
│       ├── bea16d21-35e0-4219-9430-9b23da26df88.jpg
│       ├── bef9e46f-da60-4fe6-bccd-2b20bce1e537.png
│       ├── bfe97123-264c-464c-b6b9-9b69639ecac6.jpg
│       ├── c0cdb681-eee6-447e-9eb1-1efcb2d0a7da.png
│       ├── c1160c9b-01f3-4abb-b7ae-b0b057fa9b6d.png
│       ├── c129257a-a5c2-4765-ae12-b7b7b8029092.png
│       ├── c24e5ce4-4ac7-4478-ac88-50fa4ac5e7d3.jpg
│       ├── c50fd8dc-a42e-4b24-be60-5b483d0e7f62.png
│       ├── c62c4ed3-60cf-413e-bc9b-927af2f02adf.jpg
│       ├── c64be1a5-0fd1-4962-9fb2-a1bf73ad889c.png
│       ├── c7f48640-f76f-40f9-b090-bca9da784228.png
│       ├── c94d1706-3444-4c8a-bc21-b4f56a4723a4.jpg
│       ├── c968b36b-6335-44c4-9691-3680473b0f65.png
│       ├── ca6eebda-a8ba-4fd6-ab9c-dd04967cac32.png
│       ├── ca722832-5264-4255-82e8-64217c7e089f.jpg
│       ├── ca7e36fd-d21d-4178-a161-b40c4db626a6.jpg
│       ├── cb23ff56-a541-4ea1-bf91-ad89e8078914.png
│       ├── cbbe8fba-ffa8-48db-85cb-3d1c9f9bf910.jpg
│       ├── cbd048b4-fee0-4910-b07b-afbf5f5080a4.jpg
│       ├── cc28c675-794b-4ec3-8fbd-54a4c30b9091.png
│       ├── cccc2dd2-d830-4bd8-9da0-6bb2de806b4b.jpg
│       ├── cd2b0753-b308-48b7-b154-8591cdeff4c1.jpg
│       ├── ce01edb3-579c-46b4-8246-0e838042c784.png
│       ├── ce2488ea-3d20-4735-801a-1037f3996875.jpg
│       ├── cefc454a-7a3a-4143-b2d3-e3b9b513c174.jpg
│       ├── cf29fd4e-dff3-4165-b7bf-a4e344a473d3.png
│       ├── cff6f6c1-f772-4772-9c12-f302efa88c33.jpg
│       ├── d0566b56-2e99-4893-9a39-1e37f1d4fc69.jpg
│       ├── d0ca7926-9677-44e8-8f27-0522d8a58870.png
│       ├── d0e26d5b-b858-47da-aea1-ecba811e28c0.png
│       ├── d0f0a38f-0878-4564-83be-bcad9d7ba1df.jpg
│       ├── d130479f-a402-40a1-8697-8c90f63fccf3.png
│       ├── d1c90763-c56a-43bb-807e-8e43f15928b1.jpg
│       ├── d35a71fe-3410-407c-be11-baed35e2773e.jpg
│       ├── d43e51a3-9ff2-4c35-89a2-f3fd14bb4532.jpg
│       ├── d46bf3be-e57d-40f3-bedc-f4ddac1fa00e.png
│       ├── d4d899a6-e579-4dc0-ba97-a362ce5730ae.jpg
│       ├── d5b8ef89-d66e-4675-97fe-ea16aa7f8514.png
│       ├── d5cc29b6-881a-466b-9b4c-fe57a5b87638.png
│       ├── d683ca9b-7a99-42ba-870b-4ed8fcecf533.png
│       ├── d781653a-837b-4e02-91f2-b19905e13210.jpg
│       ├── d80a65b6-7ae9-4937-9291-6103fcbde76f.png
│       ├── d8199d92-a6cc-434c-b019-53a3a7c62b95.png
│       ├── d921adc5-4788-4133-9772-ba0715e505db.jpg
│       ├── d9299f26-da6f-4736-b686-59212a02a87e.png
│       ├── d9cd6668-34ed-4d30-a60d-6c19677fd176.png
│       ├── da5c8fb0-b413-4a69-a81b-a48da241d62c.png
│       ├── daffdc06-2a9e-4e28-b87a-fcc76277fdc9.png
│       ├── db4478d3-3602-4737-9c7c-eabff9f14ffb.png
│       ├── db6dd414-dfbe-48eb-b5b7-2464891a488b.png
│       ├── dc419344-dbc2-4f61-b69c-dd6804601c97.jpg
│       ├── dc6303d6-359c-4714-b3e2-84b080927167.jpg
│       ├── dd224d98-d86e-40af-8978-d154950a175d.jpg
│       ├── dd590c20-4da2-42bd-b8c4-b75dc7eab1ba.jpg
│       ├── dd59ec48-2b3f-46ad-b095-f46b456209ab.jpg
│       ├── dd82b31b-0c16-46a2-be02-911db23b09eb.png
│       ├── deb0fec0-1acf-4372-86d3-6fb61dba2c99.png
│       ├── df893dbb-0970-4e1a-b42d-c4991887052c.jpg
│       ├── dfd958b3-468a-48f5-a74a-b0a05ebb3f68.jpg
│       ├── e0214b05-78a8-4e9d-b114-0e02e74c3858.jpg
│       ├── e0b6e222-c382-4b81-a877-0effb62f1452.png
│       ├── e1abbb8f-dcac-4952-9659-96e9fd9a199a.png
│       ├── e301ea1c-e2a7-4011-aa2d-bc2d03e6adab.png
│       ├── e5df4021-a8fd-4df7-82d0-538edcf09c84.png
│       ├── e68fa9f0-8fb5-4c9f-bcec-a3a0ff9947f3.jpg
│       ├── e86365c0-7712-46d7-a5ba-3fe0c9a30f7c.png
│       ├── e8737af0-d8c1-4d64-81cb-cdc28749223c.jpg
│       ├── e88f7898-6edc-4074-8201-04678b99073d.png
│       ├── e91f0d8f-0daf-4225-aa5f-a12369461272.png
│       ├── e930dbf4-8366-4f10-b826-d44c8744b67c.jpg
│       ├── e9c270c7-c6c1-4bc7-9624-5e4a4331e31c.png
│       ├── ea205b14-3e4a-48cd-acb5-402877eb7421.png
│       ├── ea73e88e-b273-4cf4-a95d-4b259ee19172.jpg
│       ├── ea82cca4-561c-4954-a9e1-9fbcddb86977.jpg
│       ├── eb89a00a-a13c-459b-81c3-61ad94bb2a57.png
│       ├── ebaa3335-f797-4060-8a64-273b23f1272a.jpg
│       ├── ec6f6b3a-2d4d-4754-a4c1-91775da99073.jpg
│       ├── ecc9da62-784c-4d8c-9985-d2303c5dbb6b.png
│       ├── ef65a723-6093-4fbc-a8b1-c3a041a75a37.png
│       ├── efca2431-d0bf-4c84-8ebb-ff5fdf6d9416.png
│       ├── f061a5ce-de21-427c-bdb8-472a8269d954.png
│       ├── f079af36-9361-4407-b5e0-da4fd73a0907.png
│       ├── f0905a80-f0b8-4519-a674-7f9c54dddb3e.jpg
│       ├── f0b6f861-da34-4d43-bb8e-9985f79f3e82.jpg
│       ├── f1184a2e-09fb-409f-95a1-019d431a7b50.png
│       ├── f1e1f8bb-eea4-45b7-9329-e8c5bcf7fcd0.jpg
│       ├── f2066c38-cb5e-467b-9f19-38ec2a46adfc.png
│       ├── f24b4d1c-4904-4daa-9151-6218fbc9cb9b.jpg
│       ├── f28dc269-8458-471d-95a9-46acae71d829.jpg
│       ├── f34201f1-e152-44b3-ba79-d5b578d6d662.jpg
│       ├── f394e77b-a741-4432-9bdf-393363ef784e.jpg
│       ├── f3da2ff4-3711-4da7-baef-fcdd5bf60c99.jpg
│       ├── f47a582b-22fb-4239-8277-acced2f00e11.jpg
│       ├── f50a8648-bd36-4ef9-b2f6-71138507fb87.png
│       ├── f594d80f-2551-4d41-bc57-7f8b0bce1274.jpg
│       ├── f686749b-d196-445a-8c58-f0718adbf905.png
│       ├── f6b48b3f-2740-446c-9158-90502c21a255.jpg
│       ├── f78a6d92-57d3-4ee0-a4d9-b99f41d21800.jpg
│       ├── f855e145-fa50-40e0-ac99-990280ed3375.jpg
│       ├── f8af9f5e-7583-4149-a746-b6c9ca0c2b9d.jpg
│       ├── f9a91c2b-6ec1-4680-88c9-212ef6f605e9.jpg
│       ├── fa4f27be-8a10-4647-b9f6-5b4823c6bf4b.jpg
│       ├── fa7388b3-55e8-407d-8c35-e50fedf3f5fd.png
│       ├── fbec9615-054d-4b7e-8b61-11afe85c57b9.jpg
│       ├── fc00d8ba-176e-4a11-b41c-94a77a2c6f77.jpg
│       ├── fc4b5ee1-499c-419c-b830-0aa4b9412b3e.jpg
│       ├── fc58918f-dd19-4395-8a6b-4cd01c4550c7.png
│       ├── fc609978-3167-4200-89ec-39a8816d3120.png
│       ├── fc98e1b2-d13d-4684-8ad7-368a3db61c4f.png
│       ├── fce0caf5-b7c7-4bd6-8d15-08b1bc35277a.png
│       ├── fcf0b566-71e4-4b63-8c09-4bbd4c5aa869.jpg
│       ├── fd3f528c-9974-454b-8d9e-2d7b72611cda.png
│       ├── fd6d43df-d632-4904-9a00-2fffcaaef1b6.jpg
│       ├── fecd64ed-ec39-487f-a18f-d110998c94e7.jpg
│       ├── ffd9dd5f-68bc-44d6-8fd4-9e031f25af88.jpg
│       └── ffe3cb8d-8c8d-43a6-a031-9cdc5d45cc98.jpg
├── fix_dependencies.py
├── full_code_manga.txt
├── models
│   └── manga_bubble_detector_best.pt
├── requirements.txt
├── setup_check.py
├── src
│   ├── __init__.py
│   ├── __pycache__
│   │   ├── __init__.cpython-312.pyc
│   │   ├── __init__.cpython-313.pyc
│   │   ├── detection.cpython-312.pyc
│   │   ├── detection.cpython-313.pyc
│   │   ├── ocr.cpython-313.pyc
│   │   ├── translation.cpython-313.pyc
│   │   └── utils.cpython-313.pyc
│   ├── data
│   │   ├── outputs
│   │   └── uploads
│   ├── detection.py
│   ├── ocr.py
│   ├── translation.py
│   └── utils.py
└── static
    └── styles.css



<README.md>
# Автоматический переводчик манги

Приложение для автоматического перевода японской, корейской и китайской манги с использованием нейронных сетей.

## 🚀 Быстрый старт

### 1. Устранение конфликтов зависимостей

Если у вас установлен `googletrans`, удалите его (конфликтует с новыми версиями httpx):

```bash
pip uninstall googletrans -y
```

### 2. Чистая установка

```bash
# Создайте новое виртуальное окружение
python -m venv manga_env
source manga_env/bin/activate  # Linux/macOS
# или
manga_env\Scripts\activate  # Windows

# Установите зависимости
pip install -r requirements.txt

# Установите Tesseract OCR (системная зависимость)
# Ubuntu/Debian:
sudo apt-get install tesseract-ocr tesseract-ocr-jpn tesseract-ocr-kor tesseract-ocr-chi-sim

# macOS:
brew install tesseract tesseract-lang

# Windows: скачайте с https://github.com/UB-Mannheim/tesseract/wiki
```

### 3. Проверка системы

```bash
python setup_check.py
```

### 4. Запуск

```bash
streamlit run app.py
```

## 📋 Описание

Проект реализует полный пайплайн обработки страниц манги:
- **Детекция речевых пузырей** с помощью YOLOv8
- **Множественное OCR** (PaddleOCR, EasyOCR, Tesseract) для максимальной точности
- **Автоматический перевод** на множество языков
- **Веб-интерфейс** для удобной работы с результатами

## 🛠 Технологии

- **Детекция объектов**: YOLOv8 (Ultralytics)
- **OCR системы**: 
  - PaddleOCR (лучший для азиатских языков)
  - EasyOCR (универсальный)
  - Tesseract (резервный)
- **Перевод**: Google Translate API через deep-translator
- **Интерфейс**: Streamlit
- **Обработка изображений**: OpenCV, Pillow

## 🌍 Поддерживаемые языки

### Распознавание (OCR):
- 🇯🇵 Японский (хирагана, катакана, кандзи)
- 🇰🇷 Корейский (хангыль)
- 🇨🇳 Китайский (упрощенный и традиционный)
- 🇬🇧 Английский
- 🇷🇺 Русский

### Перевод:
- Любые языки, поддерживаемые Google Translate

## ⚡ Производительность

- **Детекция пузырей**: ~100-500ms на изображение
- **OCR на пузырь**: ~200-800ms (зависит от размера и сложности)
- **Перевод**: ~100-300ms на фразу

**Общее время**: 2-15 секунд на страницу (зависит от количества текста)

## 🔧 Решение проблем

### Ошибка "googletrans requires httpx==0.13.3"

```bash
pip uninstall googletrans -y
pip install deep-translator
```

### PaddleOCR не установился

```bash
# Для CPU (рекомендовано)
pip install paddlepaddle
pip install paddleocr

# Для GPU (если есть CUDA)
pip install paddlepaddle-gpu
pip install paddleocr
```

### Tesseract не найден

**Ubuntu/Debian:**
```bash
sudo apt-get update
sudo apt-get install tesseract-ocr tesseract-ocr-jpn tesseract-ocr-kor tesseract-ocr-chi-sim tesseract-ocr-rus
```

**macOS:**
```bash
brew install tesseract tesseract-lang
```

**Windows:**
1. Скачайте установщик: https://github.com/UB-Mannheim/tesseract/wiki
2. Установите в C:\Program Files\Tesseract-OCR\
3. Добавьте в PATH: C:\Program Files\Tesseract-OCR\

### EasyOCR долго загружается

При первом запуске EasyOCR скачивает модели (~100-500MB). Это нормально.

### Модель детекции не найдена

Убедитесь, что файл `manga_bubble_detector_best.pt` находится в папке `models/`.

### Низкое качество OCR

1. Попробуйте другой порог уверенности детекции
2. Проверьте качество исходного изображения
3. Убедитесь, что выбран правильный язык

## 📁 Структура проекта

```
manga_detection/
├── models/                    # Обученные модели
│   └── manga_bubble_detector_best.pt
├── src/                      # Исходный код
│   ├── detection.py          # Детекция пузырей
│   ├── ocr.py               # OCR системы  
│   ├── translation.py       # Перевод
│   └── utils.py             # Утилиты
├── data/                    # Данные
│   ├── uploads/             # Загруженные файлы
│   └── outputs/             # Результаты
├── static/                  # Статические файлы
├── app.py                   # Главное приложение
├── config.py                # Конфигурация
├── setup_check.py           # Проверка системы
├── requirements.txt         # Зависимости
└── README.md               # Документация
```

## 🎯 Использование

1. **Запустите приложение**: `streamlit run app.py`
2. **Откройте в браузере**: http://localhost:8501
3. **Загрузите изображение** страницы манги
4. **Выберите языки** (исходный и целевой)
5. **Настройте параметры** детекции
6. **Нажмите "Начать обработку"**
7. **Просмотрите и отредактируйте** результаты
8. **Сохраните** готовый перевод

## 🏗 Архитектура OCR

Система использует каскадный подход:

1. **Предобработка изображения**:
   - Увеличение контраста
   - Шумоподавление  
   - Масштабирование маленьких областей

2. **Множественное распознавание**:
   - PaddleOCR (приоритет для азиатских языков)
   - EasyOCR (универсальное решение)
   - Tesseract (резервный вариант)

3. **Выбор лучшего результата** по алгоритму:
   - Приоритет движка
   - Длина распознанного текста
   - Уверенность распознавания

## 🤝 Вклад в проект

1. Fork репозитория
2. Создайте ветку для фичи: `git checkout -b feature/amazing-feature`
3. Коммитьте изменения: `git commit -m 'Add amazing feature'`
4. Push в ветку: `git push origin feature/amazing-feature`
5. Создайте Pull Request

## 📝 Лицензия

Разработано в рамках курса машинного обучения.

## 🆘 Поддержка

Если возникли проблемы:

1. Запустите `python setup_check.py` для диагностики
2. Проверьте системные требования
3. Убедитесь в корректности установки зависимостей
4. Создайте Issue с описанием проблемы

## 🔮 Планы развития

- [ ] Поддержка batch-обработки
- [ ] Интеграция inpainting моделей для лучшего замещения текста
- [ ] API для интеграции с другими приложениями
- [ ] Поддержка больше форматов файлов
- [ ] Улучшение точности детекции для сложных случаев</README.md>


<app.py>
# app.py - Упрощенный интерфейс с ручным выбором языка
import streamlit as st
import numpy as np
from PIL import Image
import os
from pathlib import Path

# Импорт наших модулей
from src.detection import BubbleDetector
from src.ocr import TextExtractor
from src.translation import TextTranslator
from src.utils import (save_uploaded_file, validate_image, create_result_summary,
                       get_language_flag, get_language_name)
from config import *

# Настройка страницы
st.set_page_config(
    page_title="Manga Translator",
    page_icon="📚",
    layout="wide",
    initial_sidebar_state="expanded"
)

def load_css():
    css_file = BASE_DIR / "static" / "styles.css"
    if css_file.exists():
        with open(css_file) as f:
            st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

@st.cache_resource
def load_models():
    """Загрузка моделей с кэшированием"""
    try:
        detector = BubbleDetector(str(MODEL_PATH), DETECTION_CONFIDENCE)
        st.success("✅ Модель детекции загружена")
    except Exception as e:
        st.error(f"❌ Ошибка загрузки модели детекции: {e}")
        return None, None, None
    
    try:
        ocr = TextExtractor()
        st.success("✅ OCR системы готовы")
    except Exception as e:
        st.error(f"❌ Ошибка инициализации OCR: {e}")
        return detector, None, None
    
    try:
        translator = TextTranslator()
        st.success("✅ Система перевода готова")
    except Exception as e:
        st.error(f"❌ Ошибка инициализации переводчика: {e}")
        return detector, ocr, None
    
    return detector, ocr, translator

def process_manga_page_manual(image_path, detector, ocr, translator, source_lang, target_lang):
    """Обработка страницы манги с РУЧНЫМ выбором языка"""
    
    # Детекция пузырей
    with st.spinner("🔍 Поиск речевых пузырей..."):
        bubbles = detector.detect_bubbles(image_path)
    
    if not bubbles:
        st.warning("⚠️ Речевые пузыри не найдены на изображении")
        return []
    
    st.success(f"✅ Найдено {len(bubbles)} речевых пузырей")
    
    # OCR и перевод с выбранным языком
    results = []
    progress_bar = st.progress(0)
    status_text = st.empty()
    
    for i, bubble in enumerate(bubbles):
        progress_bar.progress((i + 1) / len(bubbles))
        status_text.text(f"📝 Обработка пузыря {i+1}/{len(bubbles)} (язык: {get_language_flag(source_lang)} {get_language_name(source_lang)})")
        
        # Извлечение текста на выбранном языке
        original_text = ocr.extract_text_simple(image_path, bubble['bbox'], source_lang)
        
        # Перевод текста
        translated_text = ""
        if original_text:
            if source_lang != target_lang:
                translated_text = translator.translate(original_text, source_lang, target_lang)
            else:
                translated_text = original_text  # Не переводим если языки одинаковые
        
        results.append({
            'bbox': bubble['bbox'],
            'confidence': bubble['confidence'],
            'class_id': bubble['class_id'],
            'original_text': original_text,
            'translated_text': translated_text,
            'source_language': source_lang,
            'target_language': target_lang
        })
    
    progress_bar.empty()
    status_text.empty()
    return results

def main():
    """Основная функция приложения"""
    
    load_css()
    
    # Заголовок
    st.markdown('<h1 class="main-header">📚 Переводчик манги (ручной выбор языка)</h1>', 
                unsafe_allow_html=True)
    
    st.markdown("""
    ### 🎯 Простой и надежный подход:
    - **📝 Ручной выбор языков** - вы точно знаете что на картинке
    - **🎯 Без автоопределения** - никаких ошибок распознавания
    - **🌍 5 языков OCR**: 🇯🇵 Японский, 🇰🇷 Корейский, 🇨🇳 Китайский, 🇺🇸 Английский, 🇷🇺 Русский
    - **🔄 Простой перевод** между любыми языками
    """)
    
    # Боковая панель с настройками
    st.sidebar.header("⚙️ Настройки языков")
    
    source_lang = st.sidebar.selectbox(
        "🔤 Исходный язык (на картинке):",
        options=['ja', 'ko', 'zh', 'en', 'ru'],
        format_func=lambda x: f"{get_language_flag(x)} {get_language_name(x)}",
        index=0,  # Японский по умолчанию для манги
        help="Выберите язык текста на вашем изображении"
    )
    
    target_lang = st.sidebar.selectbox(
        "🌐 Язык перевода:",
        options=['ru', 'en', 'ja', 'ko', 'zh'],
        format_func=lambda x: f"{get_language_flag(x)} {get_language_name(x)}",
        index=0,  # Русский по умолчанию
        help="На какой язык переводить"
    )
    
    # Показываем выбранную пару
    if source_lang == target_lang:
        st.sidebar.info("ℹ️ Языки одинаковые - перевод не нужен")
    else:
        st.sidebar.success(f"✅ {get_language_flag(source_lang)} → {get_language_flag(target_lang)}")
    
    confidence = st.sidebar.slider(
        "🎯 Порог уверенности детекции:",
        min_value=0.1,
        max_value=1.0,
        value=DETECTION_CONFIDENCE,
        step=0.1,
        help="Более высокие значения = меньше ложных срабатываний"
    )
    
    # Информация о языках
    with st.sidebar.expander("ℹ️ Поддерживаемые языки"):
        st.write("**🔤 OCR (распознавание):**")
        st.write("🇯🇵 Японский - хирагана, катакана, кандзи")
        st.write("🇰🇷 Корейский - хангыль")  
        st.write("🇨🇳 Китайский - упрощенный")
        st.write("🇺🇸 Английский - латиница")
        st.write("🇷🇺 Русский - кириллица")
        
        st.write("**🌐 Перевод:**")
        st.write("Любые направления через Google Translate")
    
    # Загрузка моделей
    with st.spinner("🚀 Загрузка моделей..."):
        detector, ocr, translator = load_models()
    
    if not all([detector, ocr, translator]):
        st.error("⚠️ Не удалось загрузить все необходимые компоненты")
        return
    
    detector.confidence = confidence
    
    # Загрузка файла
    uploaded_file = st.file_uploader(
        "📁 Выберите изображение манги",
        type=['jpg', 'jpeg', 'png', 'webp'],
        help="Поддерживаемые форматы: JPG, PNG, WebP. Максимальный размер: 10MB"
    )
    
    if uploaded_file is not None:
        if not validate_image(uploaded_file):
            st.error("❌ Некорректный файл или слишком большой размер")
            return
        
        image_path = save_uploaded_file(uploaded_file)
        
        # Отображение загруженного изображения
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("📸 Исходное изображение")
            image = Image.open(image_path)
            st.image(image, use_container_width=True)
            st.caption(f"Размер: {image.size[0]}×{image.size[1]} пикселей")
        
        # Кнопка обработки
        if st.button(f"🚀 Обработать ({get_language_flag(source_lang)} → {get_language_flag(target_lang)})", 
                     type="primary", use_container_width=True):
            
            results = process_manga_page_manual(
                image_path, detector, ocr, translator, source_lang, target_lang
            )
            
            if results:
                # Отображение результатов детекции
                with col2:
                    st.subheader("🎯 Результат детекции")
                    bubbles = [{'bbox': r['bbox'], 'confidence': r['confidence']} 
                              for r in results]
                    visualization = detector.visualize_detection(image_path, bubbles)
                    st.image(visualization, use_container_width=True)
                
                # Статистика
                summary = create_result_summary(results)
                
                st.markdown("### 📊 Статистика обработки")
                col_stats1, col_stats2, col_stats3 = st.columns(3)
                
                with col_stats1:
                    st.metric("🎯 Найдено пузырей", summary['total_bubbles'])
                
                with col_stats2:
                    st.metric("📝 Распознано текста", 
                             f"{summary['successful_ocr']}/{summary['total_bubbles']}")
                    st.caption(f"Успешность: {summary['ocr_success_rate']:.1f}%")
                
                with col_stats3:
                    if source_lang == target_lang:
                        st.metric("🔄 Без перевода", summary['total_bubbles'])
                        st.caption("Языки одинаковые")
                    else:
                        st.metric("🌐 Переведено", 
                                 f"{summary['successful_translation']}/{summary['total_bubbles']}")
                        st.caption(f"Успешность: {summary['translation_success_rate']:.1f}%")
                
                # Детальные результаты
                st.markdown("### 📋 Детальные результаты")
                
                for i, result in enumerate(results):
                    confidence = result['confidence']
                    source_flag = get_language_flag(source_lang)
                    target_flag = get_language_flag(target_lang)
                    
                    # Иконка для уверенности детекции
                    conf_icon = "🟢" if confidence > 0.7 else "🟡" if confidence > 0.5 else "🔴"
                    
                    with st.expander(
                        f"{conf_icon} Пузырь #{i+1} | {source_flag} → {target_flag} | "
                        f"Уверенность: {confidence:.2f}"
                    ):
                        
                        col_orig, col_trans = st.columns(2)
                        
                        with col_orig:
                            st.markdown(f"**🔤 Оригинал ({source_flag} {get_language_name(source_lang)}):**")
                            original = st.text_area(
                                "Оригинал",
                                value=result['original_text'],
                                key=f"orig_{i}",
                                label_visibility="collapsed",
                                height=100
                            )
                        
                        with col_trans:
                            if source_lang == target_lang:
                                st.markdown(f"**🔄 Без перевода:**")
                            else:
                                st.markdown(f"**🌐 Перевод ({target_flag} {get_language_name(target_lang)}):**")
                                
                            translated = st.text_area(
                                "Перевод",
                                value=result['translated_text'],
                                key=f"trans_{i}",
                                label_visibility="collapsed",
                                height=100
                            )
                        
                        # Информация
                        st.caption(f"📍 Координаты: {result['bbox']}")
                        
                        # Обновление результатов при редактировании
                        if original != result['original_text']:
                            result['original_text'] = original
                        if translated != result['translated_text']:
                            result['translated_text'] = translated
                
                # Кнопки действий
                col_save, col_clear = st.columns(2)
                
                with col_save:
                    if st.button("💾 Сохранить результаты", use_container_width=True):
                        st.success("✅ Результаты сохранены")
                
                with col_clear:
                    if st.button("🔄 Обработать заново", use_container_width=True):
                        st.rerun()
        
        # Очистка файлов
        if st.button("🗑️ Очистить", use_container_width=True):
            if os.path.exists(image_path):
                os.remove(image_path)
            st.rerun()

if __name__ == "__main__":
    main()</app.py>


<config.py>
import os
from pathlib import Path

# Пути к файлам и папкам
BASE_DIR = Path(__file__).parent
MODEL_PATH = BASE_DIR / "models" / "manga_bubble_detector_best.pt"
UPLOAD_DIR = BASE_DIR / "data" / "uploads"
OUTPUT_DIR = BASE_DIR / "data" / "outputs"

# Параметры модели детекции
DETECTION_CONFIDENCE = 0.5
IMAGE_SIZE = 640

# Параметры OCR - расширенная поддержка языков
SUPPORTED_LANGUAGES = {
    'ja': 'Японский',
    'ko': 'Корейский',
    'zh': 'Китайский',
    'en': 'Английский',
    'ru': 'Русский'
}
DEFAULT_SOURCE_LANG = 'ja'
DEFAULT_TARGET_LANG = 'ru'

# OCR настройки
OCR_ENGINES = {
    'paddle': True,    # Использовать PaddleOCR (лучший для азиатских языков)
    'easyocr': True,   # Использовать EasyOCR (универсальный)
    'tesseract': True  # Использовать Tesseract (резервный)
}

# Параметры предобработки изображений
IMAGE_PROCESSING = {
    'min_width': 10,      # Минимальная ширина области для OCR
    'min_height': 10,     # Минимальная высота области для OCR
    'upscale_threshold': 50,  # Увеличивать изображения меньше этого размера
    'contrast_factor': 1.5,   # Множитель контраста
    'sharpness_factor': 1.2,  # Множитель резкости
}

# Параметры качества OCR
OCR_QUALITY = {
    'min_confidence': 0.5,    # Минимальная уверенность для принятия результата
    'paddle_confidence': 0.5,  # Уверенность для PaddleOCR
    'easyocr_confidence': 0.5, # Уверенность для EasyOCR
    'tesseract_confidence': 0.3, # Уверенность для Tesseract (обычно ниже)
}

# Параметры интерфейса
MAX_UPLOAD_SIZE = 10  # MB
ALLOWED_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.webp']

# Создание необходимых папок
UPLOAD_DIR.mkdir(parents=True, exist_ok=True)
OUTPUT_DIR.mkdir(parents=True, exist_ok=True)

# Проверка доступности OCR движков
def check_ocr_availability():
    """Проверка доступности OCR движков"""
    available_engines = {}
    
    try:
        import paddleocr
        available_engines['paddle'] = True
    except ImportError:
        available_engines['paddle'] = False
    
    try:
        import easyocr
        available_engines['easyocr'] = True
    except ImportError:
        available_engines['easyocr'] = False
    
    try:
        import pytesseract
        pytesseract.get_tesseract_version()
        available_engines['tesseract'] = True
    except (ImportError, Exception):
        available_engines['tesseract'] = False
    
    return available_engines</config.py>


<fix_dependencies.py>
# fix_dependencies.py - Скрипт автоматического исправления проблем
import subprocess
import sys
import os

def run_command(command, description):
    """Выполнение команды с логированием"""
    print(f"🔧 {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"✅ {description} - успешно")
            return True
        else:
            print(f"❌ {description} - ошибка: {result.stderr}")
            return False
    except Exception as e:
        print(f"❌ {description} - исключение: {e}")
        return False

def fix_googletrans_conflict():
    """Исправление конфликта с googletrans"""
    print("🚀 Устранение конфликта зависимостей...")
    
    commands = [
        ("pip uninstall googletrans -y", "Удаление googletrans"),
        ("pip uninstall httpx -y", "Удаление старого httpx"),
        ("pip install httpx>=0.28.0", "Установка нового httpx"),
        ("pip install deep-translator>=1.11.4", "Установка deep-translator"),
    ]
    
    for command, description in commands:
        run_command(command, description)

def install_tesseract_languages():
    """Установка языковых пакетов Tesseract"""
    print("🌍 Установка языковых пакетов Tesseract...")
    
    # Определяем ОС
    if sys.platform.startswith('linux'):
        commands = [
            ("sudo apt-get update", "Обновление пакетов"),
            ("sudo apt-get install -y tesseract-ocr", "Установка Tesseract"),
            ("sudo apt-get install -y tesseract-ocr-jpn", "Японский язык"),
            ("sudo apt-get install -y tesseract-ocr-kor", "Корейский язык"),
            ("sudo apt-get install -y tesseract-ocr-chi-sim", "Китайский язык"),
            ("sudo apt-get install -y tesseract-ocr-rus", "Русский язык"),
        ]
        
        for command, description in commands:
            run_command(command, description)
            
    elif sys.platform == 'darwin':  # macOS
        commands = [
            ("brew install tesseract", "Установка Tesseract"),
            ("brew install tesseract-lang", "Установка языковых пакетов"),
        ]
        
        for command, description in commands:
            run_command(command, description)
            
    else:  # Windows
        print("🪟 Для Windows:")
        print("1. Скачайте Tesseract: https://github.com/UB-Mannheim/tesseract/wiki")
        print("2. Установите в C:\\Program Files\\Tesseract-OCR\\")
        print("3. Добавьте в PATH: C:\\Program Files\\Tesseract-OCR\\")

def reinstall_ocr_packages():
    """Переустановка OCR пакетов"""
    print("📦 Переустановка OCR пакетов...")
    
    commands = [
        ("pip uninstall paddlepaddle paddleocr -y", "Удаление старых версий"),
        ("pip install paddlepaddle>=3.0.0", "Установка PaddlePaddle"),
        ("pip install paddleocr>=3.1.0", "Установка PaddleOCR"),
        ("pip install easyocr>=1.7.0", "Установка EasyOCR"),
        ("pip install pytesseract>=0.3.10", "Установка PyTesseract"),
    ]
    
    for command, description in commands:
        run_command(command, description)

def main():
    """Основная функция исправления"""
    print("🛠️  Автоматическое исправление зависимостей манга-переводчика\n")
    
    # Меню выбора
    print("Выберите действие:")
    print("1. Исправить конфликт googletrans/httpx")
    print("2. Установить языковые пакеты Tesseract")
    print("3. Переустановить OCR пакеты")
    print("4. Выполнить все исправления")
    print("0. Выход")
    
    try:
        choice = input("\nВведите номер (0-4): ").strip()
        
        if choice == '1':
            fix_googletrans_conflict()
        elif choice == '2':
            install_tesseract_languages()
        elif choice == '3':
            reinstall_ocr_packages()
        elif choice == '4':
            fix_googletrans_conflict()
            print("\n" + "="*50)
            install_tesseract_languages()
            print("\n" + "="*50)
            reinstall_ocr_packages()
        elif choice == '0':
            print("👋 До свидания!")
            return
        else:
            print("❌ Неверный выбор")
            return
            
        print("\n🎉 Исправления завершены!")
        print("💡 Запустите: python setup_check.py для проверки")
        
    except KeyboardInterrupt:
        print("\n👋 Отменено пользователем")
    except Exception as e:
        print(f"\n❌ Ошибка: {e}")

if __name__ == "__main__":
    main()</full_code_manga.txt>


<requirements.txt>
# Основные зависимости
ultralytics>=8.3.0
torch>=2.0.0
torchvision>=0.15.0
opencv-python>=4.5.0
Pillow>=9.0.0
numpy>=1.21.0
streamlit>=1.28.0

# OCR библиотеки
paddlepaddle>=3.0.0
paddleocr>=3.1.0
easyocr>=1.7.0
pytesseract>=0.3.10

# Перевод - используем deep-translator вместо googletrans
deep-translator>=1.11.4

# Базовые утилиты
pyyaml>=6.0
requests>=2.28.0

# Обработка изображений
scikit-image>=0.19.0</requirements.txt>


<setup_check.py>
# setup_check.py - Скрипт проверки системы
import sys
import subprocess
import importlib.util

def check_package(package_name, import_name=None):
    """Проверка установки пакета"""
    if import_name is None:
        import_name = package_name
    
    try:
        spec = importlib.util.find_spec(import_name)
        if spec is not None:
            print(f"✅ {package_name} установлен")
            return True
        else:
            print(f"❌ {package_name} не найден")
            return False
    except ImportError:
        print(f"❌ {package_name} не удалось импортировать")
        return False

def check_tesseract():
    """Проверка Tesseract OCR"""
    try:
        import pytesseract
        version = pytesseract.get_tesseract_version()
        print(f"✅ Tesseract версия {version} установлен")
        return True
    except Exception as e:
        print(f"❌ Tesseract не найден: {e}")
        print("💡 Установите Tesseract:")
        print("   Ubuntu/Debian: sudo apt-get install tesseract-ocr tesseract-ocr-jpn tesseract-ocr-kor")
        print("   macOS: brew install tesseract tesseract-lang")
        print("   Windows: скачайте с https://github.com/UB-Mannheim/tesseract/wiki")
        return False

def fix_googletrans_conflict():
    """Исправление конфликта googletrans с httpx"""
    print("\n🔧 Исправление конфликта googletrans...")
    try:
        subprocess.run([sys.executable, "-m", "pip", "uninstall", "googletrans", "-y"], 
                      capture_output=True)
        print("✅ googletrans удален (конфликтовал с httpx)")
        print("ℹ️  Используется deep-translator вместо googletrans")
        return True
    except Exception as e:
        print(f"⚠️  Не удалось удалить googletrans: {e}")
        return False

def main():
    print("🚀 Проверка системы переводчика манги\n")
    
    # Основные библиотеки
    packages = [
        ("streamlit", "streamlit"),
        ("torch", "torch"),
        ("ultralytics", "ultralytics"),
        ("opencv-python", "cv2"),
        ("Pillow", "PIL"),
        ("numpy", "numpy"),
    ]
    
    print("📦 Основные библиотеки:")
    for package, import_name in packages:
        check_package(package, import_name)
    
    print("\n🔤 OCR библиотеки:")
    ocr_packages = [
        ("paddlepaddle", "paddle"),
        ("paddleocr", "paddleocr"),
        ("easyocr", "easyocr"),
        ("pytesseract", "pytesseract"),
    ]
    
    for package, import_name in ocr_packages:
        check_package(package, import_name)
    
    print("\n🧪 Tesseract OCR:")
    check_tesseract()
    
    print("\n🌐 Переводчик:")
    check_package("deep-translator", "deep_translator")
    
    print("\n🔧 Проверка конфликтов:")
    try:
        import googletrans
        print("⚠️  googletrans найден - может конфликтовать с httpx")
        fix_googletrans_conflict()
    except ImportError:
        print("✅ googletrans не установлен (хорошо)")
    
    # Проверка модели детекции
    print("\n🎯 Модель детекции:")
    import os
    model_path = "models/manga_bubble_detector_best.pt"
    if os.path.exists(model_path):
        print(f"✅ Модель найдена: {model_path}")
    else:
        print(f"❌ Модель не найдена: {model_path}")
        print("💡 Скачайте модель и поместите в папку models/")
    
    print("\n🎉 Проверка завершена!")
    print("💡 Запустите: streamlit run app.py")

if __name__ == "__main__":
    main()</setup_check.py>


<src/__init__.py>
</src/__init__.py>


<src/detection.py>
import numpy as np
from ultralytics import YOLO
from PIL import Image
import cv2
from typing import List, Dict, Any

class BubbleDetector:
    def __init__(self, model_path: str, confidence: float = 0.5):
        """
        Инициализация детектора речевых пузырей
        
        Args:
            model_path: путь к файлу модели YOLOv8
            confidence: порог уверенности для детекции
        """
        self.model = YOLO(model_path)
        self.confidence = confidence
        
    def detect_bubbles(self, image_path: str) -> List[Dict[str, Any]]:
        """
        Обнаружение речевых пузырей на изображении
        
        Args:
            image_path: путь к изображению
            
        Returns:
            Список словарей с информацией о найденных пузырях
        """
        results = self.model(image_path, conf=self.confidence)
        
        bubbles = []
        for r in results:
            boxes = r.boxes
            if boxes is not None:
                for box in boxes:
                    # Извлекаем координаты и метаданные
                    x1, y1, x2, y2 = box.xyxy[0].cpu().numpy()
                    confidence = box.conf[0].cpu().numpy()
                    class_id = int(box.cls[0].cpu().numpy())
                    
                    bubbles.append({
                        'bbox': [int(x1), int(y1), int(x2), int(y2)],
                        'confidence': float(confidence),
                        'class_id': class_id
                    })
        
        return bubbles
    
    def visualize_detection(self, image_path: str, bubbles: List[Dict]) -> np.ndarray:
        """
        Создание визуализации с найденными пузырями
        
        Args:
            image_path: путь к исходному изображению
            bubbles: список найденных пузырей
            
        Returns:
            Изображение с нарисованными bounding box'ами
        """
        image = cv2.imread(image_path)
        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        
        for i, bubble in enumerate(bubbles):
            x1, y1, x2, y2 = bubble['bbox']
            confidence = bubble['confidence']
            
            # Рисуем прямоугольник
            cv2.rectangle(image, (x1, y1), (x2, y2), (255, 0, 0), 2)
            
            # Добавляем номер пузыря
            label = f"#{i+1} ({confidence:.2f})"
            cv2.putText(image, label, (x1, y1-10), 
                       cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 0, 0), 2)
        
        return image</src/detection.py>


<src/ocr.py>
# src/ocr.py - Исправленный OCR с совместимыми языковыми группами
import cv2
import numpy as np
from PIL import Image, ImageEnhance
import easyocr
import pytesseract
from typing import Optional, List, Tuple, Dict
import logging
import re

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

try:
    from paddleocr import PaddleOCR
    PADDLE_AVAILABLE = True
except ImportError:
    PADDLE_AVAILABLE = False
    print("PaddleOCR не установлен")

class TextExtractor:
    def __init__(self):
        """Инициализация OCR моделей с совместимыми языковыми группами"""
        # Словари для разных групп совместимых языков в EasyOCR
        self.easy_ocr_readers = {}
        self._init_models()
    
    def _init_models(self):
        """Инициализация OCR моделей с учетом совместимости языков"""
        
        # Инициализируем EasyOCR для разных групп совместимых языков
        try:
            # Группа 1: Азиатские языки (японский, корейский) + английский
            self.easy_ocr_readers['asian'] = easyocr.Reader(['ja', 'ko', 'en'], gpu=False)
            print("✅ EasyOCR азиатские языки загружены: японский, корейский, английский")
        except Exception as e:
            print(f"❌ Ошибка загрузки азиатских языков EasyOCR: {e}")
            self.easy_ocr_readers['asian'] = None

        try:
            # Группа 2: Китайский + английский (китайский совместим только с английским)
            self.easy_ocr_readers['chinese'] = easyocr.Reader(['ch_sim', 'en'], gpu=False)
            print("✅ EasyOCR китайский загружен: китайский упрощенный, английский")
        except Exception as e:
            print(f"❌ Ошибка загрузки китайского EasyOCR: {e}")
            self.easy_ocr_readers['chinese'] = None

        try:
            # Группа 3: Европейские языки (русский, английский)
            self.easy_ocr_readers['european'] = easyocr.Reader(['ru', 'en'], gpu=False)
            print("✅ EasyOCR европейские языки загружены: русский, английский")
        except Exception as e:
            print(f"❌ Ошибка загрузки европейских языков EasyOCR: {e}")
            self.easy_ocr_readers['european'] = None

        # Fallback: только английский, если ничего не загрузилось
        if not any(self.easy_ocr_readers.values()):
            try:
                self.easy_ocr_readers['fallback'] = easyocr.Reader(['en'], gpu=False)
                print("⚠️ EasyOCR fallback: только английский")
            except Exception as e:
                print(f"❌ Критическая ошибка EasyOCR: {e}")
                self.easy_ocr_readers['fallback'] = None

        # Проверяем Tesseract
        try:
            pytesseract.get_tesseract_version()
            print("✅ Tesseract доступен")
        except Exception as e:
            print(f"❌ Tesseract недоступен: {e}")
    
    def _get_easyocr_reader(self, language: str):
        """Получает подходящий EasyOCR reader для языка"""
        if language in ['ja', 'ko']:
            return self.easy_ocr_readers.get('asian')
        elif language == 'zh':
            return self.easy_ocr_readers.get('chinese') 
        elif language in ['ru', 'en']:
            return self.easy_ocr_readers.get('european')
        else:
            # Fallback на любой доступный reader
            for reader in self.easy_ocr_readers.values():
                if reader is not None:
                    return reader
            return None
    
    def extract_text_simple(self, image_path: str, bbox: List[int], language: str) -> str:
        """
        Простое извлечение текста БЕЗ автоопределения языка
        
        Args:
            image_path: путь к изображению
            bbox: координаты области [x1, y1, x2, y2]
            language: ВЫБРАННЫЙ ПОЛЬЗОВАТЕЛЕМ язык ('ja', 'ko', 'zh', 'en', 'ru')
            
        Returns:
            Распознанный текст
        """
        logger.info(f"Извлечение текста на языке {language} из области {bbox}")
        
        try:
            # Загружаем и обрезаем изображение
            image = Image.open(image_path)
            x1, y1, x2, y2 = bbox
            
            if x2 - x1 < 5 or y2 - y1 < 5:
                return ""
            
            cropped = image.crop((x1, y1, x2, y2))
            
            # Простая предобработка
            if cropped.mode != 'RGB':
                cropped = cropped.convert('RGB')
            
            # Увеличиваем если маленькое
            width, height = cropped.size
            if width < 50 or height < 25:
                cropped = cropped.resize((width * 3, height * 3), Image.LANCZOS)
            
            # Увеличиваем контраст
            enhancer = ImageEnhance.Contrast(cropped)
            processed = enhancer.enhance(1.5)
            
            # Сначала пробуем Tesseract для выбранного языка (обычно лучше работает)
            tesseract_result = self._extract_with_tesseract(processed, language)
            if tesseract_result:
                return tesseract_result
            
            # Если Tesseract не сработал, пробуем EasyOCR
            easyocr_result = self._extract_with_easyocr(processed, language)
            if easyocr_result:
                return easyocr_result
            
            logger.warning(f"Текст не распознан на языке {language}")
            return ""
            
        except Exception as e:
            logger.error(f"Ошибка OCR: {e}")
            return ""
    
    def _extract_with_tesseract(self, image: Image.Image, language: str) -> str:
        """Извлечение с Tesseract для конкретного языка"""
        try:
            # Маппинг языков для Tesseract
            tesseract_langs = {
                'ja': 'jpn',
                'ko': 'kor', 
                'zh': 'chi_sim',
                'en': 'eng',
                'ru': 'rus'
            }
            
            tesseract_lang = tesseract_langs.get(language, 'eng')
            
            # Разные конфигурации для разных типов текста
            configs = [
                r'--oem 3 --psm 6',  # Блок текста
                r'--oem 3 --psm 8',  # Одно слово
                r'--oem 3 --psm 7',  # Одна строка
            ]
            
            best_result = ""
            best_length = 0
            
            for config in configs:
                try:
                    text = pytesseract.image_to_string(
                        image, lang=tesseract_lang, config=config
                    ).strip()
                    
                    if len(text) > best_length and len(text) > 1:
                        # Простая очистка
                        cleaned = re.sub(r'\s+', ' ', text.strip())
                        if cleaned and len(cleaned) > 1:
                            best_result = cleaned
                            best_length = len(cleaned)
                
                except Exception as e:
                    continue
            
            if best_result:
                logger.info(f"✅ Tesseract ({tesseract_lang}): '{best_result}'")
                return best_result
            
            return ""
            
        except Exception as e:
            logger.error(f"Ошибка Tesseract для {language}: {e}")
            return ""
    
    def _extract_with_easyocr(self, image: Image.Image, language: str) -> str:
        """Извлечение с EasyOCR для конкретного языка"""
        # Получаем подходящий reader для языка
        reader = self._get_easyocr_reader(language)
        
        if not reader:
            logger.warning(f"EasyOCR reader не доступен для языка {language}")
            return ""
        
        try:
            img_array = np.array(image)
            results = reader.readtext(img_array, detail=1)
            
            if results:
                # Берем результат с наибольшей уверенностью
                best_result = max(results, key=lambda x: x[2])
                text = best_result[1].strip()
                confidence = best_result[2]
                
                if text and len(text) > 1 and confidence > 0.3:
                    # Простая очистка
                    cleaned = re.sub(r'\s+', ' ', text.strip())
                    logger.info(f"✅ EasyOCR ({language}): '{cleaned}' (conf: {confidence:.2f})")
                    return cleaned
            
            return ""
            
        except Exception as e:
            logger.error(f"Ошибка EasyOCR для {language}: {e}")
            return ""
    
    # Обратная совместимость
    def extract_text(self, image_path: str, bbox: List[int], language: str = 'en') -> str:
        """Обратная совместимость"""
        return self.extract_text_simple(image_path, bbox, language)</src/ocr.py>


<src/translation.py>
# src/translation.py - Исправленный переводчик
from deep_translator import GoogleTranslator
from typing import Optional

class TextTranslator:
    def __init__(self):
        """Инициализация переводчика"""
        # Маппинг кодов языков для корректной работы с deep-translator
        self.language_mapping = {
            'zh': 'zh-cn',  # КИТАЙСКИЙ: zh → zh-cn (ИСПРАВЛЕНИЕ!)
            'ja': 'ja',     # японский остается как есть
            'ko': 'ko',     # корейский остается как есть
            'en': 'en',     # английский остается как есть
            'ru': 'ru'      # русский остается как есть
        }
    
    def translate(self, text: str, source_lang: str, target_lang: str) -> str:
        """
        Перевод текста с исправленным маппингом для китайского языка
        
        Args:
            text: текст для перевода
            source_lang: исходный язык (zh, ja, ko, en, ru)
            target_lang: целевой язык (zh, ja, ko, en, ru)
            
        Returns:
            Переведенный текст
        """
        if not text or not text.strip():
            return ""
        
        # Если языки одинаковые - не переводим
        if source_lang == target_lang:
            return text
        
        # Применяем маппинг кодов языков
        mapped_source = self.language_mapping.get(source_lang, source_lang)
        mapped_target = self.language_mapping.get(target_lang, target_lang)
        
        # Отладочная информация (можно убрать после исправления)
        print(f"🌐 Перевод: {source_lang}({mapped_source}) → {target_lang}({mapped_target})")
        print(f"📝 Текст: '{text}'")
        
        try:
            translator = GoogleTranslator(
                source=mapped_source,
                target=mapped_target
            )
            result = translator.translate(text)
            
            if result and result != text:
                print(f"✅ Переведено: '{result}'")
                return result
            else:
                print(f"⚠️ Перевод не изменился")
                return text
                
        except Exception as e:
            print(f"❌ Ошибка перевода: {e}")
            # Если основной метод не работает, пробуем альтернативный
            return self._translate_alternative(text, source_lang, target_lang)
    
    def _translate_alternative(self, text: str, source_lang: str, target_lang: str) -> str:
        """
        Альтернативный метод перевода с проверкой разных вариантов китайского
        """
        print("🔄 Пробуем альтернативный метод перевода...")
        
        # Для китайского языка пробуем разные варианты кодов
        if source_lang == 'zh':
            chinese_variants = ['zh-cn', 'zh', 'chinese (simplified)', 'chinese']
            
            for variant in chinese_variants:
                try:
                    print(f"🔄 Пробуем код китайского: '{variant}'")
                    translator = GoogleTranslator(source=variant, target=target_lang)
                    result = translator.translate(text)
                    
                    if result and result != text:
                        print(f"✅ Успешно с кодом '{variant}': '{result}'")
                        return result
                        
                except Exception as e:
                    print(f"❌ Код '{variant}' не сработал: {e}")
                    continue
            
            print(f"⚠️ Все варианты китайского не сработали, возвращаем оригинал")
            return text
        
        # Для других языков пробуем стандартный подход
        try:
            translator = GoogleTranslator(source=source_lang, target=target_lang)
            result = translator.translate(text)
            return result if result else text
        except Exception as e:
            print(f"❌ Альтернативный метод тоже не сработал: {e}")
            return text</src/translation.py>


<src/utils.py>
# src/utils.py - Упрощенные утилиты
import os
import uuid
from PIL import Image
import streamlit as st
from typing import List, Dict, Any

def save_uploaded_file(uploaded_file) -> str:
    """Сохранение загруженного файла"""
    file_extension = os.path.splitext(uploaded_file.name)[1]
    filename = f"{uuid.uuid4()}{file_extension}"
    
    from config import UPLOAD_DIR
    filepath = UPLOAD_DIR / filename
    
    with open(filepath, "wb") as f:
        f.write(uploaded_file.getbuffer())
    
    return str(filepath)

def validate_image(file) -> bool:
    """Проверка корректности изображения"""
    from config import ALLOWED_EXTENSIONS, MAX_UPLOAD_SIZE
    
    _, ext = os.path.splitext(file.name)
    if ext.lower() not in ALLOWED_EXTENSIONS:
        return False
    
    if file.size > MAX_UPLOAD_SIZE * 1024 * 1024:
        return False
    
    return True

def create_result_summary(results: List[Dict[str, Any]]) -> Dict[str, Any]:
    """Создание простой сводки результатов"""
    total_bubbles = len(results)
    successful_ocr = sum(1 for r in results if r.get('original_text', '').strip())
    successful_translation = sum(1 for r in results if r.get('translated_text', '').strip())
    
    return {
        'total_bubbles': total_bubbles,
        'successful_ocr': successful_ocr,
        'successful_translation': successful_translation,
        'ocr_success_rate': (successful_ocr / total_bubbles * 100) if total_bubbles > 0 else 0,
        'translation_success_rate': (successful_translation / total_bubbles * 100) if total_bubbles > 0 else 0
    }

def get_language_flag(lang_code: str) -> str:
    """Получение флага для языка"""
    flags = {
        'ja': '🇯🇵',
        'ko': '🇰🇷', 
        'zh': '🇨🇳',
        'en': '🇺🇸',
        'ru': '🇷🇺'
    }
    return flags.get(lang_code, '❓')

def get_language_name(lang_code: str) -> str:
    """Получение названия языка"""
    names = {
        'ja': 'Японский',
        'ko': 'Корейский', 
        'zh': 'Китайский',
        'en': 'Английский',
        'ru': 'Русский'
    }
    return names.get(lang_code, 'Неизвестный')</src/utils.py>


<src/__pycache__/__init__.cpython-312.pyc>
# (не удалось прочитать src/__pycache__/__init__.cpython-312.pyc в текстовом виде)
</src/__pycache__/__init__.cpython-312.pyc>


<src/__pycache__/__init__.cpython-313.pyc>
# (не удалось прочитать src/__pycache__/__init__.cpython-313.pyc в текстовом виде)
</src/__pycache__/__init__.cpython-313.pyc>


<src/__pycache__/detection.cpython-312.pyc>
# (не удалось прочитать src/__pycache__/detection.cpython-312.pyc в текстовом виде)
</src/__pycache__/detection.cpython-312.pyc>


<src/__pycache__/detection.cpython-313.pyc>
# (не удалось прочитать src/__pycache__/detection.cpython-313.pyc в текстовом виде)
</src/__pycache__/detection.cpython-313.pyc>


<src/__pycache__/ocr.cpython-313.pyc>
# (не удалось прочитать src/__pycache__/ocr.cpython-313.pyc в текстовом виде)
</src/__pycache__/ocr.cpython-313.pyc>


<src/__pycache__/translation.cpython-313.pyc>
# (не удалось прочитать src/__pycache__/translation.cpython-313.pyc в текстовом виде)
</src/__pycache__/translation.cpython-313.pyc>


<src/__pycache__/utils.cpython-313.pyc>
# (не удалось прочитать src/__pycache__/utils.cpython-313.pyc в текстовом виде)
</src/__pycache__/utils.cpython-313.pyc>


<data/uploads/00090717-b53b-43bf-800f-ff30823092c9.png>
# (не удалось прочитать data/uploads/00090717-b53b-43bf-800f-ff30823092c9.png в текстовом виде)
</data/uploads/00090717-b53b-43bf-800f-ff30823092c9.png>


<data/uploads/00d75707-6deb-4ae9-bd3d-055596ee7bee.jpg>
# (не удалось прочитать data/uploads/00d75707-6deb-4ae9-bd3d-055596ee7bee.jpg в текстовом виде)
</data/uploads/00d75707-6deb-4ae9-bd3d-055596ee7bee.jpg>


<data/uploads/013da0b0-3766-4c4c-85fa-b1b80eb9d81e.png>
# (не удалось прочитать data/uploads/013da0b0-3766-4c4c-85fa-b1b80eb9d81e.png в текстовом виде)
</data/uploads/013da0b0-3766-4c4c-85fa-b1b80eb9d81e.png>


<data/uploads/01b3627e-a3bb-4bd1-90a3-6529a37de481.png>
# (не удалось прочитать data/uploads/01b3627e-a3bb-4bd1-90a3-6529a37de481.png в текстовом виде)
</data/uploads/01b3627e-a3bb-4bd1-90a3-6529a37de481.png>


<data/uploads/0246a631-bfb9-47fd-bf74-77ebea8b0d57.png>
# (не удалось прочитать data/uploads/0246a631-bfb9-47fd-bf74-77ebea8b0d57.png в текстовом виде)
</data/uploads/0246a631-bfb9-47fd-bf74-77ebea8b0d57.png>


<data/uploads/02ab4ded-f1bc-49d2-a5c4-0937e2979df8.jpg>
# (не удалось прочитать data/uploads/02ab4ded-f1bc-49d2-a5c4-0937e2979df8.jpg в текстовом виде)
</data/uploads/02ab4ded-f1bc-49d2-a5c4-0937e2979df8.jpg>


<data/uploads/050362e5-c592-4ed5-a290-555caf9af9d2.jpg>
# (не удалось прочитать data/uploads/050362e5-c592-4ed5-a290-555caf9af9d2.jpg в текстовом виде)
</data/uploads/050362e5-c592-4ed5-a290-555caf9af9d2.jpg>


<data/uploads/05416c48-6b68-41bf-8499-a8c112721a89.png>
# (не удалось прочитать data/uploads/05416c48-6b68-41bf-8499-a8c112721a89.png в текстовом виде)
</data/uploads/05416c48-6b68-41bf-8499-a8c112721a89.png>


<data/uploads/05e46691-73e3-4f8e-a69e-18f11b95f17d.png>
# (не удалось прочитать data/uploads/05e46691-73e3-4f8e-a69e-18f11b95f17d.png в текстовом виде)
</data/uploads/05e46691-73e3-4f8e-a69e-18f11b95f17d.png>


<data/uploads/068f936a-7228-4195-b652-f066e88d9f17.png>
# (не удалось прочитать data/uploads/068f936a-7228-4195-b652-f066e88d9f17.png в текстовом виде)
</data/uploads/068f936a-7228-4195-b652-f066e88d9f17.png>


<data/uploads/076a86fe-1554-405d-9482-fcdbb98e728e.jpg>
# (не удалось прочитать data/uploads/076a86fe-1554-405d-9482-fcdbb98e728e.jpg в текстовом виде)
</data/uploads/076a86fe-1554-405d-9482-fcdbb98e728e.jpg>


<data/uploads/079e4461-1f68-4cea-a8b2-b40b0f5b9d30.png>
# (не удалось прочитать data/uploads/079e4461-1f68-4cea-a8b2-b40b0f5b9d30.png в текстовом виде)
</data/uploads/079e4461-1f68-4cea-a8b2-b40b0f5b9d30.png>


<data/uploads/07e905b5-d576-4d6c-b11f-aecc473a20a7.jpg>
# (не удалось прочитать data/uploads/07e905b5-d576-4d6c-b11f-aecc473a20a7.jpg в текстовом виде)
</data/uploads/07e905b5-d576-4d6c-b11f-aecc473a20a7.jpg>


<data/uploads/089e2e10-0dba-450a-bd46-1aea0809d49b.jpg>
# (не удалось прочитать data/uploads/089e2e10-0dba-450a-bd46-1aea0809d49b.jpg в текстовом виде)
</data/uploads/089e2e10-0dba-450a-bd46-1aea0809d49b.jpg>


<data/uploads/091c0eac-f0c5-4025-818c-5ab9ca73052a.png>
# (не удалось прочитать data/uploads/091c0eac-f0c5-4025-818c-5ab9ca73052a.png в текстовом виде)
</data/uploads/091c0eac-f0c5-4025-818c-5ab9ca73052a.png>


<data/uploads/098bdb12-3f7c-4d89-9983-ec701bc2653b.jpg>
# (не удалось прочитать data/uploads/098bdb12-3f7c-4d89-9983-ec701bc2653b.jpg в текстовом виде)
</data/uploads/098bdb12-3f7c-4d89-9983-ec701bc2653b.jpg>


<data/uploads/0b1058ac-53c3-4fed-92d3-2bcad77bdda0.png>
# (не удалось прочитать data/uploads/0b1058ac-53c3-4fed-92d3-2bcad77bdda0.png в текстовом виде)
</data/uploads/0b1058ac-53c3-4fed-92d3-2bcad77bdda0.png>


<data/uploads/0b297fed-94e8-4b1d-bd8b-9160307def9f.jpg>
# (не удалось прочитать data/uploads/0b297fed-94e8-4b1d-bd8b-9160307def9f.jpg в текстовом виде)
</data/uploads/0b297fed-94e8-4b1d-bd8b-9160307def9f.jpg>


<data/uploads/0b6710b5-9d5a-4713-910a-b98a9bb36af1.jpg>
# (не удалось прочитать data/uploads/0b6710b5-9d5a-4713-910a-b98a9bb36af1.jpg в текстовом виде)
</data/uploads/0b6710b5-9d5a-4713-910a-b98a9bb36af1.jpg>


<data/uploads/0bb0209b-882b-44fa-b2ea-af93bcdc18f3.png>
# (не удалось прочитать data/uploads/0bb0209b-882b-44fa-b2ea-af93bcdc18f3.png в текстовом виде)
</data/uploads/0bb0209b-882b-44fa-b2ea-af93bcdc18f3.png>


<data/uploads/0cf1520d-f260-49dd-a5fe-0055e2931251.png>
# (не удалось прочитать data/uploads/0cf1520d-f260-49dd-a5fe-0055e2931251.png в текстовом виде)
</data/uploads/0cf1520d-f260-49dd-a5fe-0055e2931251.png>


<data/uploads/0cf34028-ce25-48d6-8533-374b1fa6bb93.png>
# (не удалось прочитать data/uploads/0cf34028-ce25-48d6-8533-374b1fa6bb93.png в текстовом виде)
</data/uploads/0cf34028-ce25-48d6-8533-374b1fa6bb93.png>


<data/uploads/0d7878f0-fa6f-4e1a-997d-ab94d450dffa.png>
# (не удалось прочитать data/uploads/0d7878f0-fa6f-4e1a-997d-ab94d450dffa.png в текстовом виде)
</data/uploads/0d7878f0-fa6f-4e1a-997d-ab94d450dffa.png>


<data/uploads/0d8579f8-f3f8-454e-8a9a-edc4173f4c82.jpg>
# (не удалось прочитать data/uploads/0d8579f8-f3f8-454e-8a9a-edc4173f4c82.jpg в текстовом виде)
</data/uploads/0d8579f8-f3f8-454e-8a9a-edc4173f4c82.jpg>


<data/uploads/0e7bf44d-f062-4fee-ba11-68c6f3c4727f.png>
# (не удалось прочитать data/uploads/0e7bf44d-f062-4fee-ba11-68c6f3c4727f.png в текстовом виде)
</data/uploads/0e7bf44d-f062-4fee-ba11-68c6f3c4727f.png>


<data/uploads/0f263b4c-c7dd-4867-88d0-59515ce6c9c1.jpg>
# (не удалось прочитать data/uploads/0f263b4c-c7dd-4867-88d0-59515ce6c9c1.jpg в текстовом виде)
</data/uploads/0f263b4c-c7dd-4867-88d0-59515ce6c9c1.jpg>


<data/uploads/0fc0fa25-091b-44f0-a895-e9feb324e43d.png>
# (не удалось прочитать data/uploads/0fc0fa25-091b-44f0-a895-e9feb324e43d.png в текстовом виде)
</data/uploads/0fc0fa25-091b-44f0-a895-e9feb324e43d.png>


<data/uploads/10ac295f-bb3b-4457-84bb-b8c1adfb59b7.jpg>
# (не удалось прочитать data/uploads/10ac295f-bb3b-4457-84bb-b8c1adfb59b7.jpg в текстовом виде)
</data/uploads/10ac295f-bb3b-4457-84bb-b8c1adfb59b7.jpg>


<data/uploads/10bd9100-b311-44bf-bd88-f848dc23381e.png>
# (не удалось прочитать data/uploads/10bd9100-b311-44bf-bd88-f848dc23381e.png в текстовом виде)
</data/uploads/10bd9100-b311-44bf-bd88-f848dc23381e.png>


<data/uploads/10bfda98-b12f-451a-9dee-ede560f30fca.png>
# (не удалось прочитать data/uploads/10bfda98-b12f-451a-9dee-ede560f30fca.png в текстовом виде)
</data/uploads/10bfda98-b12f-451a-9dee-ede560f30fca.png>


<data/uploads/1178de82-c33d-4e8e-ba9d-01d0437e4c60.jpg>
# (не удалось прочитать data/uploads/1178de82-c33d-4e8e-ba9d-01d0437e4c60.jpg в текстовом виде)
</data/uploads/1178de82-c33d-4e8e-ba9d-01d0437e4c60.jpg>


<data/uploads/11bf8a3e-58d7-43e5-b9c1-eb30707c0700.jpg>
# (не удалось прочитать data/uploads/11bf8a3e-58d7-43e5-b9c1-eb30707c0700.jpg в текстовом виде)
</data/uploads/11bf8a3e-58d7-43e5-b9c1-eb30707c0700.jpg>


<data/uploads/11d10c1d-4367-488c-928a-abade3e37985.png>
# (не удалось прочитать data/uploads/11d10c1d-4367-488c-928a-abade3e37985.png в текстовом виде)
</data/uploads/11d10c1d-4367-488c-928a-abade3e37985.png>


<data/uploads/11f63c24-5d76-43e6-a797-e91bbe034a66.jpg>
# (не удалось прочитать data/uploads/11f63c24-5d76-43e6-a797-e91bbe034a66.jpg в текстовом виде)
</data/uploads/11f63c24-5d76-43e6-a797-e91bbe034a66.jpg>


<data/uploads/125b458e-7ccc-47ee-a495-cd87d2eae167.jpg>
# (не удалось прочитать data/uploads/125b458e-7ccc-47ee-a495-cd87d2eae167.jpg в текстовом виде)
</data/uploads/125b458e-7ccc-47ee-a495-cd87d2eae167.jpg>


<data/uploads/126a2998-7753-41c6-9963-d91afa7740ec.jpg>
# (не удалось прочитать data/uploads/126a2998-7753-41c6-9963-d91afa7740ec.jpg в текстовом виде)
</data/uploads/126a2998-7753-41c6-9963-d91afa7740ec.jpg>


<data/uploads/14969949-02ab-4533-85d2-4a7229844ba1.jpg>
# (не удалось прочитать data/uploads/14969949-02ab-4533-85d2-4a7229844ba1.jpg в текстовом виде)
</data/uploads/14969949-02ab-4533-85d2-4a7229844ba1.jpg>


<data/uploads/151a94d2-2bee-4d7b-8469-3c02b09bbadf.png>
# (не удалось прочитать data/uploads/151a94d2-2bee-4d7b-8469-3c02b09bbadf.png в текстовом виде)
</data/uploads/151a94d2-2bee-4d7b-8469-3c02b09bbadf.png>


<data/uploads/15f505c8-8614-4cca-9e60-d5a513953339.jpg>
# (не удалось прочитать data/uploads/15f505c8-8614-4cca-9e60-d5a513953339.jpg в текстовом виде)
</data/uploads/15f505c8-8614-4cca-9e60-d5a513953339.jpg>


<data/uploads/164362c7-7389-47c9-9baf-1644df4ffa35.jpg>
# (не удалось прочитать data/uploads/164362c7-7389-47c9-9baf-1644df4ffa35.jpg в текстовом виде)
</data/uploads/164362c7-7389-47c9-9baf-1644df4ffa35.jpg>


<data/uploads/1664496c-2f8a-4fc2-b7e9-46cfebc2326f.jpg>
# (не удалось прочитать data/uploads/1664496c-2f8a-4fc2-b7e9-46cfebc2326f.jpg в текстовом виде)
</data/uploads/1664496c-2f8a-4fc2-b7e9-46cfebc2326f.jpg>


<data/uploads/168591aa-5162-4775-90a6-7534f2e11f95.png>
# (не удалось прочитать data/uploads/168591aa-5162-4775-90a6-7534f2e11f95.png в текстовом виде)
</data/uploads/168591aa-5162-4775-90a6-7534f2e11f95.png>


<data/uploads/179aa390-f25c-43b3-b117-4d1fd94a587d.jpg>
# (не удалось прочитать data/uploads/179aa390-f25c-43b3-b117-4d1fd94a587d.jpg в текстовом виде)
</data/uploads/179aa390-f25c-43b3-b117-4d1fd94a587d.jpg>


<data/uploads/1826e045-115d-40de-b4a7-cd420404a803.jpg>
# (не удалось прочитать data/uploads/1826e045-115d-40de-b4a7-cd420404a803.jpg в текстовом виде)
</data/uploads/1826e045-115d-40de-b4a7-cd420404a803.jpg>


<data/uploads/18363df4-7686-4d7d-9b14-387034bc610f.png>
# (не удалось прочитать data/uploads/18363df4-7686-4d7d-9b14-387034bc610f.png в текстовом виде)
</data/uploads/18363df4-7686-4d7d-9b14-387034bc610f.png>


<data/uploads/18cf15e2-60be-4a41-9619-3ad1a354cc78.png>
# (не удалось прочитать data/uploads/18cf15e2-60be-4a41-9619-3ad1a354cc78.png в текстовом виде)
</data/uploads/18cf15e2-60be-4a41-9619-3ad1a354cc78.png>


<data/uploads/18d7ab4f-a4cd-41ac-92e7-0268333beb37.jpg>
# (не удалось прочитать data/uploads/18d7ab4f-a4cd-41ac-92e7-0268333beb37.jpg в текстовом виде)
</data/uploads/18d7ab4f-a4cd-41ac-92e7-0268333beb37.jpg>


<data/uploads/18da8ed3-5f3c-4d95-a433-acfb31107d35.jpg>
# (не удалось прочитать data/uploads/18da8ed3-5f3c-4d95-a433-acfb31107d35.jpg в текстовом виде)
</data/uploads/18da8ed3-5f3c-4d95-a433-acfb31107d35.jpg>


<data/uploads/196435cc-e70e-495f-bfe3-3972038f63c4.png>
# (не удалось прочитать data/uploads/196435cc-e70e-495f-bfe3-3972038f63c4.png в текстовом виде)
</data/uploads/196435cc-e70e-495f-bfe3-3972038f63c4.png>


<data/uploads/1971306b-c8f1-4c86-980f-82eb80bb5afa.jpg>
# (не удалось прочитать data/uploads/1971306b-c8f1-4c86-980f-82eb80bb5afa.jpg в текстовом виде)
</data/uploads/1971306b-c8f1-4c86-980f-82eb80bb5afa.jpg>


<data/uploads/1999b360-973f-4847-95cb-f420399f8222.png>
# (не удалось прочитать data/uploads/1999b360-973f-4847-95cb-f420399f8222.png в текстовом виде)
</data/uploads/1999b360-973f-4847-95cb-f420399f8222.png>


<data/uploads/1a5e2643-37d4-458d-9216-6d39f7ec2261.jpg>
# (не удалось прочитать data/uploads/1a5e2643-37d4-458d-9216-6d39f7ec2261.jpg в текстовом виде)
</data/uploads/1a5e2643-37d4-458d-9216-6d39f7ec2261.jpg>


<data/uploads/1a669709-f158-48c8-8d43-ed9468b4e7a9.jpg>
# (не удалось прочитать data/uploads/1a669709-f158-48c8-8d43-ed9468b4e7a9.jpg в текстовом виде)
</data/uploads/1a669709-f158-48c8-8d43-ed9468b4e7a9.jpg>


<data/uploads/1beccc9f-5942-4db7-8287-43e3f4c252f3.png>
# (не удалось прочитать data/uploads/1beccc9f-5942-4db7-8287-43e3f4c252f3.png в текстовом виде)
</data/uploads/1beccc9f-5942-4db7-8287-43e3f4c252f3.png>


<data/uploads/1c053534-2cb7-42ea-8df3-81708ccd70e9.png>
# (не удалось прочитать data/uploads/1c053534-2cb7-42ea-8df3-81708ccd70e9.png в текстовом виде)
</data/uploads/1c053534-2cb7-42ea-8df3-81708ccd70e9.png>


<data/uploads/1c3968b5-0932-4724-9ba9-68a1db6dfd7c.png>
# (не удалось прочитать data/uploads/1c3968b5-0932-4724-9ba9-68a1db6dfd7c.png в текстовом виде)
</data/uploads/1c3968b5-0932-4724-9ba9-68a1db6dfd7c.png>


<data/uploads/1d84effe-5891-42ef-bc1d-b6a267d9baa5.jpg>
# (не удалось прочитать data/uploads/1d84effe-5891-42ef-bc1d-b6a267d9baa5.jpg в текстовом виде)
</data/uploads/1d84effe-5891-42ef-bc1d-b6a267d9baa5.jpg>


<data/uploads/1f6d41f4-83f9-4aed-bb70-1c6bb383e046.png>
# (не удалось прочитать data/uploads/1f6d41f4-83f9-4aed-bb70-1c6bb383e046.png в текстовом виде)
</data/uploads/1f6d41f4-83f9-4aed-bb70-1c6bb383e046.png>


<data/uploads/1f804265-7365-4c72-a62e-4fd06c157505.png>
# (не удалось прочитать data/uploads/1f804265-7365-4c72-a62e-4fd06c157505.png в текстовом виде)
</data/uploads/1f804265-7365-4c72-a62e-4fd06c157505.png>


<data/uploads/21a5a936-dc71-4f4d-bab4-08a3de96c1a7.png>
# (не удалось прочитать data/uploads/21a5a936-dc71-4f4d-bab4-08a3de96c1a7.png в текстовом виде)
</data/uploads/21a5a936-dc71-4f4d-bab4-08a3de96c1a7.png>


<data/uploads/21f29902-1579-490d-9c04-b74db8591b7f.png>
# (не удалось прочитать data/uploads/21f29902-1579-490d-9c04-b74db8591b7f.png в текстовом виде)
</data/uploads/21f29902-1579-490d-9c04-b74db8591b7f.png>


<data/uploads/221ae171-aa46-4a11-aa40-6e097f02975d.jpg>
# (не удалось прочитать data/uploads/221ae171-aa46-4a11-aa40-6e097f02975d.jpg в текстовом виде)
</data/uploads/221ae171-aa46-4a11-aa40-6e097f02975d.jpg>


<data/uploads/228a0843-5910-4e4b-9118-cdb456f997c7.png>
# (не удалось прочитать data/uploads/228a0843-5910-4e4b-9118-cdb456f997c7.png в текстовом виде)
</data/uploads/228a0843-5910-4e4b-9118-cdb456f997c7.png>


<data/uploads/228af937-5ff7-4a3f-a833-e0b1810d8715.png>
# (не удалось прочитать data/uploads/228af937-5ff7-4a3f-a833-e0b1810d8715.png в текстовом виде)
</data/uploads/228af937-5ff7-4a3f-a833-e0b1810d8715.png>


<data/uploads/22b2442a-e6e9-465b-97d8-35924f8b67c5.png>
# (не удалось прочитать data/uploads/22b2442a-e6e9-465b-97d8-35924f8b67c5.png в текстовом виде)
</data/uploads/22b2442a-e6e9-465b-97d8-35924f8b67c5.png>


<data/uploads/23c4ce9d-9c85-4124-a3f5-72d889e2f137.png>
# (не удалось прочитать data/uploads/23c4ce9d-9c85-4124-a3f5-72d889e2f137.png в текстовом виде)
</data/uploads/23c4ce9d-9c85-4124-a3f5-72d889e2f137.png>


<data/uploads/255feb32-6684-40f9-a8be-46a2973be74c.jpg>
# (не удалось прочитать data/uploads/255feb32-6684-40f9-a8be-46a2973be74c.jpg в текстовом виде)
</data/uploads/255feb32-6684-40f9-a8be-46a2973be74c.jpg>


<data/uploads/268c9d5a-6873-40a1-82b5-5d9ec28bed07.png>
# (не удалось прочитать data/uploads/268c9d5a-6873-40a1-82b5-5d9ec28bed07.png в текстовом виде)
</data/uploads/268c9d5a-6873-40a1-82b5-5d9ec28bed07.png>


<data/uploads/26ddf5c6-f19e-4172-a131-90c21650e0e9.png>
# (не удалось прочитать data/uploads/26ddf5c6-f19e-4172-a131-90c21650e0e9.png в текстовом виде)
</data/uploads/26ddf5c6-f19e-4172-a131-90c21650e0e9.png>


<data/uploads/2774ad9a-62b4-44a8-b405-66ede278338b.jpg>
# (не удалось прочитать data/uploads/2774ad9a-62b4-44a8-b405-66ede278338b.jpg в текстовом виде)
</data/uploads/2774ad9a-62b4-44a8-b405-66ede278338b.jpg>


<data/uploads/2a196931-6798-47d0-a7f9-b5974f938b73.jpg>
# (не удалось прочитать data/uploads/2a196931-6798-47d0-a7f9-b5974f938b73.jpg в текстовом виде)
</data/uploads/2a196931-6798-47d0-a7f9-b5974f938b73.jpg>


<data/uploads/2aa50fd3-2378-4b16-9fe8-dd0089cd72cf.png>
# (не удалось прочитать data/uploads/2aa50fd3-2378-4b16-9fe8-dd0089cd72cf.png в текстовом виде)
</data/uploads/2aa50fd3-2378-4b16-9fe8-dd0089cd72cf.png>


<data/uploads/2b5e6804-f830-4801-8d7c-1d4be02db7dc.png>
# (не удалось прочитать data/uploads/2b5e6804-f830-4801-8d7c-1d4be02db7dc.png в текстовом виде)
</data/uploads/2b5e6804-f830-4801-8d7c-1d4be02db7dc.png>


<data/uploads/2c43963e-3376-422c-9e92-1d42b8a85785.jpg>
# (не удалось прочитать data/uploads/2c43963e-3376-422c-9e92-1d42b8a85785.jpg в текстовом виде)
</data/uploads/2c43963e-3376-422c-9e92-1d42b8a85785.jpg>


<data/uploads/2d0db6a1-e13f-47f6-a922-cbcdf34e8a35.png>
# (не удалось прочитать data/uploads/2d0db6a1-e13f-47f6-a922-cbcdf34e8a35.png в текстовом виде)
</data/uploads/2d0db6a1-e13f-47f6-a922-cbcdf34e8a35.png>


<data/uploads/2d3c2711-6d5c-478a-b622-8133cecff146.png>
# (не удалось прочитать data/uploads/2d3c2711-6d5c-478a-b622-8133cecff146.png в текстовом виде)
</data/uploads/2d3c2711-6d5c-478a-b622-8133cecff146.png>


<data/uploads/2d93edc9-d6be-4f78-a2c0-679af270caef.png>
# (не удалось прочитать data/uploads/2d93edc9-d6be-4f78-a2c0-679af270caef.png в текстовом виде)
</data/uploads/2d93edc9-d6be-4f78-a2c0-679af270caef.png>


<data/uploads/2e0da428-002c-4f24-abdc-edd21cfa339d.png>
# (не удалось прочитать data/uploads/2e0da428-002c-4f24-abdc-edd21cfa339d.png в текстовом виде)
</data/uploads/2e0da428-002c-4f24-abdc-edd21cfa339d.png>


<data/uploads/2e74d60e-d60d-49bd-806b-5701082e29b1.jpg>
# (не удалось прочитать data/uploads/2e74d60e-d60d-49bd-806b-5701082e29b1.jpg в текстовом виде)
</data/uploads/2e74d60e-d60d-49bd-806b-5701082e29b1.jpg>


<data/uploads/2ed9141b-64a2-43c9-ac26-e5d6427a0013.jpg>
# (не удалось прочитать data/uploads/2ed9141b-64a2-43c9-ac26-e5d6427a0013.jpg в текстовом виде)
</data/uploads/2ed9141b-64a2-43c9-ac26-e5d6427a0013.jpg>


<data/uploads/2f39568f-06b5-43fa-bf69-9dad23f78be1.png>
# (не удалось прочитать data/uploads/2f39568f-06b5-43fa-bf69-9dad23f78be1.png в текстовом виде)
</data/uploads/2f39568f-06b5-43fa-bf69-9dad23f78be1.png>


<data/uploads/3052b4ea-4f88-4311-9d67-0beabdb55f85.png>
# (не удалось прочитать data/uploads/3052b4ea-4f88-4311-9d67-0beabdb55f85.png в текстовом виде)
</data/uploads/3052b4ea-4f88-4311-9d67-0beabdb55f85.png>


<data/uploads/31779db2-79ba-4b44-a763-b2e133d8fc97.png>
# (не удалось прочитать data/uploads/31779db2-79ba-4b44-a763-b2e133d8fc97.png в текстовом виде)
</data/uploads/31779db2-79ba-4b44-a763-b2e133d8fc97.png>


<data/uploads/3231eeb1-ac70-4279-aa44-061a147d8a2a.jpg>
# (не удалось прочитать data/uploads/3231eeb1-ac70-4279-aa44-061a147d8a2a.jpg в текстовом виде)
</data/uploads/3231eeb1-ac70-4279-aa44-061a147d8a2a.jpg>


<data/uploads/324b53be-3b08-4051-92a7-7324b394f94d.png>
# (не удалось прочитать data/uploads/324b53be-3b08-4051-92a7-7324b394f94d.png в текстовом виде)
</data/uploads/324b53be-3b08-4051-92a7-7324b394f94d.png>


<data/uploads/32741854-ee5a-4258-b93f-087f16ac876d.png>
# (не удалось прочитать data/uploads/32741854-ee5a-4258-b93f-087f16ac876d.png в текстовом виде)
</data/uploads/32741854-ee5a-4258-b93f-087f16ac876d.png>


<data/uploads/32d15977-907b-4b40-b3e1-1f1527687893.jpg>
# (не удалось прочитать data/uploads/32d15977-907b-4b40-b3e1-1f1527687893.jpg в текстовом виде)
</data/uploads/32d15977-907b-4b40-b3e1-1f1527687893.jpg>


<data/uploads/34f0fa6a-c013-412c-a16f-0e71b57a8fc7.jpg>
# (не удалось прочитать data/uploads/34f0fa6a-c013-412c-a16f-0e71b57a8fc7.jpg в текстовом виде)
</data/uploads/34f0fa6a-c013-412c-a16f-0e71b57a8fc7.jpg>


<data/uploads/36c6f8b6-8fee-46fd-901e-0f1e42b8a8b5.jpg>
# (не удалось прочитать data/uploads/36c6f8b6-8fee-46fd-901e-0f1e42b8a8b5.jpg в текстовом виде)
</data/uploads/36c6f8b6-8fee-46fd-901e-0f1e42b8a8b5.jpg>


<data/uploads/36ffe1e3-ec59-4b6e-af40-cf9f676232ce.png>
# (не удалось прочитать data/uploads/36ffe1e3-ec59-4b6e-af40-cf9f676232ce.png в текстовом виде)
</data/uploads/36ffe1e3-ec59-4b6e-af40-cf9f676232ce.png>


<data/uploads/37b782d0-69f0-4b69-82ac-61931d391ba0.jpg>
# (не удалось прочитать data/uploads/37b782d0-69f0-4b69-82ac-61931d391ba0.jpg в текстовом виде)
</data/uploads/37b782d0-69f0-4b69-82ac-61931d391ba0.jpg>


<data/uploads/3809a309-2cc8-40fe-adbc-2a7445b9c4df.jpg>
# (не удалось прочитать data/uploads/3809a309-2cc8-40fe-adbc-2a7445b9c4df.jpg в текстовом виде)
</data/uploads/3809a309-2cc8-40fe-adbc-2a7445b9c4df.jpg>


<data/uploads/382efcae-5650-437a-803f-83ecc1081425.jpg>
# (не удалось прочитать data/uploads/382efcae-5650-437a-803f-83ecc1081425.jpg в текстовом виде)
</data/uploads/382efcae-5650-437a-803f-83ecc1081425.jpg>


<data/uploads/3917b977-9735-4b00-856f-93e4636a0305.png>
# (не удалось прочитать data/uploads/3917b977-9735-4b00-856f-93e4636a0305.png в текстовом виде)
</data/uploads/3917b977-9735-4b00-856f-93e4636a0305.png>


<data/uploads/3a002126-d2a7-44c0-99c4-e1036738b000.jpg>
# (не удалось прочитать data/uploads/3a002126-d2a7-44c0-99c4-e1036738b000.jpg в текстовом виде)
</data/uploads/3a002126-d2a7-44c0-99c4-e1036738b000.jpg>


<data/uploads/3a22a661-5e23-45cc-a6b8-e666a6c2807f.jpg>
# (не удалось прочитать data/uploads/3a22a661-5e23-45cc-a6b8-e666a6c2807f.jpg в текстовом виде)
</data/uploads/3a22a661-5e23-45cc-a6b8-e666a6c2807f.jpg>


<data/uploads/3affa40b-43a3-412b-87b0-2fd6f27ae825.jpg>
# (не удалось прочитать data/uploads/3affa40b-43a3-412b-87b0-2fd6f27ae825.jpg в текстовом виде)
</data/uploads/3affa40b-43a3-412b-87b0-2fd6f27ae825.jpg>


<data/uploads/3bdfcbc3-a807-460b-bda6-ad595f79d6ad.jpg>
# (не удалось прочитать data/uploads/3bdfcbc3-a807-460b-bda6-ad595f79d6ad.jpg в текстовом виде)
</data/uploads/3bdfcbc3-a807-460b-bda6-ad595f79d6ad.jpg>


<data/uploads/3c986756-362b-45d8-9b3d-4ef0172ff0de.png>
# (не удалось прочитать data/uploads/3c986756-362b-45d8-9b3d-4ef0172ff0de.png в текстовом виде)
</data/uploads/3c986756-362b-45d8-9b3d-4ef0172ff0de.png>


<data/uploads/3e0e73b6-fed0-40ec-885c-9933a1fff1bd.jpg>
# (не удалось прочитать data/uploads/3e0e73b6-fed0-40ec-885c-9933a1fff1bd.jpg в текстовом виде)
</data/uploads/3e0e73b6-fed0-40ec-885c-9933a1fff1bd.jpg>


<data/uploads/3f461b9e-d318-4032-a297-6bcfd85ec492.jpg>
# (не удалось прочитать data/uploads/3f461b9e-d318-4032-a297-6bcfd85ec492.jpg в текстовом виде)
</data/uploads/3f461b9e-d318-4032-a297-6bcfd85ec492.jpg>


<data/uploads/3fce984f-1fc4-4ed8-94a0-38931c25303c.jpg>
# (не удалось прочитать data/uploads/3fce984f-1fc4-4ed8-94a0-38931c25303c.jpg в текстовом виде)
</data/uploads/3fce984f-1fc4-4ed8-94a0-38931c25303c.jpg>


<data/uploads/41bf7078-3678-47c6-b8e2-632e2ff9402e.jpg>
# (не удалось прочитать data/uploads/41bf7078-3678-47c6-b8e2-632e2ff9402e.jpg в текстовом виде)
</data/uploads/41bf7078-3678-47c6-b8e2-632e2ff9402e.jpg>


<data/uploads/41f6d10a-03ec-47dc-bbff-e209f1e5aa7b.jpg>
# (не удалось прочитать data/uploads/41f6d10a-03ec-47dc-bbff-e209f1e5aa7b.jpg в текстовом виде)
</data/uploads/41f6d10a-03ec-47dc-bbff-e209f1e5aa7b.jpg>


<data/uploads/42658e61-e6d3-43b8-b7f3-ed003e286998.jpg>
# (не удалось прочитать data/uploads/42658e61-e6d3-43b8-b7f3-ed003e286998.jpg в текстовом виде)
</data/uploads/42658e61-e6d3-43b8-b7f3-ed003e286998.jpg>


<data/uploads/4323a1e8-8dc1-4002-b8f4-df62de118975.png>
# (не удалось прочитать data/uploads/4323a1e8-8dc1-4002-b8f4-df62de118975.png в текстовом виде)
</data/uploads/4323a1e8-8dc1-4002-b8f4-df62de118975.png>


<data/uploads/458d2e40-36ec-4252-bc03-87044fbe1a56.png>
# (не удалось прочитать data/uploads/458d2e40-36ec-4252-bc03-87044fbe1a56.png в текстовом виде)
</data/uploads/458d2e40-36ec-4252-bc03-87044fbe1a56.png>


<data/uploads/46d08957-2552-4705-9346-a873e076c336.png>
# (не удалось прочитать data/uploads/46d08957-2552-4705-9346-a873e076c336.png в текстовом виде)
</data/uploads/46d08957-2552-4705-9346-a873e076c336.png>


<data/uploads/46e183f2-9d18-47c5-b679-b37ec3386b36.png>
# (не удалось прочитать data/uploads/46e183f2-9d18-47c5-b679-b37ec3386b36.png в текстовом виде)
</data/uploads/46e183f2-9d18-47c5-b679-b37ec3386b36.png>


<data/uploads/4716c136-d8f3-49d8-98a5-2a126df95f90.jpg>
# (не удалось прочитать data/uploads/4716c136-d8f3-49d8-98a5-2a126df95f90.jpg в текстовом виде)
</data/uploads/4716c136-d8f3-49d8-98a5-2a126df95f90.jpg>


<data/uploads/495aef8b-25ac-4cc3-8f2e-271d4745aab1.png>
# (не удалось прочитать data/uploads/495aef8b-25ac-4cc3-8f2e-271d4745aab1.png в текстовом виде)
</data/uploads/495aef8b-25ac-4cc3-8f2e-271d4745aab1.png>


<data/uploads/49dc64ed-7406-4253-a462-1e7335495eec.jpg>
# (не удалось прочитать data/uploads/49dc64ed-7406-4253-a462-1e7335495eec.jpg в текстовом виде)
</data/uploads/49dc64ed-7406-4253-a462-1e7335495eec.jpg>


<data/uploads/4a22352f-17fb-4e46-b38a-daef7fb2dab9.jpg>
# (не удалось прочитать data/uploads/4a22352f-17fb-4e46-b38a-daef7fb2dab9.jpg в текстовом виде)
</data/uploads/4a22352f-17fb-4e46-b38a-daef7fb2dab9.jpg>


<data/uploads/4a63a2e2-12f2-4a7c-827e-9c90afbe26f7.png>
﻿<?xml version="1.0" encoding="utf-8"?><Error><Code>AuthenticationFailed</Code><Message>Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.
RequestId:809ab65b-d01e-006c-3d8b-f38990000000
Time:2025-07-13T00:15:18.2431007Z</Message><AuthenticationErrorDetail>Signed expiry time [Sat, 12 Jul 2025 23:53:17 GMT] must be after signed start time [Sun, 13 Jul 2025 00:15:18 GMT]</AuthenticationErrorDetail></Error></data/uploads/4a63a2e2-12f2-4a7c-827e-9c90afbe26f7.png>


<data/uploads/4a7dbaf2-c67f-42aa-9d1e-cf86b23da86c.jpg>
# (не удалось прочитать data/uploads/4a7dbaf2-c67f-42aa-9d1e-cf86b23da86c.jpg в текстовом виде)
</data/uploads/4a7dbaf2-c67f-42aa-9d1e-cf86b23da86c.jpg>


<data/uploads/4abe6a48-7f59-47b9-9284-6279ce507bff.png>
# (не удалось прочитать data/uploads/4abe6a48-7f59-47b9-9284-6279ce507bff.png в текстовом виде)
</data/uploads/4abe6a48-7f59-47b9-9284-6279ce507bff.png>


<data/uploads/4ad138cc-7b6d-4681-9f3c-aa6e207668dc.jpg>
# (не удалось прочитать data/uploads/4ad138cc-7b6d-4681-9f3c-aa6e207668dc.jpg в текстовом виде)
</data/uploads/4ad138cc-7b6d-4681-9f3c-aa6e207668dc.jpg>


<data/uploads/4b3caf91-1976-4bf7-a05a-dcba7d708217.jpg>
# (не удалось прочитать data/uploads/4b3caf91-1976-4bf7-a05a-dcba7d708217.jpg в текстовом виде)
</data/uploads/4b3caf91-1976-4bf7-a05a-dcba7d708217.jpg>


<data/uploads/4b84b0a6-00ba-4092-9328-16319fbf406b.png>
# (не удалось прочитать data/uploads/4b84b0a6-00ba-4092-9328-16319fbf406b.png в текстовом виде)
</data/uploads/4b84b0a6-00ba-4092-9328-16319fbf406b.png>


<data/uploads/4baa9682-5e1e-496f-ad6f-fcb49ab36ee9.png>
# (не удалось прочитать data/uploads/4baa9682-5e1e-496f-ad6f-fcb49ab36ee9.png в текстовом виде)
</data/uploads/4baa9682-5e1e-496f-ad6f-fcb49ab36ee9.png>


<data/uploads/4c665123-ac98-4dcf-bef8-ca5360802076.png>
# (не удалось прочитать data/uploads/4c665123-ac98-4dcf-bef8-ca5360802076.png в текстовом виде)
</data/uploads/4c665123-ac98-4dcf-bef8-ca5360802076.png>


<data/uploads/4d679063-3676-479d-9167-ea756f2b349e.jpg>
# (не удалось прочитать data/uploads/4d679063-3676-479d-9167-ea756f2b349e.jpg в текстовом виде)
</data/uploads/4d679063-3676-479d-9167-ea756f2b349e.jpg>


<data/uploads/4d7b1cdf-7544-4e9e-b038-61c4aeb7b91e.jpg>
# (не удалось прочитать data/uploads/4d7b1cdf-7544-4e9e-b038-61c4aeb7b91e.jpg в текстовом виде)
</data/uploads/4d7b1cdf-7544-4e9e-b038-61c4aeb7b91e.jpg>


<data/uploads/4dc5a6cd-6d84-4ddd-83db-41fa1d551a7f.png>
# (не удалось прочитать data/uploads/4dc5a6cd-6d84-4ddd-83db-41fa1d551a7f.png в текстовом виде)
</data/uploads/4dc5a6cd-6d84-4ddd-83db-41fa1d551a7f.png>


<data/uploads/4e7fcdf9-a787-43b1-b5aa-52df5b36313a.png>
# (не удалось прочитать data/uploads/4e7fcdf9-a787-43b1-b5aa-52df5b36313a.png в текстовом виде)
</data/uploads/4e7fcdf9-a787-43b1-b5aa-52df5b36313a.png>


<data/uploads/4eae6675-26d6-480a-a110-d8fd5ebb4ef5.png>
# (не удалось прочитать data/uploads/4eae6675-26d6-480a-a110-d8fd5ebb4ef5.png в текстовом виде)
</data/uploads/4eae6675-26d6-480a-a110-d8fd5ebb4ef5.png>


<data/uploads/4eebffb5-5b13-4f77-b0c5-dc300acbcd4b.png>
# (не удалось прочитать data/uploads/4eebffb5-5b13-4f77-b0c5-dc300acbcd4b.png в текстовом виде)
</data/uploads/4eebffb5-5b13-4f77-b0c5-dc300acbcd4b.png>


<data/uploads/50b19969-5ffb-4edb-807a-4ec9cd4b71ca.jpg>
# (не удалось прочитать data/uploads/50b19969-5ffb-4edb-807a-4ec9cd4b71ca.jpg в текстовом виде)
</data/uploads/50b19969-5ffb-4edb-807a-4ec9cd4b71ca.jpg>


<data/uploads/50b681ca-6153-43b7-9420-eb899def399c.png>
# (не удалось прочитать data/uploads/50b681ca-6153-43b7-9420-eb899def399c.png в текстовом виде)
</data/uploads/50b681ca-6153-43b7-9420-eb899def399c.png>


<data/uploads/51cabb53-b198-4aa4-b3cf-c12d450ffb8a.png>
# (не удалось прочитать data/uploads/51cabb53-b198-4aa4-b3cf-c12d450ffb8a.png в текстовом виде)
</data/uploads/51cabb53-b198-4aa4-b3cf-c12d450ffb8a.png>


<data/uploads/5263c818-a5fa-4ff5-8f8d-82d48aeccebb.jpg>
# (не удалось прочитать data/uploads/5263c818-a5fa-4ff5-8f8d-82d48aeccebb.jpg в текстовом виде)
</data/uploads/5263c818-a5fa-4ff5-8f8d-82d48aeccebb.jpg>


<data/uploads/528256c3-0338-483f-aecf-afb1314c6426.jpg>
# (не удалось прочитать data/uploads/528256c3-0338-483f-aecf-afb1314c6426.jpg в текстовом виде)
</data/uploads/528256c3-0338-483f-aecf-afb1314c6426.jpg>


<data/uploads/537bc2ed-fbe1-48e8-8143-ab6847b5f9dd.png>
# (не удалось прочитать data/uploads/537bc2ed-fbe1-48e8-8143-ab6847b5f9dd.png в текстовом виде)
</data/uploads/537bc2ed-fbe1-48e8-8143-ab6847b5f9dd.png>


<data/uploads/545a301c-3306-45b5-bc29-b02b3f174744.png>
# (не удалось прочитать data/uploads/545a301c-3306-45b5-bc29-b02b3f174744.png в текстовом виде)
</data/uploads/545a301c-3306-45b5-bc29-b02b3f174744.png>


<data/uploads/54fdc530-62b5-460b-97d0-5814cdd01984.png>
# (не удалось прочитать data/uploads/54fdc530-62b5-460b-97d0-5814cdd01984.png в текстовом виде)
</data/uploads/54fdc530-62b5-460b-97d0-5814cdd01984.png>


<data/uploads/5520c8b9-477b-4026-a122-73c59f4a8c5b.jpg>
# (не удалось прочитать data/uploads/5520c8b9-477b-4026-a122-73c59f4a8c5b.jpg в текстовом виде)
</data/uploads/5520c8b9-477b-4026-a122-73c59f4a8c5b.jpg>


<data/uploads/585c9bec-b281-4e00-8485-0923065aef8d.jpg>
# (не удалось прочитать data/uploads/585c9bec-b281-4e00-8485-0923065aef8d.jpg в текстовом виде)
</data/uploads/585c9bec-b281-4e00-8485-0923065aef8d.jpg>


<data/uploads/5986f2ca-0e42-4a76-9faa-079239cde251.png>
# (не удалось прочитать data/uploads/5986f2ca-0e42-4a76-9faa-079239cde251.png в текстовом виде)
</data/uploads/5986f2ca-0e42-4a76-9faa-079239cde251.png>


<data/uploads/59cdb5e0-d41f-4841-9bfa-f3f89c92b404.png>
# (не удалось прочитать data/uploads/59cdb5e0-d41f-4841-9bfa-f3f89c92b404.png в текстовом виде)
</data/uploads/59cdb5e0-d41f-4841-9bfa-f3f89c92b404.png>


<data/uploads/59ce517f-6dcb-4d79-a6c8-003b46223ca7.jpg>
# (не удалось прочитать data/uploads/59ce517f-6dcb-4d79-a6c8-003b46223ca7.jpg в текстовом виде)
</data/uploads/59ce517f-6dcb-4d79-a6c8-003b46223ca7.jpg>


<data/uploads/5a2aa81b-6f4d-4e76-a9d0-bb2c8c3a036f.jpg>
# (не удалось прочитать data/uploads/5a2aa81b-6f4d-4e76-a9d0-bb2c8c3a036f.jpg в текстовом виде)
</data/uploads/5a2aa81b-6f4d-4e76-a9d0-bb2c8c3a036f.jpg>


<data/uploads/5a5d6794-051c-48b4-9861-13cfb3497764.png>
# (не удалось прочитать data/uploads/5a5d6794-051c-48b4-9861-13cfb3497764.png в текстовом виде)
</data/uploads/5a5d6794-051c-48b4-9861-13cfb3497764.png>


<data/uploads/5a67ab08-16b2-4df3-8584-6f7204978352.png>
# (не удалось прочитать data/uploads/5a67ab08-16b2-4df3-8584-6f7204978352.png в текстовом виде)
</data/uploads/5a67ab08-16b2-4df3-8584-6f7204978352.png>


<data/uploads/5acd4cb9-4b67-4617-abd7-7487b4fcb504.png>
# (не удалось прочитать data/uploads/5acd4cb9-4b67-4617-abd7-7487b4fcb504.png в текстовом виде)
</data/uploads/5acd4cb9-4b67-4617-abd7-7487b4fcb504.png>


<data/uploads/5bcdc427-3a89-41d9-b9ac-c72bd99ec290.jpg>
# (не удалось прочитать data/uploads/5bcdc427-3a89-41d9-b9ac-c72bd99ec290.jpg в текстовом виде)
</data/uploads/5bcdc427-3a89-41d9-b9ac-c72bd99ec290.jpg>


<data/uploads/5c7b70c1-11ad-43c8-9831-3cc26b29849c.png>
# (не удалось прочитать data/uploads/5c7b70c1-11ad-43c8-9831-3cc26b29849c.png в текстовом виде)
</data/uploads/5c7b70c1-11ad-43c8-9831-3cc26b29849c.png>


<data/uploads/5e4fd065-d4f4-4f20-b2dd-731168833c2d.jpg>
# (не удалось прочитать data/uploads/5e4fd065-d4f4-4f20-b2dd-731168833c2d.jpg в текстовом виде)
</data/uploads/5e4fd065-d4f4-4f20-b2dd-731168833c2d.jpg>


<data/uploads/5eb545b7-bbc7-4e0a-97a7-4da0e273ab16.jpg>
# (не удалось прочитать data/uploads/5eb545b7-bbc7-4e0a-97a7-4da0e273ab16.jpg в текстовом виде)
</data/uploads/5eb545b7-bbc7-4e0a-97a7-4da0e273ab16.jpg>


<data/uploads/5f348c8e-f67d-4194-bb83-9a2b2938af04.png>
# (не удалось прочитать data/uploads/5f348c8e-f67d-4194-bb83-9a2b2938af04.png в текстовом виде)
</data/uploads/5f348c8e-f67d-4194-bb83-9a2b2938af04.png>


<data/uploads/609c0552-acd9-4df9-b10b-d39955c0b684.jpg>
# (не удалось прочитать data/uploads/609c0552-acd9-4df9-b10b-d39955c0b684.jpg в текстовом виде)
</data/uploads/609c0552-acd9-4df9-b10b-d39955c0b684.jpg>


<data/uploads/6177072f-d68d-41b8-98bc-bd9ca59c1e9f.png>
# (не удалось прочитать data/uploads/6177072f-d68d-41b8-98bc-bd9ca59c1e9f.png в текстовом виде)
</data/uploads/6177072f-d68d-41b8-98bc-bd9ca59c1e9f.png>


<data/uploads/61b3b1bd-0e7a-4689-842d-383604e797ee.jpg>
# (не удалось прочитать data/uploads/61b3b1bd-0e7a-4689-842d-383604e797ee.jpg в текстовом виде)
</data/uploads/61b3b1bd-0e7a-4689-842d-383604e797ee.jpg>


<data/uploads/61b4bf9e-8c61-4182-8ae9-db663b56bef9.png>
# (не удалось прочитать data/uploads/61b4bf9e-8c61-4182-8ae9-db663b56bef9.png в текстовом виде)
</data/uploads/61b4bf9e-8c61-4182-8ae9-db663b56bef9.png>


<data/uploads/62abba69-fed3-4327-9a0a-241fea5fc024.jpg>
# (не удалось прочитать data/uploads/62abba69-fed3-4327-9a0a-241fea5fc024.jpg в текстовом виде)
</data/uploads/62abba69-fed3-4327-9a0a-241fea5fc024.jpg>


<data/uploads/6429a7a9-72b5-44ce-bf08-868b2707f5dc.png>
# (не удалось прочитать data/uploads/6429a7a9-72b5-44ce-bf08-868b2707f5dc.png в текстовом виде)
</data/uploads/6429a7a9-72b5-44ce-bf08-868b2707f5dc.png>


<data/uploads/6591ce9b-39ea-429a-b616-3ec615fb12bb.png>
# (не удалось прочитать data/uploads/6591ce9b-39ea-429a-b616-3ec615fb12bb.png в текстовом виде)
</data/uploads/6591ce9b-39ea-429a-b616-3ec615fb12bb.png>


<data/uploads/65ab190b-3dd1-4fda-9abf-d5e1f8ce555a.jpg>
# (не удалось прочитать data/uploads/65ab190b-3dd1-4fda-9abf-d5e1f8ce555a.jpg в текстовом виде)
</data/uploads/65ab190b-3dd1-4fda-9abf-d5e1f8ce555a.jpg>


<data/uploads/66304860-9c12-464f-895f-a2a19a637c5c.png>
# (не удалось прочитать data/uploads/66304860-9c12-464f-895f-a2a19a637c5c.png в текстовом виде)
</data/uploads/66304860-9c12-464f-895f-a2a19a637c5c.png>


<data/uploads/67933b03-6af9-4f3b-9b07-1e45ffbfaf13.jpg>
# (не удалось прочитать data/uploads/67933b03-6af9-4f3b-9b07-1e45ffbfaf13.jpg в текстовом виде)
</data/uploads/67933b03-6af9-4f3b-9b07-1e45ffbfaf13.jpg>


<data/uploads/687931cb-b384-458a-810e-5ec69c4da767.png>
# (не удалось прочитать data/uploads/687931cb-b384-458a-810e-5ec69c4da767.png в текстовом виде)
</data/uploads/687931cb-b384-458a-810e-5ec69c4da767.png>


<data/uploads/69811830-5a83-4a21-8ffc-2deed04627f5.png>
# (не удалось прочитать data/uploads/69811830-5a83-4a21-8ffc-2deed04627f5.png в текстовом виде)
</data/uploads/69811830-5a83-4a21-8ffc-2deed04627f5.png>


<data/uploads/6a7f4f14-6b7d-4820-8ce7-d0c18af4452e.png>
# (не удалось прочитать data/uploads/6a7f4f14-6b7d-4820-8ce7-d0c18af4452e.png в текстовом виде)
</data/uploads/6a7f4f14-6b7d-4820-8ce7-d0c18af4452e.png>


<data/uploads/6a84d372-ad99-4ae3-bbbe-2d95cb760a03.jpg>
# (не удалось прочитать data/uploads/6a84d372-ad99-4ae3-bbbe-2d95cb760a03.jpg в текстовом виде)
</data/uploads/6a84d372-ad99-4ae3-bbbe-2d95cb760a03.jpg>


<data/uploads/6d450de9-1521-4491-a8e0-80d48317b361.png>
# (не удалось прочитать data/uploads/6d450de9-1521-4491-a8e0-80d48317b361.png в текстовом виде)
</data/uploads/6d450de9-1521-4491-a8e0-80d48317b361.png>


<data/uploads/6d759596-04e5-4527-ae83-999817fdf3f2.png>
# (не удалось прочитать data/uploads/6d759596-04e5-4527-ae83-999817fdf3f2.png в текстовом виде)
</data/uploads/6d759596-04e5-4527-ae83-999817fdf3f2.png>


<data/uploads/6dc57745-bd8c-4127-8602-3d994fc0021d.jpg>
# (не удалось прочитать data/uploads/6dc57745-bd8c-4127-8602-3d994fc0021d.jpg в текстовом виде)
</data/uploads/6dc57745-bd8c-4127-8602-3d994fc0021d.jpg>


<data/uploads/6e046e12-57c1-41ae-8db1-6e20d9568010.jpg>
# (не удалось прочитать data/uploads/6e046e12-57c1-41ae-8db1-6e20d9568010.jpg в текстовом виде)
</data/uploads/6e046e12-57c1-41ae-8db1-6e20d9568010.jpg>


<data/uploads/6f6d43b8-4d32-4e92-98b0-80c3c57c5984.jpg>
# (не удалось прочитать data/uploads/6f6d43b8-4d32-4e92-98b0-80c3c57c5984.jpg в текстовом виде)
</data/uploads/6f6d43b8-4d32-4e92-98b0-80c3c57c5984.jpg>


<data/uploads/6f862360-d091-47d4-a9f4-df2f437b9460.jpg>
# (не удалось прочитать data/uploads/6f862360-d091-47d4-a9f4-df2f437b9460.jpg в текстовом виде)
</data/uploads/6f862360-d091-47d4-a9f4-df2f437b9460.jpg>


<data/uploads/70bac786-5e56-43ff-a43d-d5dcc251ed09.jpg>
# (не удалось прочитать data/uploads/70bac786-5e56-43ff-a43d-d5dcc251ed09.jpg в текстовом виде)
</data/uploads/70bac786-5e56-43ff-a43d-d5dcc251ed09.jpg>


<data/uploads/71116f54-d456-43ef-af98-0a261b24c458.png>
# (не удалось прочитать data/uploads/71116f54-d456-43ef-af98-0a261b24c458.png в текстовом виде)
</data/uploads/71116f54-d456-43ef-af98-0a261b24c458.png>


<data/uploads/714ac211-3a9f-4a6a-96e0-3e89a75303ac.jpg>
# (не удалось прочитать data/uploads/714ac211-3a9f-4a6a-96e0-3e89a75303ac.jpg в текстовом виде)
</data/uploads/714ac211-3a9f-4a6a-96e0-3e89a75303ac.jpg>


<data/uploads/71e8ac34-df3b-4325-9cb9-04c0533c6b99.png>
﻿<?xml version="1.0" encoding="utf-8"?><Error><Code>AuthenticationFailed</Code><Message>Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.
RequestId:e983148b-a01e-0007-749b-f3a256000000
Time:2025-07-13T02:14:53.5411938Z</Message><AuthenticationErrorDetail>Signed expiry time [Sun, 13 Jul 2025 00:51:51 GMT] must be after signed start time [Sun, 13 Jul 2025 02:14:53 GMT]</AuthenticationErrorDetail></Error></data/uploads/71e8ac34-df3b-4325-9cb9-04c0533c6b99.png>


<data/uploads/721cdbfe-5f0a-4d46-9d20-5fe3624a4160.png>
# (не удалось прочитать data/uploads/721cdbfe-5f0a-4d46-9d20-5fe3624a4160.png в текстовом виде)
</data/uploads/721cdbfe-5f0a-4d46-9d20-5fe3624a4160.png>


<data/uploads/7404516b-49b8-4881-9a82-d9f24cc5f607.png>
# (не удалось прочитать data/uploads/7404516b-49b8-4881-9a82-d9f24cc5f607.png в текстовом виде)
</data/uploads/7404516b-49b8-4881-9a82-d9f24cc5f607.png>


<data/uploads/74520191-b8ae-4782-bf5e-fc67699a6852.jpg>
# (не удалось прочитать data/uploads/74520191-b8ae-4782-bf5e-fc67699a6852.jpg в текстовом виде)
</data/uploads/74520191-b8ae-4782-bf5e-fc67699a6852.jpg>


<data/uploads/746c3f5e-00ed-4723-b6fb-85ed4c0aa649.jpg>
# (не удалось прочитать data/uploads/746c3f5e-00ed-4723-b6fb-85ed4c0aa649.jpg в текстовом виде)
</data/uploads/746c3f5e-00ed-4723-b6fb-85ed4c0aa649.jpg>


<data/uploads/7497aaef-f0eb-4a26-916d-0edecd5ea0d5.png>
# (не удалось прочитать data/uploads/7497aaef-f0eb-4a26-916d-0edecd5ea0d5.png в текстовом виде)
</data/uploads/7497aaef-f0eb-4a26-916d-0edecd5ea0d5.png>


<data/uploads/74d2e68e-eba2-4749-9192-88fcd79cea06.jpg>
# (не удалось прочитать data/uploads/74d2e68e-eba2-4749-9192-88fcd79cea06.jpg в текстовом виде)
</data/uploads/74d2e68e-eba2-4749-9192-88fcd79cea06.jpg>


<data/uploads/74db5f57-8f2e-408a-9856-8af67b89799b.jpg>
# (не удалось прочитать data/uploads/74db5f57-8f2e-408a-9856-8af67b89799b.jpg в текстовом виде)
</data/uploads/74db5f57-8f2e-408a-9856-8af67b89799b.jpg>


<data/uploads/771c6cae-7fa6-48ab-8011-10c4ef14ceff.jpg>
# (не удалось прочитать data/uploads/771c6cae-7fa6-48ab-8011-10c4ef14ceff.jpg в текстовом виде)
</data/uploads/771c6cae-7fa6-48ab-8011-10c4ef14ceff.jpg>


<data/uploads/77a8e574-9493-4950-a558-c367caa57555.png>
# (не удалось прочитать data/uploads/77a8e574-9493-4950-a558-c367caa57555.png в текстовом виде)
</data/uploads/77a8e574-9493-4950-a558-c367caa57555.png>


<data/uploads/77c02077-3016-48f0-9d22-989a57a27ce1.png>
# (не удалось прочитать data/uploads/77c02077-3016-48f0-9d22-989a57a27ce1.png в текстовом виде)
</data/uploads/77c02077-3016-48f0-9d22-989a57a27ce1.png>


<data/uploads/7826671e-a04c-4faa-a4fe-56a3cfa601b2.png>
# (не удалось прочитать data/uploads/7826671e-a04c-4faa-a4fe-56a3cfa601b2.png в текстовом виде)
</data/uploads/7826671e-a04c-4faa-a4fe-56a3cfa601b2.png>


<data/uploads/78842096-1885-4e8b-9026-ae473ca9d9ba.jpg>
# (не удалось прочитать data/uploads/78842096-1885-4e8b-9026-ae473ca9d9ba.jpg в текстовом виде)
</data/uploads/78842096-1885-4e8b-9026-ae473ca9d9ba.jpg>


<data/uploads/79f4f2e9-e6fd-4c22-85c2-a78fc4f3fd8f.jpg>
# (не удалось прочитать data/uploads/79f4f2e9-e6fd-4c22-85c2-a78fc4f3fd8f.jpg в текстовом виде)
</data/uploads/79f4f2e9-e6fd-4c22-85c2-a78fc4f3fd8f.jpg>


<data/uploads/7a22ccce-b6b6-4b8e-bdd1-0fed48ca7532.jpg>
# (не удалось прочитать data/uploads/7a22ccce-b6b6-4b8e-bdd1-0fed48ca7532.jpg в текстовом виде)
</data/uploads/7a22ccce-b6b6-4b8e-bdd1-0fed48ca7532.jpg>


<data/uploads/7af494ab-35f3-45c3-8526-cde16942a288.jpg>
# (не удалось прочитать data/uploads/7af494ab-35f3-45c3-8526-cde16942a288.jpg в текстовом виде)
</data/uploads/7af494ab-35f3-45c3-8526-cde16942a288.jpg>


<data/uploads/7b756a7a-ff80-46b9-939f-e5f4214afdc6.jpg>
# (не удалось прочитать data/uploads/7b756a7a-ff80-46b9-939f-e5f4214afdc6.jpg в текстовом виде)
</data/uploads/7b756a7a-ff80-46b9-939f-e5f4214afdc6.jpg>


<data/uploads/7bd6a40b-28dd-45ff-a6e7-cfbbf40db831.jpg>
# (не удалось прочитать data/uploads/7bd6a40b-28dd-45ff-a6e7-cfbbf40db831.jpg в текстовом виде)
</data/uploads/7bd6a40b-28dd-45ff-a6e7-cfbbf40db831.jpg>


<data/uploads/7c74c92e-3602-4cd5-b86f-f86956493444.jpg>
# (не удалось прочитать data/uploads/7c74c92e-3602-4cd5-b86f-f86956493444.jpg в текстовом виде)
</data/uploads/7c74c92e-3602-4cd5-b86f-f86956493444.jpg>


<data/uploads/7d0b8c89-cb15-4122-a379-7574d40e2f5c.jpg>
# (не удалось прочитать data/uploads/7d0b8c89-cb15-4122-a379-7574d40e2f5c.jpg в текстовом виде)
</data/uploads/7d0b8c89-cb15-4122-a379-7574d40e2f5c.jpg>


<data/uploads/7d370901-b699-4840-a0bc-31219fa19315.png>
# (не удалось прочитать data/uploads/7d370901-b699-4840-a0bc-31219fa19315.png в текстовом виде)
</data/uploads/7d370901-b699-4840-a0bc-31219fa19315.png>


<data/uploads/7d657e5d-3f2a-41c8-a0cc-3461f91d6d65.png>
# (не удалось прочитать data/uploads/7d657e5d-3f2a-41c8-a0cc-3461f91d6d65.png в текстовом виде)
</data/uploads/7d657e5d-3f2a-41c8-a0cc-3461f91d6d65.png>


<data/uploads/7e980d60-dea5-4ae0-8443-4eec80136ddd.jpg>
# (не удалось прочитать data/uploads/7e980d60-dea5-4ae0-8443-4eec80136ddd.jpg в текстовом виде)
</data/uploads/7e980d60-dea5-4ae0-8443-4eec80136ddd.jpg>


<data/uploads/8020aec6-2609-46db-bd83-7aadf9b65be6.jpg>
# (не удалось прочитать data/uploads/8020aec6-2609-46db-bd83-7aadf9b65be6.jpg в текстовом виде)
</data/uploads/8020aec6-2609-46db-bd83-7aadf9b65be6.jpg>


<data/uploads/81487a8f-23f5-4f29-bf68-aed2330126a9.png>
# (не удалось прочитать data/uploads/81487a8f-23f5-4f29-bf68-aed2330126a9.png в текстовом виде)
</data/uploads/81487a8f-23f5-4f29-bf68-aed2330126a9.png>


<data/uploads/818a8f4b-9b3d-4ea7-98b4-1de5141f89c3.png>
# (не удалось прочитать data/uploads/818a8f4b-9b3d-4ea7-98b4-1de5141f89c3.png в текстовом виде)
</data/uploads/818a8f4b-9b3d-4ea7-98b4-1de5141f89c3.png>


<data/uploads/81bdc6ad-779a-4bca-9e5b-13e4c5ab2cdc.jpg>
# (не удалось прочитать data/uploads/81bdc6ad-779a-4bca-9e5b-13e4c5ab2cdc.jpg в текстовом виде)
</data/uploads/81bdc6ad-779a-4bca-9e5b-13e4c5ab2cdc.jpg>


<data/uploads/821400cd-c711-4722-9821-8cb72b8a12e2.jpg>
# (не удалось прочитать data/uploads/821400cd-c711-4722-9821-8cb72b8a12e2.jpg в текстовом виде)
</data/uploads/821400cd-c711-4722-9821-8cb72b8a12e2.jpg>


<data/uploads/8323a3ce-8b45-4d7f-a73c-e2e4cda34ffb.png>
# (не удалось прочитать data/uploads/8323a3ce-8b45-4d7f-a73c-e2e4cda34ffb.png в текстовом виде)
</data/uploads/8323a3ce-8b45-4d7f-a73c-e2e4cda34ffb.png>


<data/uploads/8380c616-3cb6-4101-bf8e-11cdf0d9a4d5.png>
# (не удалось прочитать data/uploads/8380c616-3cb6-4101-bf8e-11cdf0d9a4d5.png в текстовом виде)
</data/uploads/8380c616-3cb6-4101-bf8e-11cdf0d9a4d5.png>


<data/uploads/845953a9-3bb1-4dc7-b6f8-806dc313a961.png>
# (не удалось прочитать data/uploads/845953a9-3bb1-4dc7-b6f8-806dc313a961.png в текстовом виде)
</data/uploads/845953a9-3bb1-4dc7-b6f8-806dc313a961.png>


<data/uploads/85288ace-1e1e-438f-b93f-22c912f6f22c.jpg>
# (не удалось прочитать data/uploads/85288ace-1e1e-438f-b93f-22c912f6f22c.jpg в текстовом виде)
</data/uploads/85288ace-1e1e-438f-b93f-22c912f6f22c.jpg>


<data/uploads/858d9d73-ee5d-4160-b9c0-158800028dd8.jpg>
# (не удалось прочитать data/uploads/858d9d73-ee5d-4160-b9c0-158800028dd8.jpg в текстовом виде)
</data/uploads/858d9d73-ee5d-4160-b9c0-158800028dd8.jpg>


<data/uploads/87afadcc-b841-4131-ad9c-e4c8478c9daa.png>
# (не удалось прочитать data/uploads/87afadcc-b841-4131-ad9c-e4c8478c9daa.png в текстовом виде)
</data/uploads/87afadcc-b841-4131-ad9c-e4c8478c9daa.png>


<data/uploads/87b84d55-5a91-446b-85c8-c52e20c127c0.jpg>
# (не удалось прочитать data/uploads/87b84d55-5a91-446b-85c8-c52e20c127c0.jpg в текстовом виде)
</data/uploads/87b84d55-5a91-446b-85c8-c52e20c127c0.jpg>


<data/uploads/87f6fdc7-26bf-43ca-858e-9746af6ff4ec.png>
# (не удалось прочитать data/uploads/87f6fdc7-26bf-43ca-858e-9746af6ff4ec.png в текстовом виде)
</data/uploads/87f6fdc7-26bf-43ca-858e-9746af6ff4ec.png>


<data/uploads/892c7aba-22e5-4526-8c0f-fb53c92a3d54.png>
# (не удалось прочитать data/uploads/892c7aba-22e5-4526-8c0f-fb53c92a3d54.png в текстовом виде)
</data/uploads/892c7aba-22e5-4526-8c0f-fb53c92a3d54.png>


<data/uploads/895b0cba-0519-4ea6-ab97-04718fe67ced.png>
# (не удалось прочитать data/uploads/895b0cba-0519-4ea6-ab97-04718fe67ced.png в текстовом виде)
</data/uploads/895b0cba-0519-4ea6-ab97-04718fe67ced.png>


<data/uploads/89a752d9-c763-47fb-8c0f-ef46fba3ba8c.jpg>
# (не удалось прочитать data/uploads/89a752d9-c763-47fb-8c0f-ef46fba3ba8c.jpg в текстовом виде)
</data/uploads/89a752d9-c763-47fb-8c0f-ef46fba3ba8c.jpg>


<data/uploads/8a9e5b1d-4449-4e60-81a8-269a3aafb166.jpg>
# (не удалось прочитать data/uploads/8a9e5b1d-4449-4e60-81a8-269a3aafb166.jpg в текстовом виде)
</data/uploads/8a9e5b1d-4449-4e60-81a8-269a3aafb166.jpg>


<data/uploads/8ac348eb-39a0-4b87-906c-47bfbb351b6e.png>
# (не удалось прочитать data/uploads/8ac348eb-39a0-4b87-906c-47bfbb351b6e.png в текстовом виде)
</data/uploads/8ac348eb-39a0-4b87-906c-47bfbb351b6e.png>


<data/uploads/8b515383-ca54-4194-b803-a64ab1388a7a.png>
# (не удалось прочитать data/uploads/8b515383-ca54-4194-b803-a64ab1388a7a.png в текстовом виде)
</data/uploads/8b515383-ca54-4194-b803-a64ab1388a7a.png>


<data/uploads/8b95d5e9-3c38-47dd-a5a1-879cf2a28c22.jpg>
# (не удалось прочитать data/uploads/8b95d5e9-3c38-47dd-a5a1-879cf2a28c22.jpg в текстовом виде)
</data/uploads/8b95d5e9-3c38-47dd-a5a1-879cf2a28c22.jpg>


<data/uploads/8c444dfd-d1e6-4100-a881-67e4fd0af356.png>
﻿<?xml version="1.0" encoding="utf-8"?><Error><Code>AuthenticationFailed</Code><Message>Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.
RequestId:53c99c08-801e-0014-0104-f4f5c3000000
Time:2025-07-13T14:42:50.4228746Z</Message><AuthenticationErrorDetail>Signed expiry time [Sun, 13 Jul 2025 14:28:04 GMT] must be after signed start time [Sun, 13 Jul 2025 14:42:50 GMT]</AuthenticationErrorDetail></Error></data/uploads/8c444dfd-d1e6-4100-a881-67e4fd0af356.png>


<data/uploads/8c73956c-f05d-410c-934b-aa8ee0118279.jpg>
# (не удалось прочитать data/uploads/8c73956c-f05d-410c-934b-aa8ee0118279.jpg в текстовом виде)
</data/uploads/8c73956c-f05d-410c-934b-aa8ee0118279.jpg>


<data/uploads/8cf8f843-d774-4dff-a159-c7707b6afc34.jpg>
# (не удалось прочитать data/uploads/8cf8f843-d774-4dff-a159-c7707b6afc34.jpg в текстовом виде)
</data/uploads/8cf8f843-d774-4dff-a159-c7707b6afc34.jpg>


<data/uploads/8d348318-95d2-4fbf-abc4-68587c49ea89.jpg>
# (не удалось прочитать data/uploads/8d348318-95d2-4fbf-abc4-68587c49ea89.jpg в текстовом виде)
</data/uploads/8d348318-95d2-4fbf-abc4-68587c49ea89.jpg>


<data/uploads/8e191342-bec4-4bba-a335-d6b450982da4.png>
# (не удалось прочитать data/uploads/8e191342-bec4-4bba-a335-d6b450982da4.png в текстовом виде)
</data/uploads/8e191342-bec4-4bba-a335-d6b450982da4.png>


<data/uploads/8e486528-36f4-491f-a01e-bbd2e88f8697.png>
# (не удалось прочитать data/uploads/8e486528-36f4-491f-a01e-bbd2e88f8697.png в текстовом виде)
</data/uploads/8e486528-36f4-491f-a01e-bbd2e88f8697.png>


<data/uploads/8e6b7f7e-d449-4192-b578-4c9b598938a2.png>
# (не удалось прочитать data/uploads/8e6b7f7e-d449-4192-b578-4c9b598938a2.png в текстовом виде)
</data/uploads/8e6b7f7e-d449-4192-b578-4c9b598938a2.png>


<data/uploads/8e6c4db9-0241-431d-8248-8eba3f64b098.jpg>
# (не удалось прочитать data/uploads/8e6c4db9-0241-431d-8248-8eba3f64b098.jpg в текстовом виде)
</data/uploads/8e6c4db9-0241-431d-8248-8eba3f64b098.jpg>


<data/uploads/8ec00b49-778f-4a80-8445-6af1657461ba.jpg>
# (не удалось прочитать data/uploads/8ec00b49-778f-4a80-8445-6af1657461ba.jpg в текстовом виде)
</data/uploads/8ec00b49-778f-4a80-8445-6af1657461ba.jpg>


<data/uploads/8f131070-3eb6-484f-9dfd-ba5f8a60a975.jpg>
# (не удалось прочитать data/uploads/8f131070-3eb6-484f-9dfd-ba5f8a60a975.jpg в текстовом виде)
</data/uploads/8f131070-3eb6-484f-9dfd-ba5f8a60a975.jpg>


<data/uploads/8fad5bb0-1be4-4196-ad25-9f0aaaa69a47.png>
# (не удалось прочитать data/uploads/8fad5bb0-1be4-4196-ad25-9f0aaaa69a47.png в текстовом виде)
</data/uploads/8fad5bb0-1be4-4196-ad25-9f0aaaa69a47.png>


<data/uploads/913007c2-0efb-4181-99ea-e6e3304399f5.png>
# (не удалось прочитать data/uploads/913007c2-0efb-4181-99ea-e6e3304399f5.png в текстовом виде)
</data/uploads/913007c2-0efb-4181-99ea-e6e3304399f5.png>


<data/uploads/91700ed4-8891-43cf-86b7-d14d99990e1c.jpg>
# (не удалось прочитать data/uploads/91700ed4-8891-43cf-86b7-d14d99990e1c.jpg в текстовом виде)
</data/uploads/91700ed4-8891-43cf-86b7-d14d99990e1c.jpg>


<data/uploads/919bfa28-387f-4842-92e0-38b60b163036.png>
# (не удалось прочитать data/uploads/919bfa28-387f-4842-92e0-38b60b163036.png в текстовом виде)
</data/uploads/919bfa28-387f-4842-92e0-38b60b163036.png>


<data/uploads/928104e5-2f9b-4228-92ff-ae385004ddd4.jpg>
# (не удалось прочитать data/uploads/928104e5-2f9b-4228-92ff-ae385004ddd4.jpg в текстовом виде)
</data/uploads/928104e5-2f9b-4228-92ff-ae385004ddd4.jpg>


<data/uploads/9325ddf7-46d4-47df-aadb-fb6f47bf9408.jpg>
# (не удалось прочитать data/uploads/9325ddf7-46d4-47df-aadb-fb6f47bf9408.jpg в текстовом виде)
</data/uploads/9325ddf7-46d4-47df-aadb-fb6f47bf9408.jpg>


<data/uploads/93cbdd3c-a631-43c8-b5dc-d222c816ac67.jpg>
# (не удалось прочитать data/uploads/93cbdd3c-a631-43c8-b5dc-d222c816ac67.jpg в текстовом виде)
</data/uploads/93cbdd3c-a631-43c8-b5dc-d222c816ac67.jpg>


<data/uploads/940e373b-e89d-4316-b27d-27cbda85310e.png>
# (не удалось прочитать data/uploads/940e373b-e89d-4316-b27d-27cbda85310e.png в текстовом виде)
</data/uploads/940e373b-e89d-4316-b27d-27cbda85310e.png>


<data/uploads/9428d2bd-bec6-4afb-9691-1edc9e4c6622.png>
# (не удалось прочитать data/uploads/9428d2bd-bec6-4afb-9691-1edc9e4c6622.png в текстовом виде)
</data/uploads/9428d2bd-bec6-4afb-9691-1edc9e4c6622.png>


<data/uploads/94347be9-0183-4a25-8f96-1edc30239d21.jpg>
# (не удалось прочитать data/uploads/94347be9-0183-4a25-8f96-1edc30239d21.jpg в текстовом виде)
</data/uploads/94347be9-0183-4a25-8f96-1edc30239d21.jpg>


<data/uploads/94858202-f2f1-4259-859d-f4da518cda48.png>
# (не удалось прочитать data/uploads/94858202-f2f1-4259-859d-f4da518cda48.png в текстовом виде)
</data/uploads/94858202-f2f1-4259-859d-f4da518cda48.png>


<data/uploads/96aca7ac-ce92-44c9-9d66-6eb692e8400e.jpg>
# (не удалось прочитать data/uploads/96aca7ac-ce92-44c9-9d66-6eb692e8400e.jpg в текстовом виде)
</data/uploads/96aca7ac-ce92-44c9-9d66-6eb692e8400e.jpg>


<data/uploads/974f22b6-9f46-495b-98ff-bb9210a0147b.jpg>
# (не удалось прочитать data/uploads/974f22b6-9f46-495b-98ff-bb9210a0147b.jpg в текстовом виде)
</data/uploads/974f22b6-9f46-495b-98ff-bb9210a0147b.jpg>


<data/uploads/976df08d-ebe8-433f-9e1a-7a495b93abbf.jpg>
# (не удалось прочитать data/uploads/976df08d-ebe8-433f-9e1a-7a495b93abbf.jpg в текстовом виде)
</data/uploads/976df08d-ebe8-433f-9e1a-7a495b93abbf.jpg>


<data/uploads/98207d8e-0ea5-4e03-8a42-b0d0ffb83ddf.jpg>
# (не удалось прочитать data/uploads/98207d8e-0ea5-4e03-8a42-b0d0ffb83ddf.jpg в текстовом виде)
</data/uploads/98207d8e-0ea5-4e03-8a42-b0d0ffb83ddf.jpg>


<data/uploads/9870558c-58c9-4142-b39e-7f1001c82921.jpg>
# (не удалось прочитать data/uploads/9870558c-58c9-4142-b39e-7f1001c82921.jpg в текстовом виде)
</data/uploads/9870558c-58c9-4142-b39e-7f1001c82921.jpg>


<data/uploads/98b7bfd1-e91f-4cd1-92b2-93d38de47ea3.png>
# (не удалось прочитать data/uploads/98b7bfd1-e91f-4cd1-92b2-93d38de47ea3.png в текстовом виде)
</data/uploads/98b7bfd1-e91f-4cd1-92b2-93d38de47ea3.png>


<data/uploads/99c41a3b-20a5-4d82-a19a-57f1c679d2f9.jpg>
# (не удалось прочитать data/uploads/99c41a3b-20a5-4d82-a19a-57f1c679d2f9.jpg в текстовом виде)
</data/uploads/99c41a3b-20a5-4d82-a19a-57f1c679d2f9.jpg>


<data/uploads/9a286bb6-f590-43a7-80a2-df2b824012b5.png>
# (не удалось прочитать data/uploads/9a286bb6-f590-43a7-80a2-df2b824012b5.png в текстовом виде)
</data/uploads/9a286bb6-f590-43a7-80a2-df2b824012b5.png>


<data/uploads/9a2adaca-b37a-4249-897d-6c8b401f80c2.png>
# (не удалось прочитать data/uploads/9a2adaca-b37a-4249-897d-6c8b401f80c2.png в текстовом виде)
</data/uploads/9a2adaca-b37a-4249-897d-6c8b401f80c2.png>


<data/uploads/9a3bd3ac-f091-4672-8c24-e7142f4a0775.png>
# (не удалось прочитать data/uploads/9a3bd3ac-f091-4672-8c24-e7142f4a0775.png в текстовом виде)
</data/uploads/9a3bd3ac-f091-4672-8c24-e7142f4a0775.png>


<data/uploads/9b63171a-db9d-4c7c-9ced-bd53a4926ed5.png>
# (не удалось прочитать data/uploads/9b63171a-db9d-4c7c-9ced-bd53a4926ed5.png в текстовом виде)
</data/uploads/9b63171a-db9d-4c7c-9ced-bd53a4926ed5.png>


<data/uploads/9c488c4a-97da-4982-8082-9a93459d87b9.png>
# (не удалось прочитать data/uploads/9c488c4a-97da-4982-8082-9a93459d87b9.png в текстовом виде)
</data/uploads/9c488c4a-97da-4982-8082-9a93459d87b9.png>


<data/uploads/9cd273c8-b918-4b57-ac92-a4b6727fa697.jpg>
# (не удалось прочитать data/uploads/9cd273c8-b918-4b57-ac92-a4b6727fa697.jpg в текстовом виде)
</data/uploads/9cd273c8-b918-4b57-ac92-a4b6727fa697.jpg>


<data/uploads/9d46a8c3-e8ee-42d3-adbb-0f571817af53.png>
# (не удалось прочитать data/uploads/9d46a8c3-e8ee-42d3-adbb-0f571817af53.png в текстовом виде)
</data/uploads/9d46a8c3-e8ee-42d3-adbb-0f571817af53.png>


<data/uploads/9d9af44b-c75b-4f45-bd28-490145ec7dcd.jpg>
# (не удалось прочитать data/uploads/9d9af44b-c75b-4f45-bd28-490145ec7dcd.jpg в текстовом виде)
</data/uploads/9d9af44b-c75b-4f45-bd28-490145ec7dcd.jpg>


<data/uploads/9dcfb35c-a985-445b-9ee8-c207857b0946.jpg>
# (не удалось прочитать data/uploads/9dcfb35c-a985-445b-9ee8-c207857b0946.jpg в текстовом виде)
</data/uploads/9dcfb35c-a985-445b-9ee8-c207857b0946.jpg>


<data/uploads/9e71223e-0c65-437c-8dec-6d7298e5b8b7.jpg>
# (не удалось прочитать data/uploads/9e71223e-0c65-437c-8dec-6d7298e5b8b7.jpg в текстовом виде)
</data/uploads/9e71223e-0c65-437c-8dec-6d7298e5b8b7.jpg>


<data/uploads/9e72480e-9432-4ed9-bba7-087c1f8bd52d.jpg>
# (не удалось прочитать data/uploads/9e72480e-9432-4ed9-bba7-087c1f8bd52d.jpg в текстовом виде)
</data/uploads/9e72480e-9432-4ed9-bba7-087c1f8bd52d.jpg>


<data/uploads/9ed34c0f-0da0-4ff9-abce-02fdf1fba3e9.png>
# (не удалось прочитать data/uploads/9ed34c0f-0da0-4ff9-abce-02fdf1fba3e9.png в текстовом виде)
</data/uploads/9ed34c0f-0da0-4ff9-abce-02fdf1fba3e9.png>


<data/uploads/9f1da09f-6fd8-4baa-b8da-eb30ae3d3645.png>
# (не удалось прочитать data/uploads/9f1da09f-6fd8-4baa-b8da-eb30ae3d3645.png в текстовом виде)
</data/uploads/9f1da09f-6fd8-4baa-b8da-eb30ae3d3645.png>


<data/uploads/9f5700fa-54e9-4778-bd74-fe93171c7348.png>
# (не удалось прочитать data/uploads/9f5700fa-54e9-4778-bd74-fe93171c7348.png в текстовом виде)
</data/uploads/9f5700fa-54e9-4778-bd74-fe93171c7348.png>


<data/uploads/9f82b477-68d6-4b06-a595-45a40bf3d536.png>
# (не удалось прочитать data/uploads/9f82b477-68d6-4b06-a595-45a40bf3d536.png в текстовом виде)
</data/uploads/9f82b477-68d6-4b06-a595-45a40bf3d536.png>


<data/uploads/9faed51d-0f14-41be-8f4e-50c77b8e4b03.jpg>
# (не удалось прочитать data/uploads/9faed51d-0f14-41be-8f4e-50c77b8e4b03.jpg в текстовом виде)
</data/uploads/9faed51d-0f14-41be-8f4e-50c77b8e4b03.jpg>


<data/uploads/a00e3ac3-410c-453a-9f4f-86668c955828.jpg>
# (не удалось прочитать data/uploads/a00e3ac3-410c-453a-9f4f-86668c955828.jpg в текстовом виде)
</data/uploads/a00e3ac3-410c-453a-9f4f-86668c955828.jpg>


<data/uploads/a07d9b9e-7103-4085-823f-a0a321da0e2c.jpg>
# (не удалось прочитать data/uploads/a07d9b9e-7103-4085-823f-a0a321da0e2c.jpg в текстовом виде)
</data/uploads/a07d9b9e-7103-4085-823f-a0a321da0e2c.jpg>


<data/uploads/a0bf094c-00e0-4e5a-8313-796af992c044.png>
# (не удалось прочитать data/uploads/a0bf094c-00e0-4e5a-8313-796af992c044.png в текстовом виде)
</data/uploads/a0bf094c-00e0-4e5a-8313-796af992c044.png>


<data/uploads/a1eb4d4f-48c9-41d8-8f94-e342b31330b9.png>
# (не удалось прочитать data/uploads/a1eb4d4f-48c9-41d8-8f94-e342b31330b9.png в текстовом виде)
</data/uploads/a1eb4d4f-48c9-41d8-8f94-e342b31330b9.png>


<data/uploads/a2bbe9c8-2033-440b-8ddc-65ae7e32856c.jpg>
# (не удалось прочитать data/uploads/a2bbe9c8-2033-440b-8ddc-65ae7e32856c.jpg в текстовом виде)
</data/uploads/a2bbe9c8-2033-440b-8ddc-65ae7e32856c.jpg>


<data/uploads/a3a41b34-7fd9-4599-b1bd-d8537562ac3d.jpg>
# (не удалось прочитать data/uploads/a3a41b34-7fd9-4599-b1bd-d8537562ac3d.jpg в текстовом виде)
</data/uploads/a3a41b34-7fd9-4599-b1bd-d8537562ac3d.jpg>


<data/uploads/a5688215-a244-4408-9863-2288c7da9f99.png>
# (не удалось прочитать data/uploads/a5688215-a244-4408-9863-2288c7da9f99.png в текстовом виде)
</data/uploads/a5688215-a244-4408-9863-2288c7da9f99.png>


<data/uploads/a59f59e8-fe2e-46b1-8389-3e9e1a018af0.png>
# (не удалось прочитать data/uploads/a59f59e8-fe2e-46b1-8389-3e9e1a018af0.png в текстовом виде)
</data/uploads/a59f59e8-fe2e-46b1-8389-3e9e1a018af0.png>


<data/uploads/a5d7d9bb-97a7-4f83-8f9b-ac1990847f04.jpg>
# (не удалось прочитать data/uploads/a5d7d9bb-97a7-4f83-8f9b-ac1990847f04.jpg в текстовом виде)
</data/uploads/a5d7d9bb-97a7-4f83-8f9b-ac1990847f04.jpg>


<data/uploads/a7121e45-4350-400a-b8a4-2c8c9978583d.png>
# (не удалось прочитать data/uploads/a7121e45-4350-400a-b8a4-2c8c9978583d.png в текстовом виде)
</data/uploads/a7121e45-4350-400a-b8a4-2c8c9978583d.png>


<data/uploads/a738113c-8d9e-41b0-ab98-ee55e7bd5d7d.jpg>
# (не удалось прочитать data/uploads/a738113c-8d9e-41b0-ab98-ee55e7bd5d7d.jpg в текстовом виде)
</data/uploads/a738113c-8d9e-41b0-ab98-ee55e7bd5d7d.jpg>


<data/uploads/a77033ee-f6c7-4de6-a592-43056c6f565a.jpg>
# (не удалось прочитать data/uploads/a77033ee-f6c7-4de6-a592-43056c6f565a.jpg в текстовом виде)
</data/uploads/a77033ee-f6c7-4de6-a592-43056c6f565a.jpg>


<data/uploads/a92de1ed-0d37-4382-8124-18d72fe1bdd1.jpg>
# (не удалось прочитать data/uploads/a92de1ed-0d37-4382-8124-18d72fe1bdd1.jpg в текстовом виде)
</data/uploads/a92de1ed-0d37-4382-8124-18d72fe1bdd1.jpg>


<data/uploads/ad33ed42-481d-4c50-91ae-89e59e84477f.png>
# (не удалось прочитать data/uploads/ad33ed42-481d-4c50-91ae-89e59e84477f.png в текстовом виде)
</data/uploads/ad33ed42-481d-4c50-91ae-89e59e84477f.png>


<data/uploads/adac350a-a584-475d-85a2-7d2a22d009f2.png>
# (не удалось прочитать data/uploads/adac350a-a584-475d-85a2-7d2a22d009f2.png в текстовом виде)
</data/uploads/adac350a-a584-475d-85a2-7d2a22d009f2.png>


<data/uploads/ae8b2e85-f2d8-4d37-b8a7-9a179024209b.png>
# (не удалось прочитать data/uploads/ae8b2e85-f2d8-4d37-b8a7-9a179024209b.png в текстовом виде)
</data/uploads/ae8b2e85-f2d8-4d37-b8a7-9a179024209b.png>


<data/uploads/aeb1cbeb-6271-4c5e-b11d-20031e1bbb4d.jpg>
# (не удалось прочитать data/uploads/aeb1cbeb-6271-4c5e-b11d-20031e1bbb4d.jpg в текстовом виде)
</data/uploads/aeb1cbeb-6271-4c5e-b11d-20031e1bbb4d.jpg>


<data/uploads/af588a97-ea15-43a0-aee8-c869029e7483.jpg>
# (не удалось прочитать data/uploads/af588a97-ea15-43a0-aee8-c869029e7483.jpg в текстовом виде)
</data/uploads/af588a97-ea15-43a0-aee8-c869029e7483.jpg>


<data/uploads/afefc98a-f4cd-4bec-91e9-0a757f9c543a.png>
# (не удалось прочитать data/uploads/afefc98a-f4cd-4bec-91e9-0a757f9c543a.png в текстовом виде)
</data/uploads/afefc98a-f4cd-4bec-91e9-0a757f9c543a.png>


<data/uploads/b04667e0-a56d-433b-adab-ea7e54ada808.jpg>
# (не удалось прочитать data/uploads/b04667e0-a56d-433b-adab-ea7e54ada808.jpg в текстовом виде)
</data/uploads/b04667e0-a56d-433b-adab-ea7e54ada808.jpg>


<data/uploads/b04af165-e0c1-4d6a-8469-59512177517f.png>
# (не удалось прочитать data/uploads/b04af165-e0c1-4d6a-8469-59512177517f.png в текстовом виде)
</data/uploads/b04af165-e0c1-4d6a-8469-59512177517f.png>


<data/uploads/b08b18c4-f052-4e2c-a068-0c4757465d5a.png>
# (не удалось прочитать data/uploads/b08b18c4-f052-4e2c-a068-0c4757465d5a.png в текстовом виде)
</data/uploads/b08b18c4-f052-4e2c-a068-0c4757465d5a.png>


<data/uploads/b1bc8bf6-288a-40db-9d74-58fde0c2350c.jpg>
# (не удалось прочитать data/uploads/b1bc8bf6-288a-40db-9d74-58fde0c2350c.jpg в текстовом виде)
</data/uploads/b1bc8bf6-288a-40db-9d74-58fde0c2350c.jpg>


<data/uploads/b257bef9-df57-4c51-80d7-36014b013cce.jpg>
# (не удалось прочитать data/uploads/b257bef9-df57-4c51-80d7-36014b013cce.jpg в текстовом виде)
</data/uploads/b257bef9-df57-4c51-80d7-36014b013cce.jpg>


<data/uploads/b289ec65-17e9-4747-9c8e-eb4a90b11445.png>
# (не удалось прочитать data/uploads/b289ec65-17e9-4747-9c8e-eb4a90b11445.png в текстовом виде)
</data/uploads/b289ec65-17e9-4747-9c8e-eb4a90b11445.png>


<data/uploads/b2a4b39a-673a-400d-99f7-54b3d00cdb74.jpg>
# (не удалось прочитать data/uploads/b2a4b39a-673a-400d-99f7-54b3d00cdb74.jpg в текстовом виде)
</data/uploads/b2a4b39a-673a-400d-99f7-54b3d00cdb74.jpg>


<data/uploads/b39b0be9-bd88-437f-8435-8814de40266f.png>
# (не удалось прочитать data/uploads/b39b0be9-bd88-437f-8435-8814de40266f.png в текстовом виде)
</data/uploads/b39b0be9-bd88-437f-8435-8814de40266f.png>


<data/uploads/b5d5bccc-3b71-49a3-89de-cd59375ca564.jpg>
# (не удалось прочитать data/uploads/b5d5bccc-3b71-49a3-89de-cd59375ca564.jpg в текстовом виде)
</data/uploads/b5d5bccc-3b71-49a3-89de-cd59375ca564.jpg>


<data/uploads/b6c5c996-59f4-4f6c-a544-fc414785169b.png>
# (не удалось прочитать data/uploads/b6c5c996-59f4-4f6c-a544-fc414785169b.png в текстовом виде)
</data/uploads/b6c5c996-59f4-4f6c-a544-fc414785169b.png>


<data/uploads/b7c92d2f-4c74-4f65-af6d-e9a6844cc344.png>
﻿<?xml version="1.0" encoding="utf-8"?><Error><Code>AuthenticationFailed</Code><Message>Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.
RequestId:e983148b-a01e-0007-749b-f3a256000000
Time:2025-07-13T02:14:53.5411938Z</Message><AuthenticationErrorDetail>Signed expiry time [Sun, 13 Jul 2025 00:51:51 GMT] must be after signed start time [Sun, 13 Jul 2025 02:14:53 GMT]</AuthenticationErrorDetail></Error></data/uploads/b7c92d2f-4c74-4f65-af6d-e9a6844cc344.png>


<data/uploads/b7eee492-dd78-4fe8-a4ac-0e5a1586fba7.jpg>
# (не удалось прочитать data/uploads/b7eee492-dd78-4fe8-a4ac-0e5a1586fba7.jpg в текстовом виде)
</data/uploads/b7eee492-dd78-4fe8-a4ac-0e5a1586fba7.jpg>


<data/uploads/b8321273-0291-4a0e-8a3e-25b6a3a0a44d.jpg>
# (не удалось прочитать data/uploads/b8321273-0291-4a0e-8a3e-25b6a3a0a44d.jpg в текстовом виде)
</data/uploads/b8321273-0291-4a0e-8a3e-25b6a3a0a44d.jpg>


<data/uploads/b872ef1e-b13d-4d7f-b51a-20cf4912cbe5.jpg>
# (не удалось прочитать data/uploads/b872ef1e-b13d-4d7f-b51a-20cf4912cbe5.jpg в текстовом виде)
</data/uploads/b872ef1e-b13d-4d7f-b51a-20cf4912cbe5.jpg>


<data/uploads/b943de5a-4dd5-418e-8049-05644dec3ae7.jpg>
# (не удалось прочитать data/uploads/b943de5a-4dd5-418e-8049-05644dec3ae7.jpg в текстовом виде)
</data/uploads/b943de5a-4dd5-418e-8049-05644dec3ae7.jpg>


<data/uploads/ba3ceb86-71c9-4a73-9c18-5287cca5cdbf.jpg>
# (не удалось прочитать data/uploads/ba3ceb86-71c9-4a73-9c18-5287cca5cdbf.jpg в текстовом виде)
</data/uploads/ba3ceb86-71c9-4a73-9c18-5287cca5cdbf.jpg>


<data/uploads/ba53cb79-52b1-432f-aa73-5a755a917d88.png>
# (не удалось прочитать data/uploads/ba53cb79-52b1-432f-aa73-5a755a917d88.png в текстовом виде)
</data/uploads/ba53cb79-52b1-432f-aa73-5a755a917d88.png>


<data/uploads/babcc139-1e74-41c5-8d2d-04319b66180e.jpg>
# (не удалось прочитать data/uploads/babcc139-1e74-41c5-8d2d-04319b66180e.jpg в текстовом виде)
</data/uploads/babcc139-1e74-41c5-8d2d-04319b66180e.jpg>


<data/uploads/bb01684c-9ac8-498f-94f1-619310913282.png>
# (не удалось прочитать data/uploads/bb01684c-9ac8-498f-94f1-619310913282.png в текстовом виде)
</data/uploads/bb01684c-9ac8-498f-94f1-619310913282.png>


<data/uploads/bce10936-ec0d-4570-b9c4-045bc1784b86.png>
# (не удалось прочитать data/uploads/bce10936-ec0d-4570-b9c4-045bc1784b86.png в текстовом виде)
</data/uploads/bce10936-ec0d-4570-b9c4-045bc1784b86.png>


<data/uploads/bd7c6bfb-acbe-405c-8ed3-25729c643d7c.jpg>
# (не удалось прочитать data/uploads/bd7c6bfb-acbe-405c-8ed3-25729c643d7c.jpg в текстовом виде)
</data/uploads/bd7c6bfb-acbe-405c-8ed3-25729c643d7c.jpg>


<data/uploads/bd85eb30-dedd-4d45-a692-ef5f1836a955.jpg>
# (не удалось прочитать data/uploads/bd85eb30-dedd-4d45-a692-ef5f1836a955.jpg в текстовом виде)
</data/uploads/bd85eb30-dedd-4d45-a692-ef5f1836a955.jpg>


<data/uploads/bd8ccb66-911e-4455-b9b6-042b253bc0a5.jpg>
# (не удалось прочитать data/uploads/bd8ccb66-911e-4455-b9b6-042b253bc0a5.jpg в текстовом виде)
</data/uploads/bd8ccb66-911e-4455-b9b6-042b253bc0a5.jpg>


<data/uploads/bdcfa437-36e0-499e-bf22-63ee2b5ae8d7.png>
# (не удалось прочитать data/uploads/bdcfa437-36e0-499e-bf22-63ee2b5ae8d7.png в текстовом виде)
</data/uploads/bdcfa437-36e0-499e-bf22-63ee2b5ae8d7.png>


<data/uploads/be7783e0-f32e-4be0-9e1d-5557a27fb23e.png>
# (не удалось прочитать data/uploads/be7783e0-f32e-4be0-9e1d-5557a27fb23e.png в текстовом виде)
</data/uploads/be7783e0-f32e-4be0-9e1d-5557a27fb23e.png>


<data/uploads/bea16d21-35e0-4219-9430-9b23da26df88.jpg>
# (не удалось прочитать data/uploads/bea16d21-35e0-4219-9430-9b23da26df88.jpg в текстовом виде)
</data/uploads/bea16d21-35e0-4219-9430-9b23da26df88.jpg>


<data/uploads/bef9e46f-da60-4fe6-bccd-2b20bce1e537.png>
# (не удалось прочитать data/uploads/bef9e46f-da60-4fe6-bccd-2b20bce1e537.png в текстовом виде)
</data/uploads/bef9e46f-da60-4fe6-bccd-2b20bce1e537.png>


<data/uploads/bfe97123-264c-464c-b6b9-9b69639ecac6.jpg>
# (не удалось прочитать data/uploads/bfe97123-264c-464c-b6b9-9b69639ecac6.jpg в текстовом виде)
</data/uploads/bfe97123-264c-464c-b6b9-9b69639ecac6.jpg>


<data/uploads/c0cdb681-eee6-447e-9eb1-1efcb2d0a7da.png>
# (не удалось прочитать data/uploads/c0cdb681-eee6-447e-9eb1-1efcb2d0a7da.png в текстовом виде)
</data/uploads/c0cdb681-eee6-447e-9eb1-1efcb2d0a7da.png>


<data/uploads/c1160c9b-01f3-4abb-b7ae-b0b057fa9b6d.png>
# (не удалось прочитать data/uploads/c1160c9b-01f3-4abb-b7ae-b0b057fa9b6d.png в текстовом виде)
</data/uploads/c1160c9b-01f3-4abb-b7ae-b0b057fa9b6d.png>


<data/uploads/c129257a-a5c2-4765-ae12-b7b7b8029092.png>
# (не удалось прочитать data/uploads/c129257a-a5c2-4765-ae12-b7b7b8029092.png в текстовом виде)
</data/uploads/c129257a-a5c2-4765-ae12-b7b7b8029092.png>


<data/uploads/c24e5ce4-4ac7-4478-ac88-50fa4ac5e7d3.jpg>
# (не удалось прочитать data/uploads/c24e5ce4-4ac7-4478-ac88-50fa4ac5e7d3.jpg в текстовом виде)
</data/uploads/c24e5ce4-4ac7-4478-ac88-50fa4ac5e7d3.jpg>


<data/uploads/c50fd8dc-a42e-4b24-be60-5b483d0e7f62.png>
# (не удалось прочитать data/uploads/c50fd8dc-a42e-4b24-be60-5b483d0e7f62.png в текстовом виде)
</data/uploads/c50fd8dc-a42e-4b24-be60-5b483d0e7f62.png>


<data/uploads/c62c4ed3-60cf-413e-bc9b-927af2f02adf.jpg>
# (не удалось прочитать data/uploads/c62c4ed3-60cf-413e-bc9b-927af2f02adf.jpg в текстовом виде)
</data/uploads/c62c4ed3-60cf-413e-bc9b-927af2f02adf.jpg>


<data/uploads/c64be1a5-0fd1-4962-9fb2-a1bf73ad889c.png>
# (не удалось прочитать data/uploads/c64be1a5-0fd1-4962-9fb2-a1bf73ad889c.png в текстовом виде)
</data/uploads/c64be1a5-0fd1-4962-9fb2-a1bf73ad889c.png>


<data/uploads/c7f48640-f76f-40f9-b090-bca9da784228.png>
# (не удалось прочитать data/uploads/c7f48640-f76f-40f9-b090-bca9da784228.png в текстовом виде)
</data/uploads/c7f48640-f76f-40f9-b090-bca9da784228.png>


<data/uploads/c94d1706-3444-4c8a-bc21-b4f56a4723a4.jpg>
# (не удалось прочитать data/uploads/c94d1706-3444-4c8a-bc21-b4f56a4723a4.jpg в текстовом виде)
</data/uploads/c94d1706-3444-4c8a-bc21-b4f56a4723a4.jpg>


<data/uploads/c968b36b-6335-44c4-9691-3680473b0f65.png>
# (не удалось прочитать data/uploads/c968b36b-6335-44c4-9691-3680473b0f65.png в текстовом виде)
</data/uploads/c968b36b-6335-44c4-9691-3680473b0f65.png>


<data/uploads/ca6eebda-a8ba-4fd6-ab9c-dd04967cac32.png>
﻿<?xml version="1.0" encoding="utf-8"?><Error><Code>AuthenticationFailed</Code><Message>Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.
RequestId:98b31ca2-901e-0099-6808-f47360000000
Time:2025-07-13T15:11:52.3940475Z</Message><AuthenticationErrorDetail>Signed expiry time [Sun, 13 Jul 2025 14:58:10 GMT] must be after signed start time [Sun, 13 Jul 2025 15:11:52 GMT]</AuthenticationErrorDetail></Error></data/uploads/ca6eebda-a8ba-4fd6-ab9c-dd04967cac32.png>


<data/uploads/ca722832-5264-4255-82e8-64217c7e089f.jpg>
# (не удалось прочитать data/uploads/ca722832-5264-4255-82e8-64217c7e089f.jpg в текстовом виде)
</data/uploads/ca722832-5264-4255-82e8-64217c7e089f.jpg>


<data/uploads/ca7e36fd-d21d-4178-a161-b40c4db626a6.jpg>
# (не удалось прочитать data/uploads/ca7e36fd-d21d-4178-a161-b40c4db626a6.jpg в текстовом виде)
</data/uploads/ca7e36fd-d21d-4178-a161-b40c4db626a6.jpg>


<data/uploads/cb23ff56-a541-4ea1-bf91-ad89e8078914.png>
# (не удалось прочитать data/uploads/cb23ff56-a541-4ea1-bf91-ad89e8078914.png в текстовом виде)
</data/uploads/cb23ff56-a541-4ea1-bf91-ad89e8078914.png>


<data/uploads/cbbe8fba-ffa8-48db-85cb-3d1c9f9bf910.jpg>
# (не удалось прочитать data/uploads/cbbe8fba-ffa8-48db-85cb-3d1c9f9bf910.jpg в текстовом виде)
</data/uploads/cbbe8fba-ffa8-48db-85cb-3d1c9f9bf910.jpg>


<data/uploads/cbd048b4-fee0-4910-b07b-afbf5f5080a4.jpg>
# (не удалось прочитать data/uploads/cbd048b4-fee0-4910-b07b-afbf5f5080a4.jpg в текстовом виде)
</data/uploads/cbd048b4-fee0-4910-b07b-afbf5f5080a4.jpg>


<data/uploads/cc28c675-794b-4ec3-8fbd-54a4c30b9091.png>
# (не удалось прочитать data/uploads/cc28c675-794b-4ec3-8fbd-54a4c30b9091.png в текстовом виде)
</data/uploads/cc28c675-794b-4ec3-8fbd-54a4c30b9091.png>


<data/uploads/cccc2dd2-d830-4bd8-9da0-6bb2de806b4b.jpg>
# (не удалось прочитать data/uploads/cccc2dd2-d830-4bd8-9da0-6bb2de806b4b.jpg в текстовом виде)
</data/uploads/cccc2dd2-d830-4bd8-9da0-6bb2de806b4b.jpg>


<data/uploads/cd2b0753-b308-48b7-b154-8591cdeff4c1.jpg>
# (не удалось прочитать data/uploads/cd2b0753-b308-48b7-b154-8591cdeff4c1.jpg в текстовом виде)
</data/uploads/cd2b0753-b308-48b7-b154-8591cdeff4c1.jpg>


<data/uploads/ce01edb3-579c-46b4-8246-0e838042c784.png>
# (не удалось прочитать data/uploads/ce01edb3-579c-46b4-8246-0e838042c784.png в текстовом виде)
</data/uploads/ce01edb3-579c-46b4-8246-0e838042c784.png>


<data/uploads/ce2488ea-3d20-4735-801a-1037f3996875.jpg>
# (не удалось прочитать data/uploads/ce2488ea-3d20-4735-801a-1037f3996875.jpg в текстовом виде)
</data/uploads/ce2488ea-3d20-4735-801a-1037f3996875.jpg>


<data/uploads/cefc454a-7a3a-4143-b2d3-e3b9b513c174.jpg>
# (не удалось прочитать data/uploads/cefc454a-7a3a-4143-b2d3-e3b9b513c174.jpg в текстовом виде)
</data/uploads/cefc454a-7a3a-4143-b2d3-e3b9b513c174.jpg>


<data/uploads/cf29fd4e-dff3-4165-b7bf-a4e344a473d3.png>
# (не удалось прочитать data/uploads/cf29fd4e-dff3-4165-b7bf-a4e344a473d3.png в текстовом виде)
</data/uploads/cf29fd4e-dff3-4165-b7bf-a4e344a473d3.png>


<data/uploads/cff6f6c1-f772-4772-9c12-f302efa88c33.jpg>
# (не удалось прочитать data/uploads/cff6f6c1-f772-4772-9c12-f302efa88c33.jpg в текстовом виде)
</data/uploads/cff6f6c1-f772-4772-9c12-f302efa88c33.jpg>


<data/uploads/d0566b56-2e99-4893-9a39-1e37f1d4fc69.jpg>
# (не удалось прочитать data/uploads/d0566b56-2e99-4893-9a39-1e37f1d4fc69.jpg в текстовом виде)
</data/uploads/d0566b56-2e99-4893-9a39-1e37f1d4fc69.jpg>


<data/uploads/d0ca7926-9677-44e8-8f27-0522d8a58870.png>
# (не удалось прочитать data/uploads/d0ca7926-9677-44e8-8f27-0522d8a58870.png в текстовом виде)
</data/uploads/d0ca7926-9677-44e8-8f27-0522d8a58870.png>


<data/uploads/d0e26d5b-b858-47da-aea1-ecba811e28c0.png>
# (не удалось прочитать data/uploads/d0e26d5b-b858-47da-aea1-ecba811e28c0.png в текстовом виде)
</data/uploads/d0e26d5b-b858-47da-aea1-ecba811e28c0.png>


<data/uploads/d0f0a38f-0878-4564-83be-bcad9d7ba1df.jpg>
# (не удалось прочитать data/uploads/d0f0a38f-0878-4564-83be-bcad9d7ba1df.jpg в текстовом виде)
</data/uploads/d0f0a38f-0878-4564-83be-bcad9d7ba1df.jpg>


<data/uploads/d130479f-a402-40a1-8697-8c90f63fccf3.png>
# (не удалось прочитать data/uploads/d130479f-a402-40a1-8697-8c90f63fccf3.png в текстовом виде)
</data/uploads/d130479f-a402-40a1-8697-8c90f63fccf3.png>


<data/uploads/d1c90763-c56a-43bb-807e-8e43f15928b1.jpg>
# (не удалось прочитать data/uploads/d1c90763-c56a-43bb-807e-8e43f15928b1.jpg в текстовом виде)
</data/uploads/d1c90763-c56a-43bb-807e-8e43f15928b1.jpg>


<data/uploads/d35a71fe-3410-407c-be11-baed35e2773e.jpg>
# (не удалось прочитать data/uploads/d35a71fe-3410-407c-be11-baed35e2773e.jpg в текстовом виде)
</data/uploads/d35a71fe-3410-407c-be11-baed35e2773e.jpg>


<data/uploads/d43e51a3-9ff2-4c35-89a2-f3fd14bb4532.jpg>
# (не удалось прочитать data/uploads/d43e51a3-9ff2-4c35-89a2-f3fd14bb4532.jpg в текстовом виде)
</data/uploads/d43e51a3-9ff2-4c35-89a2-f3fd14bb4532.jpg>


<data/uploads/d46bf3be-e57d-40f3-bedc-f4ddac1fa00e.png>
# (не удалось прочитать data/uploads/d46bf3be-e57d-40f3-bedc-f4ddac1fa00e.png в текстовом виде)
</data/uploads/d46bf3be-e57d-40f3-bedc-f4ddac1fa00e.png>


<data/uploads/d4d899a6-e579-4dc0-ba97-a362ce5730ae.jpg>
# (не удалось прочитать data/uploads/d4d899a6-e579-4dc0-ba97-a362ce5730ae.jpg в текстовом виде)
</data/uploads/d4d899a6-e579-4dc0-ba97-a362ce5730ae.jpg>


<data/uploads/d5b8ef89-d66e-4675-97fe-ea16aa7f8514.png>
# (не удалось прочитать data/uploads/d5b8ef89-d66e-4675-97fe-ea16aa7f8514.png в текстовом виде)
</data/uploads/d5b8ef89-d66e-4675-97fe-ea16aa7f8514.png>


<data/uploads/d5cc29b6-881a-466b-9b4c-fe57a5b87638.png>
# (не удалось прочитать data/uploads/d5cc29b6-881a-466b-9b4c-fe57a5b87638.png в текстовом виде)
</data/uploads/d5cc29b6-881a-466b-9b4c-fe57a5b87638.png>


<data/uploads/d683ca9b-7a99-42ba-870b-4ed8fcecf533.png>
﻿<?xml version="1.0" encoding="utf-8"?><Error><Code>AuthenticationFailed</Code><Message>Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.
RequestId:c42eefe8-e01e-0012-098e-f3c67c000000
Time:2025-07-13T00:37:42.8920166Z</Message><AuthenticationErrorDetail>Signed expiry time [Sat, 12 Jul 2025 23:54:32 GMT] must be after signed start time [Sun, 13 Jul 2025 00:37:42 GMT]</AuthenticationErrorDetail></Error></data/uploads/d683ca9b-7a99-42ba-870b-4ed8fcecf533.png>


<data/uploads/d781653a-837b-4e02-91f2-b19905e13210.jpg>
# (не удалось прочитать data/uploads/d781653a-837b-4e02-91f2-b19905e13210.jpg в текстовом виде)
</data/uploads/d781653a-837b-4e02-91f2-b19905e13210.jpg>


<data/uploads/d80a65b6-7ae9-4937-9291-6103fcbde76f.png>
# (не удалось прочитать data/uploads/d80a65b6-7ae9-4937-9291-6103fcbde76f.png в текстовом виде)
</data/uploads/d80a65b6-7ae9-4937-9291-6103fcbde76f.png>


<data/uploads/d8199d92-a6cc-434c-b019-53a3a7c62b95.png>
# (не удалось прочитать data/uploads/d8199d92-a6cc-434c-b019-53a3a7c62b95.png в текстовом виде)
</data/uploads/d8199d92-a6cc-434c-b019-53a3a7c62b95.png>


<data/uploads/d921adc5-4788-4133-9772-ba0715e505db.jpg>
# (не удалось прочитать data/uploads/d921adc5-4788-4133-9772-ba0715e505db.jpg в текстовом виде)
</data/uploads/d921adc5-4788-4133-9772-ba0715e505db.jpg>


<data/uploads/d9299f26-da6f-4736-b686-59212a02a87e.png>
# (не удалось прочитать data/uploads/d9299f26-da6f-4736-b686-59212a02a87e.png в текстовом виде)
</data/uploads/d9299f26-da6f-4736-b686-59212a02a87e.png>


<data/uploads/d9cd6668-34ed-4d30-a60d-6c19677fd176.png>
# (не удалось прочитать data/uploads/d9cd6668-34ed-4d30-a60d-6c19677fd176.png в текстовом виде)
</data/uploads/d9cd6668-34ed-4d30-a60d-6c19677fd176.png>


<data/uploads/da5c8fb0-b413-4a69-a81b-a48da241d62c.png>
# (не удалось прочитать data/uploads/da5c8fb0-b413-4a69-a81b-a48da241d62c.png в текстовом виде)
</data/uploads/da5c8fb0-b413-4a69-a81b-a48da241d62c.png>


<data/uploads/daffdc06-2a9e-4e28-b87a-fcc76277fdc9.png>
# (не удалось прочитать data/uploads/daffdc06-2a9e-4e28-b87a-fcc76277fdc9.png в текстовом виде)
</data/uploads/daffdc06-2a9e-4e28-b87a-fcc76277fdc9.png>


<data/uploads/db4478d3-3602-4737-9c7c-eabff9f14ffb.png>
# (не удалось прочитать data/uploads/db4478d3-3602-4737-9c7c-eabff9f14ffb.png в текстовом виде)
</data/uploads/db4478d3-3602-4737-9c7c-eabff9f14ffb.png>


<data/uploads/db6dd414-dfbe-48eb-b5b7-2464891a488b.png>
# (не удалось прочитать data/uploads/db6dd414-dfbe-48eb-b5b7-2464891a488b.png в текстовом виде)
</data/uploads/db6dd414-dfbe-48eb-b5b7-2464891a488b.png>


<data/uploads/dc419344-dbc2-4f61-b69c-dd6804601c97.jpg>
# (не удалось прочитать data/uploads/dc419344-dbc2-4f61-b69c-dd6804601c97.jpg в текстовом виде)
</data/uploads/dc419344-dbc2-4f61-b69c-dd6804601c97.jpg>


<data/uploads/dc6303d6-359c-4714-b3e2-84b080927167.jpg>
# (не удалось прочитать data/uploads/dc6303d6-359c-4714-b3e2-84b080927167.jpg в текстовом виде)
</data/uploads/dc6303d6-359c-4714-b3e2-84b080927167.jpg>


<data/uploads/dd224d98-d86e-40af-8978-d154950a175d.jpg>
# (не удалось прочитать data/uploads/dd224d98-d86e-40af-8978-d154950a175d.jpg в текстовом виде)
</data/uploads/dd224d98-d86e-40af-8978-d154950a175d.jpg>


<data/uploads/dd590c20-4da2-42bd-b8c4-b75dc7eab1ba.jpg>
# (не удалось прочитать data/uploads/dd590c20-4da2-42bd-b8c4-b75dc7eab1ba.jpg в текстовом виде)
</data/uploads/dd590c20-4da2-42bd-b8c4-b75dc7eab1ba.jpg>


<data/uploads/dd59ec48-2b3f-46ad-b095-f46b456209ab.jpg>
# (не удалось прочитать data/uploads/dd59ec48-2b3f-46ad-b095-f46b456209ab.jpg в текстовом виде)
</data/uploads/dd59ec48-2b3f-46ad-b095-f46b456209ab.jpg>


<data/uploads/dd82b31b-0c16-46a2-be02-911db23b09eb.png>
# (не удалось прочитать data/uploads/dd82b31b-0c16-46a2-be02-911db23b09eb.png в текстовом виде)
</data/uploads/dd82b31b-0c16-46a2-be02-911db23b09eb.png>


<data/uploads/deb0fec0-1acf-4372-86d3-6fb61dba2c99.png>
# (не удалось прочитать data/uploads/deb0fec0-1acf-4372-86d3-6fb61dba2c99.png в текстовом виде)
</data/uploads/deb0fec0-1acf-4372-86d3-6fb61dba2c99.png>


<data/uploads/df893dbb-0970-4e1a-b42d-c4991887052c.jpg>
# (не удалось прочитать data/uploads/df893dbb-0970-4e1a-b42d-c4991887052c.jpg в текстовом виде)
</data/uploads/df893dbb-0970-4e1a-b42d-c4991887052c.jpg>


<data/uploads/dfd958b3-468a-48f5-a74a-b0a05ebb3f68.jpg>
# (не удалось прочитать data/uploads/dfd958b3-468a-48f5-a74a-b0a05ebb3f68.jpg в текстовом виде)
</data/uploads/dfd958b3-468a-48f5-a74a-b0a05ebb3f68.jpg>


<data/uploads/e0214b05-78a8-4e9d-b114-0e02e74c3858.jpg>
# (не удалось прочитать data/uploads/e0214b05-78a8-4e9d-b114-0e02e74c3858.jpg в текстовом виде)
</data/uploads/e0214b05-78a8-4e9d-b114-0e02e74c3858.jpg>


<data/uploads/e0b6e222-c382-4b81-a877-0effb62f1452.png>
# (не удалось прочитать data/uploads/e0b6e222-c382-4b81-a877-0effb62f1452.png в текстовом виде)
</data/uploads/e0b6e222-c382-4b81-a877-0effb62f1452.png>


<data/uploads/e1abbb8f-dcac-4952-9659-96e9fd9a199a.png>
# (не удалось прочитать data/uploads/e1abbb8f-dcac-4952-9659-96e9fd9a199a.png в текстовом виде)
</data/uploads/e1abbb8f-dcac-4952-9659-96e9fd9a199a.png>


<data/uploads/e301ea1c-e2a7-4011-aa2d-bc2d03e6adab.png>
# (не удалось прочитать data/uploads/e301ea1c-e2a7-4011-aa2d-bc2d03e6adab.png в текстовом виде)
</data/uploads/e301ea1c-e2a7-4011-aa2d-bc2d03e6adab.png>


<data/uploads/e5df4021-a8fd-4df7-82d0-538edcf09c84.png>
# (не удалось прочитать data/uploads/e5df4021-a8fd-4df7-82d0-538edcf09c84.png в текстовом виде)
</data/uploads/e5df4021-a8fd-4df7-82d0-538edcf09c84.png>


<data/uploads/e68fa9f0-8fb5-4c9f-bcec-a3a0ff9947f3.jpg>
# (не удалось прочитать data/uploads/e68fa9f0-8fb5-4c9f-bcec-a3a0ff9947f3.jpg в текстовом виде)
</data/uploads/e68fa9f0-8fb5-4c9f-bcec-a3a0ff9947f3.jpg>


<data/uploads/e86365c0-7712-46d7-a5ba-3fe0c9a30f7c.png>
# (не удалось прочитать data/uploads/e86365c0-7712-46d7-a5ba-3fe0c9a30f7c.png в текстовом виде)
</data/uploads/e86365c0-7712-46d7-a5ba-3fe0c9a30f7c.png>


<data/uploads/e8737af0-d8c1-4d64-81cb-cdc28749223c.jpg>
# (не удалось прочитать data/uploads/e8737af0-d8c1-4d64-81cb-cdc28749223c.jpg в текстовом виде)
</data/uploads/e8737af0-d8c1-4d64-81cb-cdc28749223c.jpg>


<data/uploads/e88f7898-6edc-4074-8201-04678b99073d.png>
# (не удалось прочитать data/uploads/e88f7898-6edc-4074-8201-04678b99073d.png в текстовом виде)
</data/uploads/e88f7898-6edc-4074-8201-04678b99073d.png>


<data/uploads/e91f0d8f-0daf-4225-aa5f-a12369461272.png>
# (не удалось прочитать data/uploads/e91f0d8f-0daf-4225-aa5f-a12369461272.png в текстовом виде)
</data/uploads/e91f0d8f-0daf-4225-aa5f-a12369461272.png>


<data/uploads/e930dbf4-8366-4f10-b826-d44c8744b67c.jpg>
# (не удалось прочитать data/uploads/e930dbf4-8366-4f10-b826-d44c8744b67c.jpg в текстовом виде)
</data/uploads/e930dbf4-8366-4f10-b826-d44c8744b67c.jpg>


<data/uploads/e9c270c7-c6c1-4bc7-9624-5e4a4331e31c.png>
# (не удалось прочитать data/uploads/e9c270c7-c6c1-4bc7-9624-5e4a4331e31c.png в текстовом виде)
</data/uploads/e9c270c7-c6c1-4bc7-9624-5e4a4331e31c.png>


<data/uploads/ea205b14-3e4a-48cd-acb5-402877eb7421.png>
# (не удалось прочитать data/uploads/ea205b14-3e4a-48cd-acb5-402877eb7421.png в текстовом виде)
</data/uploads/ea205b14-3e4a-48cd-acb5-402877eb7421.png>


<data/uploads/ea73e88e-b273-4cf4-a95d-4b259ee19172.jpg>
# (не удалось прочитать data/uploads/ea73e88e-b273-4cf4-a95d-4b259ee19172.jpg в текстовом виде)
</data/uploads/ea73e88e-b273-4cf4-a95d-4b259ee19172.jpg>


<data/uploads/ea82cca4-561c-4954-a9e1-9fbcddb86977.jpg>
# (не удалось прочитать data/uploads/ea82cca4-561c-4954-a9e1-9fbcddb86977.jpg в текстовом виде)
</data/uploads/ea82cca4-561c-4954-a9e1-9fbcddb86977.jpg>


<data/uploads/eb89a00a-a13c-459b-81c3-61ad94bb2a57.png>
# (не удалось прочитать data/uploads/eb89a00a-a13c-459b-81c3-61ad94bb2a57.png в текстовом виде)
</data/uploads/eb89a00a-a13c-459b-81c3-61ad94bb2a57.png>


<data/uploads/ebaa3335-f797-4060-8a64-273b23f1272a.jpg>
# (не удалось прочитать data/uploads/ebaa3335-f797-4060-8a64-273b23f1272a.jpg в текстовом виде)
</data/uploads/ebaa3335-f797-4060-8a64-273b23f1272a.jpg>


<data/uploads/ec6f6b3a-2d4d-4754-a4c1-91775da99073.jpg>
# (не удалось прочитать data/uploads/ec6f6b3a-2d4d-4754-a4c1-91775da99073.jpg в текстовом виде)
</data/uploads/ec6f6b3a-2d4d-4754-a4c1-91775da99073.jpg>


<data/uploads/ecc9da62-784c-4d8c-9985-d2303c5dbb6b.png>
# (не удалось прочитать data/uploads/ecc9da62-784c-4d8c-9985-d2303c5dbb6b.png в текстовом виде)
</data/uploads/ecc9da62-784c-4d8c-9985-d2303c5dbb6b.png>


<data/uploads/ef65a723-6093-4fbc-a8b1-c3a041a75a37.png>
# (не удалось прочитать data/uploads/ef65a723-6093-4fbc-a8b1-c3a041a75a37.png в текстовом виде)
</data/uploads/ef65a723-6093-4fbc-a8b1-c3a041a75a37.png>


<data/uploads/efca2431-d0bf-4c84-8ebb-ff5fdf6d9416.png>
# (не удалось прочитать data/uploads/efca2431-d0bf-4c84-8ebb-ff5fdf6d9416.png в текстовом виде)
</data/uploads/efca2431-d0bf-4c84-8ebb-ff5fdf6d9416.png>


<data/uploads/f061a5ce-de21-427c-bdb8-472a8269d954.png>
# (не удалось прочитать data/uploads/f061a5ce-de21-427c-bdb8-472a8269d954.png в текстовом виде)
</data/uploads/f061a5ce-de21-427c-bdb8-472a8269d954.png>


<data/uploads/f079af36-9361-4407-b5e0-da4fd73a0907.png>
# (не удалось прочитать data/uploads/f079af36-9361-4407-b5e0-da4fd73a0907.png в текстовом виде)
</data/uploads/f079af36-9361-4407-b5e0-da4fd73a0907.png>


<data/uploads/f0905a80-f0b8-4519-a674-7f9c54dddb3e.jpg>
# (не удалось прочитать data/uploads/f0905a80-f0b8-4519-a674-7f9c54dddb3e.jpg в текстовом виде)
</data/uploads/f0905a80-f0b8-4519-a674-7f9c54dddb3e.jpg>


<data/uploads/f0b6f861-da34-4d43-bb8e-9985f79f3e82.jpg>
# (не удалось прочитать data/uploads/f0b6f861-da34-4d43-bb8e-9985f79f3e82.jpg в текстовом виде)
</data/uploads/f0b6f861-da34-4d43-bb8e-9985f79f3e82.jpg>


<data/uploads/f1184a2e-09fb-409f-95a1-019d431a7b50.png>
# (не удалось прочитать data/uploads/f1184a2e-09fb-409f-95a1-019d431a7b50.png в текстовом виде)
</data/uploads/f1184a2e-09fb-409f-95a1-019d431a7b50.png>


<data/uploads/f1e1f8bb-eea4-45b7-9329-e8c5bcf7fcd0.jpg>
# (не удалось прочитать data/uploads/f1e1f8bb-eea4-45b7-9329-e8c5bcf7fcd0.jpg в текстовом виде)
</data/uploads/f1e1f8bb-eea4-45b7-9329-e8c5bcf7fcd0.jpg>


<data/uploads/f2066c38-cb5e-467b-9f19-38ec2a46adfc.png>
# (не удалось прочитать data/uploads/f2066c38-cb5e-467b-9f19-38ec2a46adfc.png в текстовом виде)
</data/uploads/f2066c38-cb5e-467b-9f19-38ec2a46adfc.png>


<data/uploads/f24b4d1c-4904-4daa-9151-6218fbc9cb9b.jpg>
# (не удалось прочитать data/uploads/f24b4d1c-4904-4daa-9151-6218fbc9cb9b.jpg в текстовом виде)
</data/uploads/f24b4d1c-4904-4daa-9151-6218fbc9cb9b.jpg>


<data/uploads/f28dc269-8458-471d-95a9-46acae71d829.jpg>
# (не удалось прочитать data/uploads/f28dc269-8458-471d-95a9-46acae71d829.jpg в текстовом виде)
</data/uploads/f28dc269-8458-471d-95a9-46acae71d829.jpg>


<data/uploads/f34201f1-e152-44b3-ba79-d5b578d6d662.jpg>
# (не удалось прочитать data/uploads/f34201f1-e152-44b3-ba79-d5b578d6d662.jpg в текстовом виде)
</data/uploads/f34201f1-e152-44b3-ba79-d5b578d6d662.jpg>


<data/uploads/f394e77b-a741-4432-9bdf-393363ef784e.jpg>
# (не удалось прочитать data/uploads/f394e77b-a741-4432-9bdf-393363ef784e.jpg в текстовом виде)
</data/uploads/f394e77b-a741-4432-9bdf-393363ef784e.jpg>


<data/uploads/f3da2ff4-3711-4da7-baef-fcdd5bf60c99.jpg>
# (не удалось прочитать data/uploads/f3da2ff4-3711-4da7-baef-fcdd5bf60c99.jpg в текстовом виде)
</data/uploads/f3da2ff4-3711-4da7-baef-fcdd5bf60c99.jpg>


<data/uploads/f47a582b-22fb-4239-8277-acced2f00e11.jpg>
# (не удалось прочитать data/uploads/f47a582b-22fb-4239-8277-acced2f00e11.jpg в текстовом виде)
</data/uploads/f47a582b-22fb-4239-8277-acced2f00e11.jpg>


<data/uploads/f50a8648-bd36-4ef9-b2f6-71138507fb87.png>
# (не удалось прочитать data/uploads/f50a8648-bd36-4ef9-b2f6-71138507fb87.png в текстовом виде)
</data/uploads/f50a8648-bd36-4ef9-b2f6-71138507fb87.png>


<data/uploads/f594d80f-2551-4d41-bc57-7f8b0bce1274.jpg>
# (не удалось прочитать data/uploads/f594d80f-2551-4d41-bc57-7f8b0bce1274.jpg в текстовом виде)
</data/uploads/f594d80f-2551-4d41-bc57-7f8b0bce1274.jpg>


<data/uploads/f686749b-d196-445a-8c58-f0718adbf905.png>
# (не удалось прочитать data/uploads/f686749b-d196-445a-8c58-f0718adbf905.png в текстовом виде)
</data/uploads/f686749b-d196-445a-8c58-f0718adbf905.png>


<data/uploads/f6b48b3f-2740-446c-9158-90502c21a255.jpg>
# (не удалось прочитать data/uploads/f6b48b3f-2740-446c-9158-90502c21a255.jpg в текстовом виде)
</data/uploads/f6b48b3f-2740-446c-9158-90502c21a255.jpg>


<data/uploads/f78a6d92-57d3-4ee0-a4d9-b99f41d21800.jpg>
# (не удалось прочитать data/uploads/f78a6d92-57d3-4ee0-a4d9-b99f41d21800.jpg в текстовом виде)
</data/uploads/f78a6d92-57d3-4ee0-a4d9-b99f41d21800.jpg>


<data/uploads/f855e145-fa50-40e0-ac99-990280ed3375.jpg>
# (не удалось прочитать data/uploads/f855e145-fa50-40e0-ac99-990280ed3375.jpg в текстовом виде)
</data/uploads/f855e145-fa50-40e0-ac99-990280ed3375.jpg>


<data/uploads/f8af9f5e-7583-4149-a746-b6c9ca0c2b9d.jpg>
# (не удалось прочитать data/uploads/f8af9f5e-7583-4149-a746-b6c9ca0c2b9d.jpg в текстовом виде)
</data/uploads/f8af9f5e-7583-4149-a746-b6c9ca0c2b9d.jpg>


<data/uploads/f9a91c2b-6ec1-4680-88c9-212ef6f605e9.jpg>
# (не удалось прочитать data/uploads/f9a91c2b-6ec1-4680-88c9-212ef6f605e9.jpg в текстовом виде)
</data/uploads/f9a91c2b-6ec1-4680-88c9-212ef6f605e9.jpg>


<data/uploads/fa4f27be-8a10-4647-b9f6-5b4823c6bf4b.jpg>
# (не удалось прочитать data/uploads/fa4f27be-8a10-4647-b9f6-5b4823c6bf4b.jpg в текстовом виде)
</data/uploads/fa4f27be-8a10-4647-b9f6-5b4823c6bf4b.jpg>


<data/uploads/fa7388b3-55e8-407d-8c35-e50fedf3f5fd.png>
# (не удалось прочитать data/uploads/fa7388b3-55e8-407d-8c35-e50fedf3f5fd.png в текстовом виде)
</data/uploads/fa7388b3-55e8-407d-8c35-e50fedf3f5fd.png>


<data/uploads/fbec9615-054d-4b7e-8b61-11afe85c57b9.jpg>
# (не удалось прочитать data/uploads/fbec9615-054d-4b7e-8b61-11afe85c57b9.jpg в текстовом виде)
</data/uploads/fbec9615-054d-4b7e-8b61-11afe85c57b9.jpg>


<data/uploads/fc00d8ba-176e-4a11-b41c-94a77a2c6f77.jpg>
# (не удалось прочитать data/uploads/fc00d8ba-176e-4a11-b41c-94a77a2c6f77.jpg в текстовом виде)
</data/uploads/fc00d8ba-176e-4a11-b41c-94a77a2c6f77.jpg>


<data/uploads/fc4b5ee1-499c-419c-b830-0aa4b9412b3e.jpg>
# (не удалось прочитать data/uploads/fc4b5ee1-499c-419c-b830-0aa4b9412b3e.jpg в текстовом виде)
</data/uploads/fc4b5ee1-499c-419c-b830-0aa4b9412b3e.jpg>


<data/uploads/fc58918f-dd19-4395-8a6b-4cd01c4550c7.png>
# (не удалось прочитать data/uploads/fc58918f-dd19-4395-8a6b-4cd01c4550c7.png в текстовом виде)
</data/uploads/fc58918f-dd19-4395-8a6b-4cd01c4550c7.png>


<data/uploads/fc609978-3167-4200-89ec-39a8816d3120.png>
# (не удалось прочитать data/uploads/fc609978-3167-4200-89ec-39a8816d3120.png в текстовом виде)
</data/uploads/fc609978-3167-4200-89ec-39a8816d3120.png>


<data/uploads/fc98e1b2-d13d-4684-8ad7-368a3db61c4f.png>
# (не удалось прочитать data/uploads/fc98e1b2-d13d-4684-8ad7-368a3db61c4f.png в текстовом виде)
</data/uploads/fc98e1b2-d13d-4684-8ad7-368a3db61c4f.png>


<data/uploads/fce0caf5-b7c7-4bd6-8d15-08b1bc35277a.png>
# (не удалось прочитать data/uploads/fce0caf5-b7c7-4bd6-8d15-08b1bc35277a.png в текстовом виде)
</data/uploads/fce0caf5-b7c7-4bd6-8d15-08b1bc35277a.png>


<data/uploads/fcf0b566-71e4-4b63-8c09-4bbd4c5aa869.jpg>
# (не удалось прочитать data/uploads/fcf0b566-71e4-4b63-8c09-4bbd4c5aa869.jpg в текстовом виде)
</data/uploads/fcf0b566-71e4-4b63-8c09-4bbd4c5aa869.jpg>


<data/uploads/fd3f528c-9974-454b-8d9e-2d7b72611cda.png>
# (не удалось прочитать data/uploads/fd3f528c-9974-454b-8d9e-2d7b72611cda.png в текстовом виде)
</data/uploads/fd3f528c-9974-454b-8d9e-2d7b72611cda.png>


<data/uploads/fd6d43df-d632-4904-9a00-2fffcaaef1b6.jpg>
# (не удалось прочитать data/uploads/fd6d43df-d632-4904-9a00-2fffcaaef1b6.jpg в текстовом виде)
</data/uploads/fd6d43df-d632-4904-9a00-2fffcaaef1b6.jpg>


<data/uploads/fecd64ed-ec39-487f-a18f-d110998c94e7.jpg>
# (не удалось прочитать data/uploads/fecd64ed-ec39-487f-a18f-d110998c94e7.jpg в текстовом виде)
</data/uploads/fecd64ed-ec39-487f-a18f-d110998c94e7.jpg>


<data/uploads/ffd9dd5f-68bc-44d6-8fd4-9e031f25af88.jpg>
# (не удалось прочитать data/uploads/ffd9dd5f-68bc-44d6-8fd4-9e031f25af88.jpg в текстовом виде)
</data/uploads/ffd9dd5f-68bc-44d6-8fd4-9e031f25af88.jpg>


<data/uploads/ffe3cb8d-8c8d-43a6-a031-9cdc5d45cc98.jpg>
# (не удалось прочитать data/uploads/ffe3cb8d-8c8d-43a6-a031-9cdc5d45cc98.jpg в текстовом виде)
</data/uploads/ffe3cb8d-8c8d-43a6-a031-9cdc5d45cc98.jpg>


<models/manga_bubble_detector_best.pt>
# (не удалось прочитать models/manga_bubble_detector_best.pt в текстовом виде)
</models/manga_bubble_detector_best.pt>


<__pycache__/config.cpython-313.pyc>
# (не удалось прочитать __pycache__/config.cpython-313.pyc в текстовом виде)
</__pycache__/config.cpython-313.pyc>


<static/styles.css>
/* Основные стили для приложения */
.main-header {
    text-align: center;
    color: #2E7D32;
    margin-bottom: 2rem;
}

.upload-section {
    border: 2px dashed #cccccc;
    border-radius: 10px;
    padding: 2rem;
    text-align: center;
    margin-bottom: 2rem;
}

.result-box {
    background-color: #f8f9fa;
    border-radius: 10px;
    padding: 1rem;
    margin: 1rem 0;
    border-left: 4px solid #2E7D32;
}

.bubble-info {
    background-color: #ffffff;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 1rem;
    margin: 0.5rem 0;
}

.stats-container {
    display: flex;
    justify-content: space-around;
    margin: 1rem 0;
}

.stat-item {
    text-align: center;
    padding: 1rem;
    background-color: #e3f2fd;
    border-radius: 8px;
}</static/styles.css>


