# setup_check.py - –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã
import sys
import subprocess
import importlib.util

def check_package(package_name, import_name=None):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞"""
    if import_name is None:
        import_name = package_name
    
    try:
        spec = importlib.util.find_spec(import_name)
        if spec is not None:
            print(f"‚úÖ {package_name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return True
        else:
            print(f"‚ùå {package_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    except ImportError:
        print(f"‚ùå {package_name} –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å")
        return False

def check_tesseract():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Tesseract OCR"""
    try:
        import pytesseract
        version = pytesseract.get_tesseract_version()
        print(f"‚úÖ Tesseract –≤–µ—Ä—Å–∏—è {version} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except Exception as e:
        print(f"‚ùå Tesseract –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Tesseract:")
        print("   Ubuntu/Debian: sudo apt-get install tesseract-ocr tesseract-ocr-jpn tesseract-ocr-kor")
        print("   macOS: brew install tesseract tesseract-lang")
        print("   Windows: —Å–∫–∞—á–∞–π—Ç–µ —Å https://github.com/UB-Mannheim/tesseract/wiki")
        return False

def fix_googletrans_conflict():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ googletrans —Å httpx"""
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ googletrans...")
    try:
        subprocess.run([sys.executable, "-m", "pip", "uninstall", "googletrans", "-y"], 
                      capture_output=True)
        print("‚úÖ googletrans —É–¥–∞–ª–µ–Ω (–∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞–ª —Å httpx)")
        print("‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è deep-translator –≤–º–µ—Å—Ç–æ googletrans")
        return True
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å googletrans: {e}")
        return False

def main():
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ –º–∞–Ω–≥–∏\n")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    packages = [
        ("streamlit", "streamlit"),
        ("torch", "torch"),
        ("ultralytics", "ultralytics"),
        ("opencv-python", "cv2"),
        ("Pillow", "PIL"),
        ("numpy", "numpy"),
    ]
    
    print("üì¶ –û—Å–Ω–æ–≤–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:")
    for package, import_name in packages:
        check_package(package, import_name)
    
    print("\nüî§ OCR –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:")
    ocr_packages = [
        ("paddlepaddle", "paddle"),
        ("paddleocr", "paddleocr"),
        ("easyocr", "easyocr"),
        ("pytesseract", "pytesseract"),
    ]
    
    for package, import_name in ocr_packages:
        check_package(package, import_name)
    
    print("\nüß™ Tesseract OCR:")
    check_tesseract()
    
    print("\nüåê –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫:")
    check_package("deep-translator", "deep_translator")
    
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤:")
    try:
        import googletrans
        print("‚ö†Ô∏è  googletrans –Ω–∞–π–¥–µ–Ω - –º–æ–∂–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å httpx")
        fix_googletrans_conflict()
    except ImportError:
        print("‚úÖ googletrans –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Ö–æ—Ä–æ—à–æ)")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏
    print("\nüéØ –ú–æ–¥–µ–ª—å –¥–µ—Ç–µ–∫—Ü–∏–∏:")
    import os
    model_path = "models/manga_bubble_detector_best.pt"
    if os.path.exists(model_path):
        print(f"‚úÖ –ú–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞: {model_path}")
    else:
        print(f"‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {model_path}")
        print("üí° –°–∫–∞—á–∞–π—Ç–µ –º–æ–¥–µ–ª—å –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫—É models/")
    
    print("\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: streamlit run app.py")

if __name__ == "__main__":
    main()